[
	{
		"name":"Conditional Expression",
		"category":"Logic",
		"image":"./images/ConditionalExpression.png",
		"description":"Evaluates a conditional expression and stores the result and/or sends an event upon evaluating true or false.\nSpecial thanks to Lea Hayes!",
		"params": [
			{
				"name":"Expression",
				"description":"Enter an expression to evaluate. \n\nExample: (a < b) && c\nTo reference variable names with spaces use: $(variable name with spaces)\nTo compare string values put the value in quotes. E.g., name == \"Bob\""
			},
			{
				"name":"Is True Event",
				"description":"Event to send if the result is True."
			},
			{
				"name":"Is False Event",
				"description":"Event to send if the result is False."
			},
			{
				"name":"Every Frame",
				"description":"Evaluate the expression every frame while the state is active."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Missing Action",
		"category":"Debug",
		"image":"./images/MissingAction.png",
		"description":"Placeholder for a missing action.\nThis action is usually generated when the editor can't load an action, e.g., if the script was deleted.\nYou could also use this action as a TODO note to yourself.\nTIP: The realtime error checker lists Missing Actions, making them very easy to find.\nNOTE: The original action data is NOT preserved after you save your project! To fix a missing action, restore the action script, then reload your project.",
		"params": [
			{
				"name":"Action Name",
				"description":"The name of the missing action."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Analytics Send Custom Event",
		"category":"Analytics",
		"image":"./images/AnalyticsSendCustomEvent.png",
		"description":"Unity Analytics allows you to track specific events within your game. By configuring a series of Custom Events within your game, you can create your own Funnel Analysis to observe your players' game behavior. Good places to put custom events include: milestones, new levels, scene transitions, etc.",
		"params": [
			{
				"name":"Event Name",
				"description":"The name of the event"
			},
			{
				"name":"Keys",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"Result"
			},
			{
				"name":"Success",
				"description":"Event Sent if execution went OK"
			},
			{
				"name":"Failure",
				"description":"Event Sent if execution failed. Check result for more infos"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Analytics Send Custom Event With Position",
		"category":"Analytics",
		"image":"./images/AnalyticsSendCustomEventWithPosition.png",
		"description":"Unity Analytics allows you to track specific events within your game. By configuring a series of Custom Events within your game, you can create your own Funnel Analysis to observe your players' game behavior. Good places to put custom events include: milestones, new levels, scene transitions, etc.",
		"params": [
			{
				"name":"Event Name",
				"description":"The name of the event"
			},
			{
				"name":"Game Object Position",
				"description":"The GameObject's position"
			},
			{
				"name":"Or Vector 3position",
				"description":"Or The position as vector3"
			},
			{
				"name":"Result",
				"description":"Result"
			},
			{
				"name":"Success",
				"description":"Event Sent if execution went OK"
			},
			{
				"name":"Failure",
				"description":"Event Sent if execution failed. Check result for more infos"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Analytics Send Transaction",
		"category":"Analytics",
		"image":"./images/AnalyticsSendTransaction.png",
		"description":"Tracking Monetization. Requires a price parameter, a currency and an optional Apple iTunes / Google Play receipt string.",
		"params": [
			{
				"name":"Product Id",
				"description":"The Product ID"
			},
			{
				"name":"Amount",
				"description":"The amount"
			},
			{
				"name":"Receipt Purchase Data",
				"description":"Receipt data (iOS) / receipt ID (android) / for in-app purchases to verify purchases with Apple iTunes / Google Play. Use null in the absence of receipts."
			},
			{
				"name":"Signature",
				"description":"Android receipt signature. If using native Android use the INAPP_DATA_SIGNATURE string containing the signature of the purchase data that was signed with the private key of the developer. The data signature uses the RSASSA-PKCS1-v1_5 scheme. Pass in null in absence of a signature."
			},
			{
				"name":"Currency",
				"description":"The Currency. Abbreviation of the currency used for the transaction. For example “USD” (United States Dollars). See http://en.wikipedia.org/wiki/ISO_4217 for a standardized list of currency abbreviations."
			},
			{
				"name":"Result",
				"description":"Result"
			},
			{
				"name":"Success",
				"description":"Event Sent if execution went OK"
			},
			{
				"name":"Failure",
				"description":"Event Sent if execution failed. Check result for more infos"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Analytics Set User Birth Year",
		"category":"Analytics",
		"image":"./images/AnalyticsSetUserBirthYear.png",
		"description":"Sets the birthYear of the user. Depending on the genre of your project, creating custom segments around gender and age of your users may interest you. Whether you're receiving this information on signup of your project, or from a third-party SDK, eg: Facebook, you can send these demographics to Unity Analytics.",
		"params": [
			{
				"name":"Birth Year",
				"description":"Birth year of user. Must be 4-digit year format, only."
			},
			{
				"name":"Result",
				"description":"Result"
			},
			{
				"name":"Success",
				"description":"Event Sent if execution went OK"
			},
			{
				"name":"Failure",
				"description":"Event Sent if execution failed. Check result for more infos"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Analytics Set User Gender",
		"category":"Analytics",
		"image":"./images/AnalyticsSetUserGender.png",
		"description":"Sets the gender of the user. Depending on the genre of your project, creating custom segments around gender and age of your users may interest you. Whether you're receiving this information on signup of your project, or from a third-party SDK, eg: Facebook, you can send these demographics to Unity Analytics.",
		"params": [
			{
				"name":"Gender",
				"description":"Gender of the user"
			},
			{
				"name":"Result",
				"description":"Result"
			},
			{
				"name":"Success",
				"description":"Event Sent if execution went OK"
			},
			{
				"name":"Failure",
				"description":"Event Sent if execution failed. Check result for more infos"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Analytics Set User Id",
		"category":"Analytics",
		"image":"./images/AnalyticsSetUserId.png",
		"description":"Sets the userId of the user.",
		"params": [
			{
				"name":"User Id",
				"description":"The User Id"
			},
			{
				"name":"Result",
				"description":"Result"
			},
			{
				"name":"Success",
				"description":"Event Sent if execution went OK"
			},
			{
				"name":"Failure",
				"description":"Event Sent if execution failed. Check result for more infos"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Android Os Version",
		"category":"Android",
		"image":"./images/AndroidOsVersion.png",
		"description":"Get the Android SDK version as an Fsm Int  (example: SDK version JELLY_BEAN - int result = 16) - alternative to SystemInfo.operatingSystem",
		"params": [
			{
				"name":"Sdk Version",
				"description":"Get the Android SDK version. If 0 then no data or not android"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Detect If Android Tv",
		"category":"Android",
		"image":"./images/DetectIfAndroidTv.png",
		"description":"Check if Android is in TV mode",
		"params": [
			{
				"name":"True Event",
				"description":"TODO"
			},
			{
				"name":"False Event",
				"description":"The event if error"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Ease Int",
		"category":"AnimateVariables",
		"image":"./images/EaseInt.png",
		"description":"Easing Animation - Int",
		"params": [
			{
				"name":"From Value",
				"description":"TODO"
			},
			{
				"name":"To Value",
				"description":"TODO"
			},
			{
				"name":"Int Variable",
				"description":"TODO"
			},
			{
				"name":"Round To",
				"description":"TODO"
			},
			{
				"name":"Time",
				"description":"How long the ease should take in seconds"
			},
			{
				"name":"Speed",
				"description":"Optionally, use speed instead of time."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds before starting to ease."
			},
			{
				"name":"Ease Type",
				"description":"The easing function to use."
			},
			{
				"name":"Reverse",
				"description":"Reverse the ease."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Falloff",
		"category":"AnimateVariables",
		"image":"./images/FloatFalloff.png",
		"description":"Follow a float value and lerp if outside the defined margin. Typically use for camera movement to follow player when getting close to the screen sides",
		"params": [
			{
				"name":"Value",
				"description":"The Input value"
			},
			{
				"name":"Fall Off Factor",
				"description":"The fallOff Factor. Ranges from 0 to 1"
			},
			{
				"name":"Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animated Uv Map",
		"category":"Animation",
		"image":"./images/AnimatedUvMap.png",
		"description":"TODO",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Column Count",
				"description":"TODO"
			},
			{
				"name":"Row Count",
				"description":"TODO"
			},
			{
				"name":"Fps",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Runtime Animator Controller",
		"category":"Animator",
		"image":"./images/GetRuntimeAnimatorController.png",
		"description":"Get the runtimeAnimatorController of an Animator Component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The target. An Animator component is required"
			},
			{
				"name":"Get Controller",
				"description":"The current controller of the specified Animator."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when using normalizedTime to manually control the animation."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Runtime Animator Controller",
		"category":"Animator",
		"image":"./images/SetRuntimeAnimatorController.png",
		"description":"Set or change the runtimeAnimatorController of an Animator Component to switch the animation playing.",
		"params": [
			{
				"name":"Game Object",
				"description":"The target. An Animator component is required"
			},
			{
				"name":"Set Controller",
				"description":"The new controller to insert into the Animator."
			},
			{
				"name":"Enable",
				"description":"Enable/Disable the component before playing."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when using normalizedTime to manually control the animation."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Application Get Persistent Data Path",
		"category":"Application",
		"image":"./images/ApplicationGetPersistentDataPath.png",
		"description":"Get the Application Persistent Data Path",
		"params": [
			{
				"name":"Persistent Data Path",
				"description":"The Application Persistent Data Path"
			},
			{
				"name":"Append Path Delimiter",
				"description":"If true, adds a path delimiter '/' at the end of the path"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Application Get System Language",
		"category":"Application",
		"image":"./images/ApplicationGetSystemLanguage.png",
		"description":"Get System Language",
		"params": [
			{
				"name":"Language",
				"description":"The application language"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Application Internet Reachability",
		"category":"Application",
		"image":"./images/ApplicationInternetReachability.png",
		"description":"gets the application internet Reachability status",
		"params": [
			{
				"name":"Reachable",
				"description":"true if internet is deemed available"
			},
			{
				"name":"Network Reachability",
				"description":"the actual networkReachability value"
			},
			{
				"name":"Reachable Event",
				"description":"event fired when internet is reachable"
			},
			{
				"name":"Carrier Data Network Event",
				"description":"event fired when internet is reachable via carrier data"
			},
			{
				"name":"Local Area Network Event",
				"description":"event fired when internet is reachable via local network"
			},
			{
				"name":"Not Reachable Event",
				"description":"event fired when internet is not reachable"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Application Open Url",
		"category":"Application",
		"image":"./images/ApplicationOpenUrl.png",
		"description":"Open a Url link in the browser",
		"params": [
			{
				"name":"Url",
				"description":"TODO"
			},
			{
				"name":"Web Window Title",
				"description":"When in webPlayer or webgl, will open a new window, define the name of that window here."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Application Version",
		"category":"Application",
		"image":"./images/ApplicationVersion.png",
		"description":"Gets the Application version and can optionnaly format it inside a string",
		"params": [
			{
				"name":"Format",
				"description":"optional format text, use {0} as the replacement tag, Leave to non for no effect"
			},
			{
				"name":"Version",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Loaded Level",
		"category":"Application",
		"image":"./images/GetLoadedLevel.png",
		"description":"Get the name or id of the level that was last loaded (Read Only).",
		"params": [
			{
				"name":"Level Name",
				"description":"TODO"
			},
			{
				"name":"Level",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Screen Size Ratio",
		"category":"Application",
		"image":"./images/GetScreenSizeRatio.png",
		"description":"Gets the Screen size ratio (width/height).",
		"params": [
			{
				"name":"Store Screen Size Ratio",
				"description":"The Screen size ratio (width/height)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get System Informations",
		"category":"System",
		"image":"./images/GetSystemInformations.png",
		"description":"Get full system informations.",
		"params": [
			{
				"name":"User Name",
				"description":"TODO"
			},
			{
				"name":"System Info",
				"description":"TODO"
			},
			{
				"name":"Processor Info",
				"description":"TODO"
			},
			{
				"name":"Processor Count",
				"description":"TODO"
			},
			{
				"name":"System Memory Size",
				"description":"TODO"
			},
			{
				"name":"Graphics Memory Size",
				"description":"TODO"
			},
			{
				"name":"Graphics Device Name",
				"description":"TODO"
			},
			{
				"name":"Graphics Device Vendor",
				"description":"TODO"
			},
			{
				"name":"Graphics Device ID",
				"description":"TODO"
			},
			{
				"name":"Graphics Device Vendor ID",
				"description":"TODO"
			},
			{
				"name":"Graphics Device Version",
				"description":"TODO"
			},
			{
				"name":"Graphics Shader Level",
				"description":"TODO"
			},
			{
				"name":"Graphics Pixel Fillrate",
				"description":"TODO"
			},
			{
				"name":"Supports Shadows",
				"description":"TODO"
			},
			{
				"name":"Supports Render Textures",
				"description":"TODO"
			},
			{
				"name":"Supports Image Effects",
				"description":"TODO"
			},
			{
				"name":"Supports 3D Textures",
				"description":"TODO"
			},
			{
				"name":"Supports Compute Shaders",
				"description":"TODO"
			},
			{
				"name":"Supports Instancing",
				"description":"TODO"
			},
			{
				"name":"Supported Render Target Count",
				"description":"TODO"
			},
			{
				"name":"Device Unique Identifier",
				"description":"TODO"
			},
			{
				"name":"Device Name",
				"description":"TODO"
			},
			{
				"name":"Device Model",
				"description":"TODO"
			},
			{
				"name":"Supports Accelerometer",
				"description":"TODO"
			},
			{
				"name":"Supports Gyroscope",
				"description":"TODO"
			},
			{
				"name":"Supports Location Service",
				"description":"TODO"
			},
			{
				"name":"Supports Vibration",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is On Platform Event",
		"category":"Application",
		"image":"./images/IsOnPlatformEvent.png",
		"description":"Sends an Event if on the specified Platforms or not. Detects the targeted build platform.",
		"params": [
			{
				"name":"Desc",
				"description":"TODO"
			},
			{
				"name":"Platforms",
				"description":"The platforms"
			},
			{
				"name":"On Event",
				"description":"The event to send IF on any of the specified platforms. Note: Gets send on the first platform it finds it is on."
			},
			{
				"name":"Not On Event",
				"description":"The event to send IF NOT on any of the specified platforms."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Showing Splash Screen",
		"category":"Application",
		"image":"./images/IsShowingSplashScreen.png",
		"description":"Sends Events if Is Showing Splash Screen or not",
		"params": [
			{
				"name":"Is True",
				"description":"Event to send if is Showing Splash Screen is True."
			},
			{
				"name":"Is False",
				"description":"Event to send if is Showing Splash Screen is false."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load Level Clean",
		"category":"Level",
		"image":"./images/LoadLevelClean.png",
		"description":"Loads a Level using a special technic to free resources and avoid memory leak. This Object WILL set itself to survive level loading.",
		"params": [
			{
				"name":"Level Name",
				"description":"The name of the level to load. NOTE: Must be in the list of levels defined in File->Build Settings... "
			},
			{
				"name":"Baselevel Name",
				"description":"The name of the base level to load from. Ideally, this is a totally empty level, with litterally nothing in the hierarchy"
			},
			{
				"name":"Loaded Event",
				"description":"Event to send when the level has loaded. NOTE: This only makes sense if the FSM is still in the scene!"
			},
			{
				"name":"Debug Log",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Microphone Is Access Granted",
		"category":"Audio",
		"image":"./images/MicrophoneIsAccessGranted.png",
		"description":"Check if user granted access to microphone",
		"params": [
			{
				"name":"Is Access Granted",
				"description":"Is microphone accessible"
			},
			{
				"name":"Access Granted Event",
				"description":"Event sent when microphone accessible"
			},
			{
				"name":"Access Denied Event",
				"description":"Event sent when microphone not accessible"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Open Webgl Window",
		"category":"Application",
		"image":"./images/OpenWebglWindow.png",
		"description":"Opens a new browser window for a given url, works only in Webgl",
		"params": [
			{
				"name":"Url",
				"description":"The Url to open"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Platform Dependent Event",
		"category":"Application",
		"image":"./images/PlatformDependentEvent.png",
		"description":"Sends Events based on platform dependent flag",
		"params": [
			{
				"name":"Platform",
				"description":"The platform"
			},
			{
				"name":"Match Event",
				"description":"The event to send for that platform"
			},
			{
				"name":"No Match Event",
				"description":"The event to send for that platform"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Platform Dependent Events",
		"category":"Application",
		"image":"./images/PlatformDependentEvents.png",
		"description":"Sends Events based on platform dependent flags",
		"params": [
			{
				"name":"Platforms",
				"description":"The platform"
			},
			{
				"name":"Events",
				"description":"The event to send for that platform"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Read From Clipboard",
		"category":"Application",
		"image":"./images/ReadFromClipboard.png",
		"description":"This action lets you read a value from the systems clipboard and store it in a string.",
		"params": [
			{
				"name":"String",
				"description":"String variable that will receive the clipboard content."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Request Web Cam And Mic Access",
		"category":"Application",
		"image":"./images/RequestWebCamAndMicAccess.png",
		"description":"Requests access to webcam and microphone",
		"params": [
			{
				"name":"Access Granted Event",
				"description":"Event sent when access is granted"
			},
			{
				"name":"Access Denied Event",
				"description":"Event sent when access is denied"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Runtime Platform Event",
		"category":"Application",
		"image":"./images/RuntimePlatformEvent.png",
		"description":"Sends an Event if on the specified Platforms or not.",
		"params": [
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sleep Time Out",
		"category":"Application",
		"image":"./images/SetSleepTimeOut.png",
		"description":"A power saving setting, allowing the screen to dim some time after the last active user interaction. 0 means never sleep, -1 means revert to system settings, above zero values are in seconds. Most useful for handheld devices, allowing OS to preserve battery life in most efficient ways. Does nothing on non-handheld devices. SleepTimeout is measured in seconds. The default value varies from platform to platform, generally being non-zero.",
		"params": [
			{
				"name":"Sleep Timeout",
				"description":"0 means never sleep, -1 means revert to system settings, above zero values are in seconds."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Take Camera Screenshot",
		"category":"Application",
		"image":"./images/TakeCameraScreenshot.png",
		"description":"Saves a Screenshot from the camera. Save as png or jpg.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject camera to take picture from (Must have a Camera component)."
			},
			{
				"name":"Res Width",
				"description":"TODO"
			},
			{
				"name":"Res Height",
				"description":"TODO"
			},
			{
				"name":"Auto",
				"description":"Automatically get the current resolution - RECOMMENDED"
			},
			{
				"name":"Use Current Res",
				"description":"Use the current resolution - NOT RECOMMENDED"
			},
			{
				"name":"File Path",
				"description":"TODO"
			},
			{
				"name":"Use Mypictures",
				"description":"Use the default MyPictures Folder?"
			},
			{
				"name":"Use Default Folder",
				"description":"Use the default save Folder?"
			},
			{
				"name":"Filename",
				"description":"TODO"
			},
			{
				"name":"Auto Number",
				"description":"TODO"
			},
			{
				"name":"Incl Gui",
				"description":"TODO"
			},
			{
				"name":"Use Jpeg",
				"description":"TODO"
			},
			{
				"name":"Set Depth",
				"description":"TODO"
			},
			{
				"name":"Debug On",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Take Camera Screenshot Texture",
		"category":"Application",
		"image":"./images/TakeCameraScreenshotTexture.png",
		"description":"Saves a Screenshot from the camera. Save as png or jpg.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject camera to take picture from (Must have a Camera component)."
			},
			{
				"name":"Res Width",
				"description":"TODO"
			},
			{
				"name":"Res Height",
				"description":"TODO"
			},
			{
				"name":"Auto",
				"description":"Automatically get the current resolution - RECOMMENDED"
			},
			{
				"name":"Use Current Res",
				"description":"Use the current resolution - NOT RECOMMENDED"
			},
			{
				"name":"New Texture",
				"description":"TODO"
			},
			{
				"name":"Incl Gui",
				"description":"TODO"
			},
			{
				"name":"Set Depth",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Take Screenshot Late Update",
		"category":"Application",
		"image":"./images/TakeScreenshotLateUpdate.png",
		"description":"Saves a Screenshot during late update. NOTE: Does nothing in Web Player. On Android, the resulting screenshot is available some time later.",
		"params": [
			{
				"name":"Destination",
				"description":"Where to save the screenshot."
			},
			{
				"name":"Custom Path",
				"description":"Path used with Custom Path Destination option."
			},
			{
				"name":"Filename",
				"description":"TODO"
			},
			{
				"name":"Auto Number",
				"description":"Add an auto-incremented number to the filename."
			},
			{
				"name":"Super Size",
				"description":"Factor by which to increase resolution."
			},
			{
				"name":"Debug Log",
				"description":"Log saved file info in Unity console."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Write To Clipboard",
		"category":"Application",
		"image":"./images/WriteToClipboard.png",
		"description":"This action lets you write a string value into the devices clipboard.",
		"params": [
			{
				"name":"String",
				"description":"String value that is written into the Clipboard"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Activate Game Objects",
		"category":"Array",
		"image":"./images/ArrayActivateGameObjects.png",
		"description":"Active/Deactivate all GameObjects within an array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Activate",
				"description":"Check to activate, uncheck to deactivate Game Objects."
			},
			{
				"name":"Reset On Exit",
				"description":"Resets the affected game objects when exiting this state to their original activate state. Useful if you want an object to be controlled only while this state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Add Game Object If Enabled",
		"category":"Array",
		"image":"./images/ArrayAddGameObjectIfEnabled.png",
		"description":"Add an GameObject to the end of a GameObject array if it's enabled. Optionally reverse the check.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Game Object",
				"description":"GameObject to add."
			},
			{
				"name":"Active Type",
				"description":"Wheter to check if the GameObject is active in the Hirarchy or itself independent of any parents state."
			},
			{
				"name":"If Enabled",
				"description":"Wheter to add the GameObject if it's enabled or disabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Add If Empty",
		"category":"Array",
		"image":"./images/ArrayAddIfEmpty.png",
		"description":"Add an item to the end of an Array if it's null or empty. Optionally reverse the check.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Value",
				"description":"Item to add."
			},
			{
				"name":"If Empty",
				"description":"Adds if empty, otherwise if not empty."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Concatenate",
		"category":"Array",
		"image":"./images/ArrayConcatenate.png",
		"description":"Concatenate arrays together",
		"params": [
			{
				"name":"Arrays",
				"description":"The Arrays to concatenate together "
			},
			{
				"name":"Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Contains Game Object",
		"category":"Array",
		"image":"./images/ArrayContainsGameObject.png",
		"description":"Check if a GameObject ( by name and/or tag) is within an array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Game Object Name",
				"description":"The name of the GameObject to find in the arrayList. You can leave this empty if you specify a Tag."
			},
			{
				"name":"With Tag",
				"description":"Find a GameObject in this arrayList with this tag. If GameObject Name is specified then both name and Tag must match."
			},
			{
				"name":"Result",
				"description":"Store the result in a GameObject variable."
			},
			{
				"name":"Result Index",
				"description":"TODO"
			},
			{
				"name":"Is Contained",
				"description":"Store in a bool wether it contains or not that GameObject"
			},
			{
				"name":"Is Contained Event",
				"description":"Event sent if this arraList contains that GameObject"
			},
			{
				"name":"Is Not Contained Event",
				"description":"Event sent if this arraList does not contains that GameObject"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Find Game Objects By Tag",
		"category":"Array",
		"image":"./images/ArrayFindGameObjectsByTag.png",
		"description":"Find all active GameObjects with a specific tag and store them in an array. Tags must be declared in the tag manager before using them",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Tag",
				"description":"the tag"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get All Child Of Game Object",
		"category":"Array",
		"image":"./images/ArrayGetAllChildOfGameObject.png",
		"description":"Store all (all levels) childs of GameObject (active and/or inactive) from a parent.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Parent",
				"description":"The parent gameObject"
			},
			{
				"name":"Include Inactive",
				"description":"TODO"
			},
			{
				"name":"Include Parent",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Children Of Game Object",
		"category":"Transform",
		"image":"./images/ArrayGetChildrenOfGameObject.png",
		"description":"Store all direct childs of GameObject (active and/or inactive) from a parent.",
		"params": [
			{
				"name":"Parent",
				"description":"The parent gameObject"
			},
			{
				"name":"Include Inactive",
				"description":"TODO"
			},
			{
				"name":"Include Parent",
				"description":"TODO"
			},
			{
				"name":"Store Children",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Closest Game Object",
		"category":"Array",
		"image":"./images/ArrayGetClosestGameObject.png",
		"description":"Return the closest GameObject within an array from a transform or position.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Distance From",
				"description":"Compare the distance of the items in the list to the position of this gameObject"
			},
			{
				"name":"Or Distance From Vector 3",
				"description":"If DistanceFrom declared, use OrDistanceFromVector3 as an offset"
			},
			{
				"name":"Everyframe",
				"description":"TODO"
			},
			{
				"name":"Closest Game Object",
				"description":"TODO"
			},
			{
				"name":"Closest Index",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Farthest Game Object",
		"category":"Array",
		"image":"./images/ArrayGetFarthestGameObject.png",
		"description":"Return the farthest GameObject within an array from a transform or position.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Distance From",
				"description":"Compare the distance of the items in the list to the position of this gameObject"
			},
			{
				"name":"Or Distance From Vector 3",
				"description":"If DistanceFrom declared, use OrDistanceFromVector3 as an offset"
			},
			{
				"name":"Everyframe",
				"description":"TODO"
			},
			{
				"name":"Farthest Game Object",
				"description":"TODO"
			},
			{
				"name":"Farthest Index",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Farthest Game Object In Sight",
		"category":"Array",
		"image":"./images/ArrayGetFarthestGameObjectInSight.png",
		"description":"Return the farthest GameObject within an arrayList from a transform or position which does not have a collider between itself and another GameObject",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Distance From",
				"description":"Compare the distance of the items in the list to the position of this gameObject"
			},
			{
				"name":"Or Distance From Vector 3",
				"description":"If DistanceFrom declared, use OrDistanceFromVector3 as an offset"
			},
			{
				"name":"Everyframe",
				"description":"TODO"
			},
			{
				"name":"From Game Object",
				"description":"The line start of the sweep."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Farthest Game Object",
				"description":"TODO"
			},
			{
				"name":"Farthest Index",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Gameobject Max Fsm Float Index",
		"category":"Array",
		"image":"./images/ArrayGetGameobjectMaxFsmFloatIndex.png",
		"description":"Returns the Gameobject within an array which have the max float value in its FSM",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Everyframe",
				"description":"TODO"
			},
			{
				"name":"Store Max Value",
				"description":"TODO"
			},
			{
				"name":"Max Game Object",
				"description":"TODO"
			},
			{
				"name":"Max Index",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Last Item",
		"category":"Array",
		"image":"./images/ArrayGetLastItem.png",
		"description":"Get a last item of an array",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable"
			},
			{
				"name":"Store Value",
				"description":"Store the last value in a variable."
			},
			{
				"name":"Store Index",
				"description":"The last index in the array."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Nearest Value",
		"category":"Array",
		"image":"./images/ArrayGetNearestValue.png",
		"description":"Get the nearest index and value for a given variable. Only works for float and int",
		"params": [
			{
				"name":"Array",
				"description":"The Array to use."
			},
			{
				"name":"Value",
				"description":"The value to check for"
			},
			{
				"name":"Result",
				"description":"Store the nearest value found in the array."
			},
			{
				"name":"Index",
				"description":"The index of the nearest value found in the array."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Next 2",
		"category":"Array",
		"image":"./images/ArrayGetNext2.png",
		"description":"Each time this action is called it gets the next item from a Array. This version has a reset flag \nThis lets you quickly loop through all the items of an array to perform actions on them.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Start Index",
				"description":"From where to start iteration, leave as 0 or none to start from the beginning"
			},
			{
				"name":"End Index",
				"description":"When to end iteration, leave to none to iterate until the end"
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next item."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more items."
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Current Index",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Previous",
		"category":"Array",
		"image":"./images/ArrayGetPrevious.png",
		"description":"Each time this action is called it gets the previous item from a Array. This version has a reset flag \nThis lets you quickly loop through all the items of an array to perform actions on them.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Start Index",
				"description":"From where to start iteration, leave as 0 or none to start from the end"
			},
			{
				"name":"End Index",
				"description":"When to end iteration, leave to none to iterate until the beginning"
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the previous item."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more items."
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the end again"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Current Index",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Random Advanced",
		"category":"Array",
		"image":"./images/ArrayGetRandomAdvanced.png",
		"description":"Get a Random item from an Array. Optionally disallow to get the same result twice in a row.",
		"params": [
			{
				"name":"Array",
				"description":"The Array to use."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a variable."
			},
			{
				"name":"Repeat",
				"description":"Can return the same item twice in a row."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Random Curved Weighted",
		"category":"Array",
		"image":"./images/ArrayGetRandomCurvedWeighted.png",
		"description":"Get a Random item from an Array weighted along a curve",
		"params": [
			{
				"name":"Array",
				"description":"The Array to use."
			},
			{
				"name":"Weight Curve",
				"description":"TODO"
			},
			{
				"name":"Store Value",
				"description":"Store the value in a variable."
			},
			{
				"name":"Store Index",
				"description":"Store the index of the pick in a variable."
			},
			{
				"name":"Repeat",
				"description":"Can return the same item twice in a row."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Random Index",
		"category":"Array",
		"image":"./images/ArrayGetRandomIndex.png",
		"description":"Get a Random item from an Array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array to use."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a variable."
			},
			{
				"name":"Index",
				"description":"The index of the value in the array."
			},
			{
				"name":"Repeat",
				"description":"Can hit the same number twice in a row"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Root Game Objects",
		"category":"Array",
		"image":"./images/ArrayGetRootGameObjects.png",
		"description":"Get all the root GameObjects in the scene. Wait two frames for scene to load all objects for accurate results.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Scene Name",
				"description":"Scene Name"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Is Empty",
		"category":"Array",
		"image":"./images/ArrayIsEmpty.png",
		"description":"Send an event based on the length of an array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable."
			},
			{
				"name":"Is Empty",
				"description":"Event to send if the array is empty."
			},
			{
				"name":"Is Not Empty",
				"description":"Event to send if the array not is empty."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Operator",
		"category":"Array",
		"image":"./images/ArrayOperator.png",
		"description":"Applies a logical operation on two arrays.",
		"params": [
			{
				"name":"First Array",
				"description":"The first array to check against the second one."
			},
			{
				"name":"Second Array",
				"description":"The second array to check against the first one."
			},
			{
				"name":"Operation",
				"description":"AND: Values that are in both arrays\n\nOR: Combines both arrays without diplicates\n\nNAND: Values that are not in both arrays"
			},
			{
				"name":"Result",
				"description":"The resulting array."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Remove",
		"category":"Array",
		"image":"./images/arrayRemove.png",
		"description":"Remove an item from an array",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Value",
				"description":"Item to remove."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Save Changes",
		"category":"Array",
		"image":"./images/ArraySaveChanges.png",
		"description":"Save changes internally for all values edited to be reflected properly. Use this only if you have such a case",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Send Event To Game Objects",
		"category":"Array",
		"image":"./images/ArraySendEventToGameObjects.png",
		"description":"Send event to all the GameObjects within an array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Exclude Self",
				"description":"TODO"
			},
			{
				"name":"Send To Children",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Sort Game Object By Distance",
		"category":"Array",
		"image":"./images/ArraySortGameObjectByDistance.png",
		"description":"Sort GameObjects within an array based on the distance of a transform or position.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Distance From",
				"description":"Compare the distance of the items in the list to the position of this gameObject"
			},
			{
				"name":"Or Distance From Vector 3",
				"description":"If DistanceFrom declared, use OrDistanceFromVector3 as an offset"
			},
			{
				"name":"Everyframe",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Swap Items",
		"category":"Array",
		"image":"./images/ArraySwapItems.png",
		"description":"Swap two items at a specified indexes of a PlayMaker Array",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Index 1",
				"description":"The first index to swap"
			},
			{
				"name":"Index 2",
				"description":"The second index to swap"
			},
			{
				"name":"Failure Event",
				"description":"The event to trigger if the removeAt throw errors"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Overlap Sphere To Array",
		"category":"Array",
		"image":"./images/OverlapSphereToArray.png",
		"description":"Returns hit if an object is hitand stores hit objects in array",
		"params": [
			{
				"name":"Scan Origin",
				"description":"TODO"
			},
			{
				"name":"Scan Origin V3",
				"description":"TODO"
			},
			{
				"name":"Scan Range",
				"description":"The size of the overlap sphere."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Error Event",
				"description":"TODO"
			},
			{
				"name":"Hit Event",
				"description":"TODO"
			},
			{
				"name":"No Hit Event",
				"description":"TODO"
			},
			{
				"name":"Repeat Interval",
				"description":"TODO"
			},
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Asset Bundle Unload",
		"category":"AssetBundle",
		"image":"./images/AssetBundleUnload.png",
		"description":"Unload AssetBundle. Optionaly unload all Loaded objects",
		"params": [
			{
				"name":"Asset Bundle",
				"description":"The Asset Bundle"
			},
			{
				"name":"Unload All Loaded Objects",
				"description":"When unloadAllLoadedObjects is false, compressed file data for assets inside the bundle will be unloaded, but any actual objects already loaded from this bundle will be kept intact. Of course you won't be able to load any more objects from this bundle. When unloadAllLoadedObjects is true, all objects that were loaded from this bundle will be destroyed as well. If there are game objects in your scene referencing those assets, the references to them will become missing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Asset Bundle Hash Is Valid",
		"category":"AssetBundle",
		"image":"./images/GetAssetBundleHashIsValid.png",
		"description":"Get the hash for the given AssetBundle, and its isValid value.",
		"params": [
			{
				"name":"Asset Bundle",
				"description":"the AssetBundle"
			},
			{
				"name":"Asset Bundle Name",
				"description":"Name of the asset bundle."
			},
			{
				"name":"Is Valid",
				"description":"True if AssetBundle Hash is valid"
			},
			{
				"name":"Is Valid Event",
				"description":"Event sent if AssetBundle Hash isvalid"
			},
			{
				"name":"Is Not Valid Event",
				"description":"Event sent if AssetBundle Hash is not valid"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load Streaming Asset Bundle",
		"category":"AssetBundle",
		"image":"./images/LoadStreamingAssetBundle.png",
		"description":"Gets a Bundle from the streaming assets and store it in a FsmObject. See Bundles docs for more details.",
		"params": [
			{
				"name":"Path",
				"description":"path to the bundle from within the StreamingAsset Folder."
			},
			{
				"name":"Store Bundle",
				"description":"Gets bundle from the url."
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the bundle has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"WWW Asset Bundle",
		"category":"AssetBundle",
		"image":"./images/WWWAssetBundle.png",
		"description":"Gets Bundle from a url and store it in a FsmObject. See Unity WWW and Bundles docs for more details.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download bundle from."
			},
			{
				"name":"Load From Cache Or Download",
				"description":"will get the cached version if available, else downloads normally"
			},
			{
				"name":"Cache Version",
				"description":"Version of the AssetBundle. The file will only be loaded from the disk cache if it has previously been downloaded with the same version parameter. By incrementing the version number requested by your application, you can force Caching to download a new copy of the AssetBunlde from url."
			},
			{
				"name":"Store Bundle",
				"description":"Gets bundle from the url."
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the bundle has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Fade",
		"category":"Audio",
		"image":"./images/AudioFade.png",
		"description":"Fades out the Volume of the Audio Clip played by the AudioSource component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fade To",
				"description":"The volume to reach"
			},
			{
				"name":"Time",
				"description":"Fade in time in seconds."
			},
			{
				"name":"Mode",
				"description":"Interpolation mode: Linear or EaseInOut."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Fade In",
		"category":"Audio",
		"image":"./images/AudioFadeIn.png",
		"description":"Fades in the Volume of the Audio Clip played by the AudioSource component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"In Volume",
				"description":"The volume to reach"
			},
			{
				"name":"Time",
				"description":"Fade in time in seconds."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Fade Out",
		"category":"Audio",
		"image":"./images/AudioFadeOut.png",
		"description":"Fades out the Volume of the Audio Clip played by the AudioSource component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Time",
				"description":"Fade in time in seconds."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Get Time",
		"category":"Audio",
		"image":"./images/AudioGetTime.png",
		"description":"Read current playback time. On a compressed audio track position does not necessary reflect the actual time in the track ",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Everyframe",
				"description":"TODO"
			},
			{
				"name":"Time Sample",
				"description":"TODO"
			},
			{
				"name":"Time",
				"description":"Time in seconds"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Listener Set Pause",
		"category":"Audio",
		"image":"./images/AudioListenerSetPause.png",
		"description":"Paused state of the audio. If set to True, the listener will not generate sound. Similar to setting the volume to 0.0.",
		"params": [
			{
				"name":"Pause",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Listener Set Volume",
		"category":"Audio",
		"image":"./images/AudioListenerSetVolume.png",
		"description":"Controls the game sound volume (0.0 to 1.0).",
		"params": [
			{
				"name":"Volume",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Pitch From Time Scale",
		"category":"Audio",
		"image":"./images/AudioPitchFromTimeScale.png",
		"description":"Sets the Pitch of the Audio Clip to TimeScale played by the AudioSource component on a Game Object. Will create a rewind or fastforward sound FX deping on your TimeScale",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Min Pitch",
				"description":"TODO"
			},
			{
				"name":"Max Pitch",
				"description":"TODO"
			},
			{
				"name":"Lerp Speed",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Play Advanced",
		"category":"Audio",
		"image":"./images/AudioPlayAdvanced.png",
		"description":"Plays the Audio Clip set with Set Audio Clip or in the Audio Source inspector on a Game Object. Optionally plays a one shot Audio Clip./n If you wnat to change values while playing Wait For End Of Clip must be turned on",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an AudioSource component."
			},
			{
				"name":"One Shot Clip",
				"description":"Optionally play a 'one shot' AudioClip."
			},
			{
				"name":"Priority",
				"description":"Set the priority."
			},
			{
				"name":"Volume",
				"description":"Set the volume."
			},
			{
				"name":"Pitch",
				"description":"Set the pitch."
			},
			{
				"name":"Stereo Pan",
				"description":"Set the Stereo Pan."
			},
			{
				"name":"Spatial Blend",
				"description":"Set the Spatial Blend."
			},
			{
				"name":"Reverb Zone Mix",
				"description":"Set the reverb Zone Mix."
			},
			{
				"name":"Doppler Level",
				"description":"Set the dopplerLevel."
			},
			{
				"name":"Wait For End Of Clip",
				"description":"TODO"
			},
			{
				"name":"Finished Event",
				"description":"Event to send when start playing or when the AudioClip finishes playing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Play Simple",
		"category":"Audio",
		"image":"./images/AudioPlaySimple.png",
		"description":"Plays the Audio Clip set with Set Audio Clip or in the Audio Source inspector on a Game Object. Optionally plays a one shot Audio Clip.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an AudioSource component."
			},
			{
				"name":"Volume",
				"description":"Set the volume."
			},
			{
				"name":"One Shot Clip",
				"description":"Optionally play a 'one shot' AudioClip."
			},
			{
				"name":"Wait For End Of Clip",
				"description":"TODO"
			},
			{
				"name":"Finished Event",
				"description":"Event to send when the AudioClip finishes playing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Rewind",
		"category":"Audio",
		"image":"./images/AudioRewind.png",
		"description":"Rewind the Audio Clip played by the AudioSource component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Rewind",
				"description":"TODO"
			},
			{
				"name":"Speed",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Snapshot Basic Transition To",
		"category":"Audio",
		"image":"./images/AudioSnapshotBasicTransitionTo.png",
		"description":"Performs an interpolated transition towards this snapshot over the time interval specified.",
		"params": [
			{
				"name":"To Snapshot",
				"description":"TODO"
			},
			{
				"name":"Time To Reach",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Audio Clip Length",
		"category":"Audio",
		"image":"./images/GetAudioClipLength.png",
		"description":"Retrieve the length of the AudioClip inside the specified AudioSource or from the given object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the AudioSource component."
			},
			{
				"name":"Audio Clip",
				"description":"Supply a clip directly."
			},
			{
				"name":"Length",
				"description":"The length of the clip."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Audio Is Playing",
		"category":"Audio",
		"image":"./images/GetAudioIsPlaying.png",
		"description":"Check if an AudioSource is playing.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Is Playing",
				"description":"True if the audioSource is playing"
			},
			{
				"name":"Is Playing Event",
				"description":"Event to send if the audioSource is playing"
			},
			{
				"name":"Is Not Playing Event",
				"description":"Event to send if the audioSource is not playing"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Audio Progress",
		"category":"Audio",
		"image":"./images/GetAudioProgress.png",
		"description":"Retrieve the progress (in %) of the specified AudioSource. Optionally sends an Event when past the specified percentage.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the AudioSource component."
			},
			{
				"name":"Current Progress",
				"description":"The progress of currently playing clip."
			},
			{
				"name":"On Percentage",
				"description":"Send the Event when this percentage is reached. Must be above 0, otherwise ignores 'Send Event'."
			},
			{
				"name":"Send Event",
				"description":"The Event to send when the progress reached the 'On Percentage' amount."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mic Input Loudness",
		"category":"Audio",
		"image":"./images/GetMicInputLoudness.png",
		"description":"Check the default Mic Input Volume. Requires an active MicInput Component in your scene",
		"params": [
			{
				"name":"Mic Loudness",
				"description":"True if the audioSource is playing"
			},
			{
				"name":"Mic Loudness In Decibels",
				"description":"True if the audioSource is playing"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Switch Audio Clip",
		"category":"Audio",
		"image":"./images/IntSwitchAudioClip.png",
		"description":"Get an AudioClip based on the value of an Integer Variable.",
		"params": [
			{
				"name":"Int Variable",
				"description":"TODO"
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Assigned Audio Clip",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Audio Advance",
		"category":"Audio",
		"image":"./images/PlayAudioAdvance.png",
		"description":"Advance Audio Clip player. 3d position defined by a Game Object or Vector3. If a Vector3 position is defined, it takes priority over the game object. Set Audio Source component on a Game Object. Optionally plays a one shot Audio Clip with Audio Source settings.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Vector 3",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"Use local or world space."
			},
			{
				"name":"Disable",
				"description":"TODO"
			},
			{
				"name":"Clip",
				"description":"Optionally play a 'one shot' AudioClip. NOTE: Volume cannot be adjusted while playing a 'one shot' AudioClip."
			},
			{
				"name":"One Shot",
				"description":"Plays a one shot Audio Clip."
			},
			{
				"name":"Volume",
				"description":"TODO"
			},
			{
				"name":"Spatial Blend",
				"description":"0.0 makes the sound full 2D, 1.0 makes it full 3D"
			},
			{
				"name":"Spatial Blend Curve",
				"description":"TODO"
			},
			{
				"name":"Spatial Blend Curve",
				"description":"TODO"
			},
			{
				"name":"Ignore Listener Pause",
				"description":"Allows AudioSource to play even though AudioListener.pause is set to true. This is useful for the menu element sounds or background music in pause menus."
			},
			{
				"name":"Ignore Listener Volume",
				"description":"Allows AudioSource to play even though AudioListener.pause is set to true. This is useful for the menu element sounds or background music in pause menus."
			},
			{
				"name":"Play On Awake",
				"description":"TODO"
			},
			{
				"name":"Loop",
				"description":"TODO"
			},
			{
				"name":"Spatialize",
				"description":"Enables or disables spatialization."
			},
			{
				"name":"Pan Stereo",
				"description":"Pans a playing sound in a stereo way (left or right). This only applies to sounds that are Mono or Stereo. / -1.0 = Full left / 0.0 = center / 1.0 = full right"
			},
			{
				"name":"Mixer",
				"description":"TODO"
			},
			{
				"name":"Doppler Level",
				"description":"Sets the Doppler scale for this AudioSource."
			},
			{
				"name":"Use Spread",
				"description":"Sets the spread angle (in degrees) of a 3d stereo or multichannel sound in speaker space.0 = all sound channels are located at the same speaker location and is 'mono'. 360 = all subchannels are located at the opposite speaker location to the speaker location that it should be according to 3D position. Default = 0."
			},
			{
				"name":"Spread",
				"description":"TODO"
			},
			{
				"name":"Spread Curve",
				"description":"TODO"
			},
			{
				"name":"Spread Curve",
				"description":"TODO"
			},
			{
				"name":"Rolloff Mode",
				"description":"Sets/Gets how the AudioSource attenuates over distance."
			},
			{
				"name":"Rolloff Curve",
				"description":"Only works if custom is selected!"
			},
			{
				"name":"Min Distance",
				"description":"MaxDistance the distance the AudioSource will cease to grow louder in volume."
			},
			{
				"name":"Max Distance",
				"description":"MaxDistance is the distance a sound stops attenuating at"
			},
			{
				"name":"Use Priority",
				"description":"when there's more AudioSources playing than available hardware channels. The AudioSources with lowest priority (and audibility) is virtualized first. Priority is an integer between 0 and 255. 0=highest priority, 255=lowest priority."
			},
			{
				"name":"Priority",
				"description":"TODO"
			},
			{
				"name":"Velocity Update Select",
				"description":"TODO"
			},
			{
				"name":"Use Pitch",
				"description":"TODO"
			},
			{
				"name":"Starting Pitch",
				"description":"TODO"
			},
			{
				"name":"Time To Decrease",
				"description":"TODO"
			},
			{
				"name":"Bypass Effects",
				"description":"Bypass effects (Applied from filter components or global listener filters)"
			},
			{
				"name":"Bypass Listener Effects",
				"description":"When set global effects on the AudioListener will not be applied to the audio signal generated by the AudioSource. Does not apply if the AudioSource is playing into a mixer group"
			},
			{
				"name":"Bypass Reverb Zones",
				"description":"When set doesn't route the signal from an AudioSource into the global reverb associated with reverb zones."
			},
			{
				"name":"Reverb Zone Mix",
				"description":"The amount by which the signal from the AudioSource will be mixed into the global reverb associated with the Reverb Zones. The range from 0 to 1 is linear (like the volume property) while the range from 1 to 1.1 is an extra boost range that allows you to boost the reverberated signal by 10 dB. "
			},
			{
				"name":"Reverb Zone Mix Curve",
				"description":"TODO"
			},
			{
				"name":"Reverb Zone Mix Curve",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Debug Channel",
				"description":"TODO"
			},
			{
				"name":"Debug Frequency",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Random Audio From Array",
		"category":"Audio",
		"image":"./images/PlayRandomAudioFromArray.png",
		"description":"Plays a random audioClip from an array. Can also randomize clip pitch. Useful for footsteps. Array var type must be Object-->UnityEngine-->AudioClip",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an AudioSource component."
			},
			{
				"name":"Volume",
				"description":"Set the volume."
			},
			{
				"name":"Random Pitch Low",
				"description":"Set the lowest the pitch can go. Leave at 1 for no random pitch."
			},
			{
				"name":"Random Pitch High",
				"description":"Set the highest the pitch can go. Leave at 1 for no random pitch."
			},
			{
				"name":"Audio Array",
				"description":"The array of AudioClips."
			},
			{
				"name":"Wait For Finish",
				"description":"If true the Finished event will fire before audio is done playing."
			},
			{
				"name":"Last Index",
				"description":"Use this variable to avoid repeats. Store it and repeats won't happen."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when the AudioClip finishes playing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Random Sound 2",
		"category":"Audio",
		"image":"./images/PlayRandomSound2.png",
		"description":"Plays a Random Audio Clip at a position defined by a Game Object or a Vector3. If a position is defined, it takes priority over the game object. You can set the relative weight of the clips to control how often they are selected.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Position",
				"description":"TODO"
			},
			{
				"name":"Audio Clips",
				"description":"TODO"
			},
			{
				"name":"Weights",
				"description":"TODO"
			},
			{
				"name":"Volume",
				"description":"TODO"
			},
			{
				"name":"Repeat",
				"description":"Can hit the same number twice in a row"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Random Sound No Repeat",
		"category":"Audio",
		"image":"./images/PlayRandomSoundNoRepeat.png",
		"description":"Plays a Random Audio Clip at a position defined by a Game Object or a Vector3. If a position is defined, it takes priority over the game object. You can set the relative weight of the clips to control how often they are selected.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Position",
				"description":"TODO"
			},
			{
				"name":"Audio Clips",
				"description":"TODO"
			},
			{
				"name":"Weights",
				"description":"TODO"
			},
			{
				"name":"Volume",
				"description":"TODO"
			},
			{
				"name":"Repeat",
				"description":"Can hit the same number twice in a row"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Single Audio Random Pitch",
		"category":"Audio",
		"image":"./images/PlaySingleAudioRandomPitch.png",
		"description":"Plays a single audio clip with a random pitch. var type must be Object-->UnityEngine-->AudioClip",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an AudioSource component."
			},
			{
				"name":"Volume",
				"description":"Set the volume."
			},
			{
				"name":"Random Pitch Low",
				"description":"Set the lowest the pitch can go. Leave at 1 for no random pitch."
			},
			{
				"name":"Random Pitch High",
				"description":"Set the highest the pitch can go. Leave at 1 for no random pitch."
			},
			{
				"name":"Audio Clip",
				"description":"TODO"
			},
			{
				"name":"Wait For Finish",
				"description":"If true the Finished event will fire before audio is done playing."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when the AudioClip finishes playing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Mixer Get Float Value",
		"category":"Audio",
		"image":"./images/AudioMixerGetFloatValue.png",
		"description":"Gets the float value of an exposed parameter for a Unity Audio Mixer. Prior to calling SetFloat and after ClearFloat has been called on this parameter the value returned will be that of the current snapshot or snapshot transition.",
		"params": [
			{
				"name":"The Mixer",
				"description":"The Audio Mixer with the exposed parameter."
			},
			{
				"name":"Exposed Float Name",
				"description":"The name of the exposed parameter."
			},
			{
				"name":"Store Float Value",
				"description":"Store the Float value in a variable"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Mixer Set Float Value",
		"category":"Audio",
		"image":"./images/AudioMixerSetFloatValue.png",
		"description":"Sets the float value of an exposed parameter for a Unity Audio Mixer.",
		"params": [
			{
				"name":"The Mixer",
				"description":"The Audio Mixer with the exposed parameter."
			},
			{
				"name":"Exposed Float Name",
				"description":"The name of the exposed parameter."
			},
			{
				"name":"Floatvalue",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Mixer Set Multi Float Values",
		"category":"Audio",
		"image":"./images/AudioMixerSetMultiFloatValues.png",
		"description":"Sets the float values of multiple exposed parameters for a Unity Audio Mixer.",
		"params": [
			{
				"name":"The Mixer",
				"description":"The Audio Mixer with the exposed parameter(s)."
			},
			{
				"name":"Exposed Float Name",
				"description":"The name of the exposed parameter."
			},
			{
				"name":"Floatvalue",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Blend Shape Index",
		"category":"BlendShapes",
		"image":"./images/GetBlendShapeIndex.png",
		"description":"Returns the BlendShape index using its name.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target. Requires a SkinnedMeshRenderer component "
			},
			{
				"name":"Blend Shape Name",
				"description":"The BlendShape name"
			},
			{
				"name":"Blend Shape Index",
				"description":"The BlendShape index of blendShapeName"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Blend Shape Name",
		"category":"BlendShapes",
		"image":"./images/GetBlendShapeName.png",
		"description":"Returns the BlendShape name using its index.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target. Requires a SkinnedMeshRenderer component "
			},
			{
				"name":"Blend Shape Index",
				"description":"The BlendShape index"
			},
			{
				"name":"Blend Shape Name",
				"description":"The BlendShape name of blendShapeIndex"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Blend Shapes Count",
		"category":"BlendShapes",
		"image":"./images/GetBlendShapesCount.png",
		"description":"Returns BlendShapes count on this mesh.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target. Requires a SkinnedMeshRenderer component "
			},
			{
				"name":"Blend Shapes Count",
				"description":"The number of BlendShapes on this mesh"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Blend Shape Weight",
		"category":"BlendShapes",
		"image":"./images/GetBlendShapeWeight.png",
		"description":"Returns weight of BlendShape on this renderer. You can use the blendshape index or name. Check Every Frame to update continously.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target. Requires a SkinnedMeshRenderer component "
			},
			{
				"name":"Blend Shape Index",
				"description":"The BlendShape index, starting at 0. Out of range indexes will produce error."
			},
			{
				"name":"Or Blend Shape Name",
				"description":"Or the BlendShape name. If set, blendShapeIndex will be ignored."
			},
			{
				"name":"Weight",
				"description":"The BlendShape weight, ranging from 0 to 100."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame, while the state is active"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Blend Shape Weight",
		"category":"BlendShapes",
		"image":"./images/SetBlendShapeWeight.png",
		"description":"Sets weight of BlendShape on this renderer. You can use the blendshape index or name. Check Every Frame to update continously, e.g., if you're manipulating a variable that controls this blendshape weight.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target. Requires a SkinnedMeshRenderer component "
			},
			{
				"name":"Blend Shape Index",
				"description":"The BlendShape index, starting at 0. Out of range indexes will produce error."
			},
			{
				"name":"Or Blend Shape Name",
				"description":"Or the BlendShape name. If set, blendShapeIndex will be ignored."
			},
			{
				"name":"Weight",
				"description":"The BlendShape weight, ranging from 0 to 100. out of range values will have no effect."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame, while the state is active"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera 2d Smooth Follow",
		"category":"Camera",
		"image":"./images/Camera2dSmoothFollow.png",
		"description":"Camera 2d  SmoothFollow",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Damp Time",
				"description":"Approximately the time it will take to reach the target. A smaller value will reach the target faster."
			},
			{
				"name":"Target Game Object",
				"description":"The target to follow"
			},
			{
				"name":"X Offset",
				"description":"Offset x value from target"
			},
			{
				"name":"Y Offset",
				"description":"Offset y value from target"
			},
			{
				"name":"Disable",
				"description":"Disable Follow, this is usefull if you need to stay in the same state. you can use a set fsm bool action from another fsm to disable/enable follow"
			},
			{
				"name":"Follow X",
				"description":"use the xOffset"
			},
			{
				"name":"Follow Y",
				"description":"use the yOffset"
			},
			{
				"name":"Use Fixed Update",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Animate To Ortho",
		"category":"Camera",
		"image":"./images/CameraAnimateToOrtho.png",
		"description":"Smooth animation from perspective ( or ortho ) to Ortho. Use GameObject reference instead of camera reference",
		"params": [
			{
				"name":"Camera",
				"description":"The camera to animate. If null or not defined, uses the MainCamera"
			},
			{
				"name":"Orthographic Size",
				"description":"The orthographic size to reach"
			},
			{
				"name":"Near",
				"description":"The near plane distance to reach. Leave to none for no effect"
			},
			{
				"name":"Far",
				"description":"The near plane distance to reach. Leave to none for no effect"
			},
			{
				"name":"Duration",
				"description":"The duration of the transition animation"
			},
			{
				"name":"Transition Done Event",
				"description":"Event sent when transition is done"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Animate To Perspective",
		"category":"Camera",
		"image":"./images/CameraAnimateToPerspective.png",
		"description":"Smooth animation from ortho ( or perspective) to Perspective. Use GameObject reference instead of camera reference",
		"params": [
			{
				"name":"Camera",
				"description":"The camera to animate. If null or not defined, uses the MainCamera"
			},
			{
				"name":"Fov",
				"description":"The Field of View to reach"
			},
			{
				"name":"Near",
				"description":"The near plane distance to reach. Leave to none for no effect"
			},
			{
				"name":"Far",
				"description":"The near plane distance to reach. Leave to none for no effect"
			},
			{
				"name":"Duration",
				"description":"The duration of the transition animation"
			},
			{
				"name":"Transition Done Event",
				"description":"Event sent when transition is done"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Cross Fade Pro",
		"category":"Camera",
		"image":"./images/CameraCrossFadePro.png",
		"description":"Cross fade between two camera using RenderTexture",
		"params": [
			{
				"name":"Camera From",
				"description":"From this camera"
			},
			{
				"name":"Camera To",
				"description":"To this camera"
			},
			{
				"name":"Fade Time",
				"description":"TODO"
			},
			{
				"name":"In Progress",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Rect Wipe Fade",
		"category":"Camera",
		"image":"./images/CameraRectWipeFade.png",
		"description":"Cross fade between two camera",
		"params": [
			{
				"name":"Camera From",
				"description":"From this camera"
			},
			{
				"name":"Camera To",
				"description":"To this camera"
			},
			{
				"name":"Fade Time",
				"description":"TODO"
			},
			{
				"name":"Use Curve",
				"description":"TODO"
			},
			{
				"name":"Curve",
				"description":"TODO"
			},
			{
				"name":"Zoom Type Select",
				"description":"TODO"
			},
			{
				"name":"In Progress",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Dream Wipe Fade",
		"category":"Camera",
		"image":"./images/CameraDreamWipeFade.png",
		"description":"DreamWipe fade between two camera",
		"params": [
			{
				"name":"Camera From",
				"description":"From this camera"
			},
			{
				"name":"Camera To",
				"description":"To this camera"
			},
			{
				"name":"Fade Time",
				"description":"TODO"
			},
			{
				"name":"Use Curve",
				"description":"TODO"
			},
			{
				"name":"Curve",
				"description":"TODO"
			},
			{
				"name":"Plane Resolution",
				"description":"Higher numbers make the DreamWipe effect smoother, but take more CPU time"
			},
			{
				"name":"Set Wave Scale",
				"description":"TODO"
			},
			{
				"name":"Set Wave Frequency",
				"description":"TODO"
			},
			{
				"name":"Plane Material",
				"description":"You should use Custom/Unlit2Pass"
			},
			{
				"name":"In Progress",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Ortho 2d Fill Sprite",
		"category":"Camera",
		"image":"./images/CameraOrtho2dFillSprite.png",
		"description":"Fill a sprite inside the screen assuming the camera is in a 2d setup. Cropping may occur, use CameraOrthoFitSprite if you don't want any cropping",
		"params": [
			{
				"name":"Camera",
				"description":"The Camera to control. Leave to none to use the MainCamera"
			},
			{
				"name":"Target Sprite",
				"description":"The sprite to fill"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Ortho 2d Fit Sprite",
		"category":"Camera",
		"image":"./images/CameraOrtho2dFitSprite.png",
		"description":"Fit a sprite inside the screen assuming the camera is in a 2d setup. No Cropping will occur, use CameraOrthoFillSprite to crop and fill screen",
		"params": [
			{
				"name":"Camera",
				"description":"The Camera to control. Leave to none to use the MainCamera"
			},
			{
				"name":"Target Sprite",
				"description":"The sprite to fit"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Ortho Fill Size",
		"category":"Camera",
		"image":"./images/CameraOrthoFillSize.png",
		"description":"Fill an Aspect Ratio inside the screen. Cropping may occur, use CameraOrthoFitSize if you don't want any cropping",
		"params": [
			{
				"name":"Camera",
				"description":"The Camera to control. Leave to none to use the MainCamera"
			},
			{
				"name":"Target Width",
				"description":"The width to fill"
			},
			{
				"name":"Target Height",
				"description":"The height to fill"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Ortho Fit Size",
		"category":"Camera",
		"image":"./images/CameraOrthoFitSize.png",
		"description":"Fit an Aspect Ratio inside the screen. No Cropping will occur, use CameraOrthoFillSize to crop and fill screen",
		"params": [
			{
				"name":"Camera",
				"description":"The Camera to control. Leave to none to use the MainCamera"
			},
			{
				"name":"Target Width",
				"description":"The width to fit"
			},
			{
				"name":"Target Height",
				"description":"The height to fit"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Ortho Track Targets",
		"category":"Camera",
		"image":"./images/CameraOrthoTrackTargets.png",
		"description":"Sets the ortho size and position of the Camera to keep all targets in view.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Camera. Leave to none to use the MainCamera"
			},
			{
				"name":"Targets",
				"description":"The targets."
			},
			{
				"name":"Zoom Speed",
				"description":"The speed of adjustments"
			},
			{
				"name":"Bounding Box Padding",
				"description":"The padding on each side of the camera view."
			},
			{
				"name":"Minimum Orthographic Size",
				"description":"The minimum orthos size if all targets gets closer to one another."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Pinch Zoom",
		"category":"Device",
		"image":"./images/CameraPinchZoom.png",
		"description":"Pinch zoom the main camera (Touch zoom)",
		"params": [
			{
				"name":"Use Main Camera",
				"description":"Use current main camera. If false use storeGameObject to change the main camera"
			},
			{
				"name":"Game Object",
				"description":"The GameObject to set as the main camera (should have a Camera component)."
			},
			{
				"name":"Perspective Zoom Speed",
				"description":"Perspective camera zoom speed"
			},
			{
				"name":"Ortho Zoom Speed",
				"description":"Orthographic camera zoom speed"
			},
			{
				"name":"Min Size Clamp",
				"description":"Minimum Value. Cannot go below that number"
			},
			{
				"name":"Max Size Clamp",
				"description":"Maximum Value. Cannot go above that number"
			},
			{
				"name":"Disable Action",
				"description":"Disable action and send event"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Pinch Zoom Advance",
		"category":"Device",
		"image":"./images/CameraPinchZoomAdvance.png",
		"description":"Advance pinch zoom the main camera (Touch zoom)",
		"params": [
			{
				"name":"Use Main Camera",
				"description":"Use current main camera. If false use storeGameObject to change the main camera"
			},
			{
				"name":"Game Object",
				"description":"The GameObject to set as the main camera (should have a Camera component)."
			},
			{
				"name":"Perspective Zoom Speed",
				"description":"Perspective camera zoom speed"
			},
			{
				"name":"Ortho Zoom Speed",
				"description":"Orthographic camera zoom speed"
			},
			{
				"name":"Min Size Clamp",
				"description":"Minimum Value. Cannot go below that number"
			},
			{
				"name":"Max Size Clamp",
				"description":"Maximum Value. Cannot go above that number"
			},
			{
				"name":"Pinch Zoom Active",
				"description":"Disable action and send event"
			},
			{
				"name":"Activate",
				"description":"Activate Send Events"
			},
			{
				"name":"Event Target",
				"description":"Where to send the event. "
			},
			{
				"name":"Send External Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			},
			{
				"name":"Finger Id",
				"description":"Store Finger Id's when pinch is active. Index = (x)"
			},
			{
				"name":"Finger Id Count",
				"description":"Total Finger Id when pinch is active"
			},
			{
				"name":"Activate If Finger Count",
				"description":"Activate 2 finger rule which means 2 finger have to touch screen at once. Not one after the other."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Shape Wipe Fade",
		"category":"Camera",
		"image":"./images/CameraShapeWipeFade.png",
		"description":"Shape wipe fade between two camera",
		"params": [
			{
				"name":"Camera From",
				"description":"From this camera"
			},
			{
				"name":"Camera To",
				"description":"To this camera"
			},
			{
				"name":"Fade Time",
				"description":"TODO"
			},
			{
				"name":"Use Curve",
				"description":"TODO"
			},
			{
				"name":"Curve",
				"description":"TODO"
			},
			{
				"name":"Zoom Type Select",
				"description":"TODO"
			},
			{
				"name":"Amount Rotate",
				"description":"TODO"
			},
			{
				"name":"Set Mesh",
				"description":"TODO"
			},
			{
				"name":"Destroy Mesh",
				"description":"TODO"
			},
			{
				"name":"Shape Material",
				"description":"You should use Custom/DepthMask"
			},
			{
				"name":"In Progress",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Squish Wipe Fade",
		"category":"Camera",
		"image":"./images/CameraSquishWipeFade.png",
		"description":"Squish fade between two camera",
		"params": [
			{
				"name":"Camera From",
				"description":"From this camera"
			},
			{
				"name":"Camera To",
				"description":"To this camera"
			},
			{
				"name":"Fade Time",
				"description":"TODO"
			},
			{
				"name":"Use Curve",
				"description":"TODO"
			},
			{
				"name":"Curve",
				"description":"TODO"
			},
			{
				"name":"Type Select",
				"description":"TODO"
			},
			{
				"name":"In Progress",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Collider 2D Is Visible",
		"category":"Camera",
		"image":"./images/Collider2DIsVisible.png",
		"description":"Tests if the Collider2D on a GameObject is visible. This will return true even if just a portion of the collider is visible (checks if the Collider2D bounds are outside the camera frustum planes).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test the collider of."
			},
			{
				"name":"Camera",
				"description":"The Camera to check against the collider."
			},
			{
				"name":"True Event",
				"description":"Event to send if the collider is visible."
			},
			{
				"name":"False Event",
				"description":"Event to send if the collider is not visible."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Collider Is Visible",
		"category":"Camera",
		"image":"./images/ColliderIsVisible.png",
		"description":"Tests if the Collider2D on a GameObject is visible. This will return true even if just a portion of the collider is visible (checks if the Collider bounds are outside the camera frustum planes).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test the collider of."
			},
			{
				"name":"Camera",
				"description":"The Camera to check against the collider."
			},
			{
				"name":"True Event",
				"description":"Event to send if the collider is visible."
			},
			{
				"name":"False Event",
				"description":"Event to send if the collider is not visible."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Render Texture",
		"category":"Camera",
		"image":"./images/CreateRenderTexture.png",
		"description":"Create a new RenderTexture",
		"params": [
			{
				"name":"Width",
				"description":"The width of the renderTexture"
			},
			{
				"name":"Height",
				"description":"The height of the renderTexture"
			},
			{
				"name":"Depth",
				"description":"The depth renderTexture, depth can be 0, 16 or 24"
			},
			{
				"name":"Texture Format",
				"description":"The texture format"
			},
			{
				"name":"Texture Read Write",
				"description":"The readwrite option"
			},
			{
				"name":"Render Texture",
				"description":"The new renderTexture"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cut To Camera 2",
		"category":"Camera",
		"image":"./images/CutToCamera2.png",
		"description":"Activates a Camera in the scene. Use GameObject reference instead of camera reference",
		"params": [
			{
				"name":"Camera",
				"description":"TODO"
			},
			{
				"name":"Make Main Camera",
				"description":"TODO"
			},
			{
				"name":"Cut Back On Exit",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Drag Camera",
		"category":"Camera",
		"image":"./images/DragCamera.png",
		"description":"Drag Camera with mouse or touch.",
		"params": [
			{
				"name":"Camera Obj",
				"description":"The main camera (should have a Camera component)."
			},
			{
				"name":"Speed",
				"description":"Movement speed."
			},
			{
				"name":"Smooth Control",
				"description":"How smooth it should be. Highest number = Higher smoothness."
			},
			{
				"name":"Touch Input",
				"description":"Use touch and not mouse"
			},
			{
				"name":"Zoom Only",
				"description":"Only use Z axis"
			},
			{
				"name":"Key",
				"description":"Use a key. None = Off"
			},
			{
				"name":"Mouse Button",
				"description":"TODO"
			},
			{
				"name":"Camera Moving",
				"description":"TODO"
			},
			{
				"name":"Disable",
				"description":"Disable Action"
			},
			{
				"name":"Disable Exit",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fighter 3d Camera",
		"category":"Camera",
		"image":"./images/Fighter3dCamera.png",
		"description":"Camera for a 3D fighting style game (or anything else you want)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to set as the main camera (should have a Camera component)."
			},
			{
				"name":"Char A",
				"description":"TODO"
			},
			{
				"name":"Char B",
				"description":"TODO"
			},
			{
				"name":"Distance",
				"description":"TODO"
			},
			{
				"name":"Snappyness",
				"description":"TODO"
			},
			{
				"name":"Interpolation",
				"description":"Select interpolation type."
			},
			{
				"name":"Sensitivity",
				"description":"TODO"
			},
			{
				"name":"Up Distance",
				"description":"TODO"
			},
			{
				"name":"Vectordirection",
				"description":"Camera Axis Direction - Default is Up"
			},
			{
				"name":"Obj Direction",
				"description":"TODO"
			},
			{
				"name":"Update Type Select",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fighter Camera Advance 2d",
		"category":"Camera",
		"image":"./images/FighterCameraAdvance2d.png",
		"description":"2D Camera for a fighting style game (or anything else you want) - Camera focuses on every GameObject on the screen. Unlimited players - must all have same Tag OR set targets array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to set as the main camera (should have a Camera component)."
			},
			{
				"name":"Ortho Size Min",
				"description":"The camera size."
			},
			{
				"name":"Ortho Size Max",
				"description":"TODO"
			},
			{
				"name":"Camera Buffer X",
				"description":"TODO"
			},
			{
				"name":"Camera Buffer Y",
				"description":"TODO"
			},
			{
				"name":"Targets",
				"description":"TODO"
			},
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Distance",
				"description":"TODO"
			},
			{
				"name":"Snappyness",
				"description":"TODO"
			},
			{
				"name":"Interpolation",
				"description":"Select interpolation type."
			},
			{
				"name":"Sensitivity",
				"description":"TODO"
			},
			{
				"name":"Update Type Select",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Camera Aspect",
		"category":"Camera",
		"image":"./images/GetCameraAspect.png",
		"description":"Gets the aspect of the Camera (width/height).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Camera Component. If not defined will use the Main Camera"
			},
			{
				"name":"Aspect",
				"description":"The aspect (width/height)"
			},
			{
				"name":"Is Wide Event",
				"description":"Event sent if aspect is more wide than tall"
			},
			{
				"name":"Is Tall Event",
				"description":"Event sent if aspect is tall wide than wide"
			},
			{
				"name":"Is Square Event",
				"description":"Event sent if aspect is as wide as tall"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Camera Clipping Plane",
		"category":"Camera",
		"image":"./images/GetCameraClippingPlane.png",
		"description":"Gets the ortho size of the Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Camera Component. If not defined will use the Main Camera"
			},
			{
				"name":"Near Clipping Plane",
				"description":"The near Clipping Plane."
			},
			{
				"name":"Far Clipping Plane",
				"description":"The far Clipping Plane."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Camera Ortho Size",
		"category":"Camera",
		"image":"./images/GetCameraOrthoSize.png",
		"description":"Gets the ortho size of the Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Camera Component. If not defined will use the Main Camera"
			},
			{
				"name":"Ortho Size",
				"description":"The ortho size."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Release Render Texture",
		"category":"Camera",
		"image":"./images/ReleaseRenderTexture.png",
		"description":"Release a RenderTexture",
		"params": [
			{
				"name":"Camera",
				"description":"TODO"
			},
			{
				"name":"Or Render Texture",
				"description":"The renderTexture to release"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Screen To 3d Plane Point",
		"category":"Camera",
		"image":"./images/ScreenTo3dPlanePoint.png",
		"description":"Project a screen point on a 3d plane.",
		"params": [
			{
				"name":"Camera",
				"description":"The camera, leave empty if you want to use the camera this fsm is attached to or if you want to use the main camera"
			},
			{
				"name":"Ground As Transform",
				"description":"TODO"
			},
			{
				"name":"Ground Transform",
				"description":"The ground transform, Y axis will be the ground normal."
			},
			{
				"name":"Ground Point",
				"description":"The ground position,"
			},
			{
				"name":"Ground Normal",
				"description":"The ground normal,"
			},
			{
				"name":"Screen Point",
				"description":"The screen point"
			},
			{
				"name":"World Point Result",
				"description":"The resulting world point"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Screen To World Point Advanced",
		"category":"Camera",
		"image":"./images/ScreenToWorldPointAdvanced.png",
		"description":"Transforms position from screen space into world space. NOTE: Uses the MainCamera!",
		"params": [
			{
				"name":"Screen Vector",
				"description":"Screen position as a vector."
			},
			{
				"name":"Screen X",
				"description":"Screen X position in pixels or normalized. See Normalized."
			},
			{
				"name":"Screen Y",
				"description":"Screen X position in pixels or normalized. See Normalized."
			},
			{
				"name":"Screen Z",
				"description":"Distance into the screen in world units."
			},
			{
				"name":"Normalized",
				"description":"If true, X/Y coordinates are considered normalized (0-1), otherwise they are expected to be in pixels"
			},
			{
				"name":"Store World Vector",
				"description":"Store the world position in a vector3 variable."
			},
			{
				"name":"Store World X",
				"description":"Store the world X position in a float variable."
			},
			{
				"name":"Store World Y",
				"description":"Store the world Y position in a float variable."
			},
			{
				"name":"Store World Z",
				"description":"Store the world Z position in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Camera Depth",
		"category":"Camera",
		"image":"./images/SetCameraDepth.png",
		"description":"Sets the depth of a Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Depth",
				"description":"The depth of a Camera."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Camera Ortho Size",
		"category":"Camera",
		"image":"./images/SetCameraOrthoSize.png",
		"description":"Sets the ortho size of the Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Ortho Size",
				"description":"The ortho size."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Camera Rect",
		"category":"Camera",
		"image":"./images/SetCameraRect.png",
		"description":"Sets the Rect of a Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Rect",
				"description":"TODO"
			},
			{
				"name":"Coordinates",
				"description":"Rect coordinates: Screen is relative and 0,0 is the top left of the screen. Viewport is relative and 0,0 is bottom left of the screen. Otherwise coordinates are in pixels."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Camera Target Texture",
		"category":"Camera",
		"image":"./images/SetCameraTargetTexture.png",
		"description":"Sets the TargetTexture of a Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Render Texture",
				"description":"The renderTexture to set as target for that Camera."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Orth Camera Pixel Perfect",
		"category":"Camera",
		"image":"./images/SetOrthCameraPixelPerfect.png",
		"description":"Set the Orthographic size of the Camera to be pixel perfect to sprite",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Sprite Size",
				"description":"Height of Sprite Square pixel (32x32, 64x64, etc)"
			},
			{
				"name":"Pixel Scale",
				"description":"Scale the pixel - 1 Sprite unit pixel = 1x1, 2x2 or 3x3, etc, screen unit pixels. 0 = disable"
			},
			{
				"name":"Camera Size",
				"description":"TODO"
			},
			{
				"name":"Size Result",
				"description":"TODO"
			},
			{
				"name":"See Formula",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Targets Tracking Ortho Camera",
		"category":"Camera",
		"image":"./images/TargetsTrackingOrthoCamera.png",
		"description":"2D Camera track multiple targets - Camera focuses on every GameObject on the screen. Unlimited objs - must all have same Tag OR set targets array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to set as the main camera (should have a Camera component)."
			},
			{
				"name":"Ortho Size Min",
				"description":"The camera size."
			},
			{
				"name":"Ortho Size Max",
				"description":"TODO"
			},
			{
				"name":"Bounding Box Padding",
				"description":"TODO"
			},
			{
				"name":"Zoom Speed",
				"description":"TODO"
			},
			{
				"name":"Targets",
				"description":"TODO"
			},
			{
				"name":"Use Tag",
				"description":"TODO"
			},
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Update Type Select",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"World To Screen Point Advanced",
		"category":"Camera",
		"image":"./images/WorldToScreenPointAdvanced.png",
		"description":"Transforms position from world space into screen space. NOTE: Uses the MainCamera!",
		"params": [
			{
				"name":"World Position",
				"description":"World position to transform into screen coordinates."
			},
			{
				"name":"World X",
				"description":"World X position."
			},
			{
				"name":"World Y",
				"description":"World Y position."
			},
			{
				"name":"World Z",
				"description":"World Z position."
			},
			{
				"name":"Store Screen Point",
				"description":"Store the screen position in a Vector3 Variable. Z will equal zero."
			},
			{
				"name":"Store Screen X",
				"description":"Store the screen X position in a Float Variable."
			},
			{
				"name":"Store Screen Y",
				"description":"Store the screen Y position in a Float Variable."
			},
			{
				"name":"Normalize",
				"description":"Normalize screen coordinates (0-1). Otherwise coordinates are in pixels."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Color Mix",
		"category":"Color",
		"image":"./images/ColorMix.png",
		"description":"Mixes two colors together.",
		"params": [
			{
				"name":"Color 1",
				"description":"Set the first color to blend."
			},
			{
				"name":"Color 2",
				"description":"Set the second color to blend."
			},
			{
				"name":"Mix Ratio",
				"description":"Between 0-1. 0.5 equal mix. Below 0.5 bias towards first color. Above 0.5 bias towards second color."
			},
			{
				"name":"Color Result",
				"description":"Set a color variable to store the result."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Compare Colors",
		"category":"Color",
		"image":"./images/CompareColors.png",
		"description":"Compares one color against multiple and sends Events based on the result.",
		"params": [
			{
				"name":"Main Color",
				"description":"The color variable to compare."
			},
			{
				"name":"Compare Tos",
				"description":"Color to compare to the main color."
			},
			{
				"name":"Compare Events",
				"description":"Event to raise on match."
			},
			{
				"name":"No Match Event",
				"description":"Event to raise if no matches are found."
			},
			{
				"name":"Compare By",
				"description":"Defines what part of the colors should be compared (R = Red, G = Green, B = Blue, A = Alpha)."
			},
			{
				"name":"Store Result",
				"description":"Store the result of the check in a bool variable (true if equal, false if not equal)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're waiting for a true or false result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Color To Hex",
		"category":"Color",
		"image":"./images/ConvertColorToHex.png",
		"description":"Convert a color to hexa (html)",
		"params": [
			{
				"name":"Color",
				"description":"The color"
			},
			{
				"name":"With Alpha",
				"description":"Include the alpha channel"
			},
			{
				"name":"Append Hash Char",
				"description":"Adds # at the beginning"
			},
			{
				"name":"Result",
				"description":"The resulting hexa"
			},
			{
				"name":"Everyframe",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Hex To Color",
		"category":"Color",
		"image":"./images/ConvertHexToColor.png",
		"description":"Convert a hexadecimal string to color",
		"params": [
			{
				"name":"Hexa String",
				"description":"The hexadecimal color"
			},
			{
				"name":"Append Hash Char",
				"description":"Adds # at the beginning if necessary"
			},
			{
				"name":"Color",
				"description":"The resulting color"
			},
			{
				"name":"Success",
				"description":"TODO"
			},
			{
				"name":"Success Event",
				"description":"TODO"
			},
			{
				"name":"Failure Event",
				"description":"TODO"
			},
			{
				"name":"Everyframe",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Color HSV",
		"category":"Color",
		"image":"./images/GetColorHSV.png",
		"description":"Get the HSV values from a color.",
		"params": [
			{
				"name":"Color Source",
				"description":"The color source"
			},
			{
				"name":"HSV",
				"description":"The hsv values of the color source"
			},
			{
				"name":"Hue",
				"description":"The Hue value of the color source"
			},
			{
				"name":"Saturation",
				"description":"The Saturation value of the color source"
			},
			{
				"name":"Value",
				"description":"The Value value of the color source"
			},
			{
				"name":"Alpha",
				"description":"The alpha value of the color source"
			},
			{
				"name":"Everyframe",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get CSS3 Color",
		"category":"Color",
		"image":"./images/GetCSS3Color.png",
		"description":"Pick CSS3 color, optionnaly set the alpha as well: http://www.w3.org/TR/css3-color/#svg-color ",
		"params": [
			{
				"name":"Colorindex",
				"description":"TODO"
			},
			{
				"name":"Color Name",
				"description":"The CSS3 Color Name"
			},
			{
				"name":"Alpha",
				"description":"Set the alpha, leave to none for no effect"
			},
			{
				"name":"Store Result",
				"description":"The random Color"
			},
			{
				"name":"Everyframe",
				"description":"repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sprite Color RGBA",
		"category":"Color",
		"image":"./images/GetSpriteColorRGBA.png",
		"description":"Sets the color RGBA of sprite renderer",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Color",
				"description":"Get The Color of the UI component"
			},
			{
				"name":"Red",
				"description":"Store the red channel in a float variable."
			},
			{
				"name":"Green",
				"description":"Store the green channel in a float variable."
			},
			{
				"name":"Blue",
				"description":"Store the blue channel in a float variable."
			},
			{
				"name":"Alpha",
				"description":"Store the alpha channel in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the color variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Color",
		"category":"Color",
		"image":"./images/RandomColor.png",
		"description":"Pick a random color. Optionnaly leave the alpha channel alone",
		"params": [
			{
				"name":"Store Result",
				"description":"The random Color"
			},
			{
				"name":"Include Alpha",
				"description":"Includes a random alpha value ( ranging from 0.1 to 1 to avoid totally invisible colors)"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Color HSV",
		"category":"Color",
		"image":"./images/SetColorHSV.png",
		"description":"Set a color based on HSV values",
		"params": [
			{
				"name":"HSV",
				"description":"The hsv color source"
			},
			{
				"name":"Hue",
				"description":"The Hue value source, overrides HSV Hue if set"
			},
			{
				"name":"Saturation",
				"description":"The Saturation value source, overrides HSV Saturation if set"
			},
			{
				"name":"Value",
				"description":"The value value source, overrides HSV Value if set"
			},
			{
				"name":"Alpha",
				"description":"The alpha value source"
			},
			{
				"name":"Color Result",
				"description":"The resulting color"
			},
			{
				"name":"Everyframe",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Hex Color Value",
		"category":"Color",
		"image":"./images/SetHexColorValue.png",
		"description":"Sets the value of a Color Variable by Hex -  You can use 6 hex = RGB or hex + apha = RGBA",
		"params": [
			{
				"name":"Color Variable",
				"description":"TODO"
			},
			{
				"name":"Hex Input",
				"description":"6 Hex without alpha or 8 Hex with alpha"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set HSV To Color",
		"category":"Color",
		"image":"./images/SetHSVToColor.png",
		"description":"Creates colour from HSV input.",
		"params": [
			{
				"name":"Hue",
				"description":"TODO"
			},
			{
				"name":"Saturation",
				"description":"TODO"
			},
			{
				"name":"Brightness",
				"description":"TODO"
			},
			{
				"name":"Alpha",
				"description":"The alpha value"
			},
			{
				"name":"Hdr",
				"description":"Output HDR colours. If true, the returned colour will not be clamped to [0..1]."
			},
			{
				"name":"Color Variable",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Color Value",
		"category":"Color",
		"image":"./images/SetMultiColorValue.png",
		"description":"Sets the value of many Color Variable.",
		"params": [
			{
				"name":"Color Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Color RGBA",
		"category":"Color",
		"image":"./images/SetSpriteColorRGBA.png",
		"description":"Sets the color RGBA of sprite renderer",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Color",
				"description":"Set the Color of the UI component"
			},
			{
				"name":"Red",
				"description":"Set the red channel"
			},
			{
				"name":"Green",
				"description":"Set the green channel"
			},
			{
				"name":"Blue",
				"description":"Set the blue channel"
			},
			{
				"name":"Alpha",
				"description":"Set the alpha channel"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Bytes Length To Readable Size",
		"category":"Convert",
		"image":"./images/ConvertBytesLengthToReadableSize.png",
		"description":"Convert bytes lenght into a human readable format like 13KB or 1.4GB.",
		"params": [
			{
				"name":"Byte Length",
				"description":"The byte lenght to convert."
			},
			{
				"name":"Format",
				"description":"The human readable pattern. 0 being the size and 1 being the size suffix.\n For example \"{0:0.#}{1}\" wouldshow a single decimal place, and no space"
			},
			{
				"name":"Sizes",
				"description":"The search options. let you search only in the folder or in all sub folders too"
			},
			{
				"name":"Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Color To String",
		"category":"Convert",
		"image":"./images/ConvertColorToString.png",
		"description":"Converts a color to a string. Format is flexible, [r] [g] [b] and [a] are placeholders",
		"params": [
			{
				"name":"Color",
				"description":"The value itself"
			},
			{
				"name":"Use 32 Bit Color",
				"description":"32bit colors ranges from 0 to 255 for their values, else, it ranges from 0 to 1"
			},
			{
				"name":"Format",
				"description":"The string pattern to express the color value."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Decibels To Float",
		"category":"Convert",
		"image":"./images/ConvertDecibelsToFloat.png",
		"description":"Converts Full Scale decibels (DBFS) to a volume value.",
		"params": [
			{
				"name":"Decibels",
				"description":"The Full Scale decibels (DBFS), Range from -80 to 0"
			},
			{
				"name":"Volume",
				"description":"The result Float volume from decibels.  range from 0 to 1"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Float To Bool Using Threshold",
		"category":"Logic",
		"image":"./images/ConvertFloatToBoolUsingThreshold.png",
		"description":"Converts a float and given threshold values, set a bool as a result.",
		"params": [
			{
				"name":"Float Value",
				"description":"The float to use as an input."
			},
			{
				"name":"Threshold Min",
				"description":"Threshold minimum."
			},
			{
				"name":"Threshold Max",
				"description":"Threshold maximum."
			},
			{
				"name":"Set When In Threshold",
				"description":"What happens to the bool result when float is within threshold?"
			},
			{
				"name":"Set When Larger",
				"description":"What happens to the bool result when float is larger than threshold?"
			},
			{
				"name":"Set When Smaller",
				"description":"What happens to the bool result when float is smaller than threshold?"
			},
			{
				"name":"Set When Equal To Min",
				"description":"What happens to the bool result when float is equal to the min threshold?"
			},
			{
				"name":"Set When Equal To Max",
				"description":"What happens to the bool result when float is equal to the max threshold?"
			},
			{
				"name":"Store Bool",
				"description":"To store the resulting bool variable."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Float To Decibels",
		"category":"Convert",
		"image":"./images/ConvertFloatToDecibels.png",
		"description":"Converts a volume value to Full Scale decibels (DBFS).",
		"params": [
			{
				"name":"Volume",
				"description":"The Float volume to convert to full scale decibels (DBFS). range from 0 to 1"
			},
			{
				"name":"Decibels",
				"description":"The Full Scalce decibels (DBFS) result. Range from -80 to 0"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Float To String Fast",
		"category":"Convert",
		"image":"./images/ConvertFloatToStringFast.png",
		"description":"Converts an Float value to a String value with an optional format with less memory allocations.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to convert."
			},
			{
				"name":"String Variable",
				"description":"A String variable to store the converted value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Int variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Formated String To Float",
		"category":"Convert",
		"image":"./images/ConvertFormatedStringToFloat.png",
		"description":"Converts an String value to a Float value.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String variable to convert to an Float."
			},
			{
				"name":"Number Style",
				"description":"TODO"
			},
			{
				"name":"Float Variable",
				"description":"Store the result in an Float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the String variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Formated String To Int",
		"category":"Convert",
		"image":"./images/ConvertFormatedStringToInt.png",
		"description":"Converts an String value to an Int value.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String variable to convert to an integer."
			},
			{
				"name":"Number Style",
				"description":"TODO"
			},
			{
				"name":"Int Variable",
				"description":"Store the result in an Int variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the String variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Int To Enum",
		"category":"Convert",
		"image":"./images/ConvertIntToEnum.png",
		"description":"Convert an int value to an Enum Variable",
		"params": [
			{
				"name":"Value",
				"description":"The int value to convert to Enum"
			},
			{
				"name":"Enum Variable",
				"description":"The Enum Variable to set."
			},
			{
				"name":"Error Event",
				"description":"Event Fired if conversion failed, that is the int is not found in the enum variable"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Int To Float Decimal",
		"category":"Convert",
		"image":"./images/ConvertIntToFloatDecimal.png",
		"description":"Convert an Int into Float decimal.",
		"params": [
			{
				"name":"Decimal Number",
				"description":"TODO"
			},
			{
				"name":"Float Variable",
				"description":"Store the result in a Int variable."
			},
			{
				"name":"Leading Zeros",
				"description":"How many leading zeros in the decimal - example: 3 would mean .000xxx"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Int To String Fast",
		"category":"Convert",
		"image":"./images/ConvertIntToStringFast.png",
		"description":"Converts an Integer value to a String value with an optional format with less memory allocations.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The Int variable to convert."
			},
			{
				"name":"String Variable",
				"description":"A String variable to store the converted value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Int variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Quaternion To String",
		"category":"Convert",
		"image":"./images/ConvertQuaternionToString.png",
		"description":"Converts a Quaternion to a string. Format is flexible, [x] [y] [z] and [w] are placeholders",
		"params": [
			{
				"name":"Quaternion",
				"description":"The value itself"
			},
			{
				"name":"Format",
				"description":"The string pattern to express the Quaternion value."
			},
			{
				"name":"Float Conversion",
				"description":"The c# ToString() format to express each vector float components as strings. Useful if you want to optimized the generated string."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Rect To String",
		"category":"Convert",
		"image":"./images/ConvertRectToString.png",
		"description":"Converts a rect to a string. Format is flexible, [x] [y] [w] and [h] are placeholders",
		"params": [
			{
				"name":"Rect",
				"description":"The value itself"
			},
			{
				"name":"Format",
				"description":"The string pattern to express the Rect value."
			},
			{
				"name":"Float Conversion",
				"description":"The c# ToString() format to express each vector float components as strings. Useful if you want to optimized the generated string."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String Case",
		"category":"String",
		"image":"./images/ConvertStringCase.png",
		"description":"Converts a string to upper or lower case.",
		"params": [
			{
				"name":"String",
				"description":"TODO"
			},
			{
				"name":"Operation",
				"description":"Select upper or lower case."
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Bool",
		"category":"Convert",
		"image":"./images/ConvertStringToBool.png",
		"description":"Converts a string into a Bool variable.",
		"params": [
			{
				"name":"Source",
				"description":"The string representing the bool value."
			},
			{
				"name":"True Value",
				"description":"The expected format of the source representing the true value for a boolean. Warning: Case sensitive"
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Color",
		"category":"Convert",
		"image":"./images/ConvertStringToColor.png",
		"description":"Converts a string into a color variable. Format is flexible, [r] [g] [b] and [a] are placeholders, escape special chars like \\ for parenthesis for example ",
		"params": [
			{
				"name":"Source",
				"description":"The string representing the color value."
			},
			{
				"name":"Format",
				"description":"The expected string pattern for the color value."
			},
			{
				"name":"Use 32 Bit Color",
				"description":"32bit colors ranges from 0 to 255 for their values, else, it ranges from 0 to 1"
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame. Warning, performance will be affected"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Enum",
		"category":"Convert",
		"image":"./images/ConvertStringToEnum.png",
		"description":"Convert an string value to an Enum Variable",
		"params": [
			{
				"name":"Value",
				"description":"The string value to convert to Enum"
			},
			{
				"name":"Enum Variable",
				"description":"The Enum Variable to set."
			},
			{
				"name":"Error Event",
				"description":"Event Fired if conversion failed, that is the int is not found in the enum variable"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Float",
		"category":"Convert",
		"image":"./images/ConvertStringToFloat.png",
		"description":"Converts an String value to an Float value.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String variable to convert to a float value."
			},
			{
				"name":"Float Variable",
				"description":"Store the result in an Float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the String variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Quaternion",
		"category":"Convert",
		"image":"./images/ConvertStringToQuaternion.png",
		"description":"Converts a string into a Quaternion variable. Format is flexible, [x] [y] [z] and [w] are placeholders, escape special chars like \\ for parenthesis for example ",
		"params": [
			{
				"name":"Source",
				"description":"The string representing the color value."
			},
			{
				"name":"Format",
				"description":"The expected format of the source representing the Quaternion value."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame. Warning, performance will be affected"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Rect",
		"category":"Convert",
		"image":"./images/ConvertStringToRect.png",
		"description":"Converts a string into a Rect variable. Format is flexible, [x] [y] [w] and [h] are placeholders, Escape special chars like \\ for parenthesis for example ",
		"params": [
			{
				"name":"Source",
				"description":"The string representing the color value."
			},
			{
				"name":"Format",
				"description":"The expected format of the source representing the Quaternion value."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame. Warning, performance will be affected"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Vector2",
		"category":"Convert",
		"image":"./images/ConvertStringToVector2.png",
		"description":"Converts a string into a vector2 variable. Format is flexible, [x] and [y] are placeholders, escape special chars like \\ for parenthesis for example ",
		"params": [
			{
				"name":"Source",
				"description":"The string representing the Vector3 value."
			},
			{
				"name":"Format",
				"description":"The expected format of the source representing the Vector3 value."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame. Warning, performance will be affected"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Vector3",
		"category":"Convert",
		"image":"./images/ConvertStringToVector3.png",
		"description":"Converts a string into a vector3 variable. Format is flexible, [x] [y] and [z] are placeholders, escape special chars like \\ for parenthesis for example ",
		"params": [
			{
				"name":"Source",
				"description":"The string representing the Vector3 value."
			},
			{
				"name":"Format",
				"description":"The expected format of the source representing the Vector3 value."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame. Warning, performance will be affected"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Vector2 To String",
		"category":"Convert",
		"image":"./images/ConvertVector2ToString.png",
		"description":"Converts a vector2 to a string. Format is flexible, [x] and [y] are placeholders",
		"params": [
			{
				"name":"Vector 2",
				"description":"The value itself"
			},
			{
				"name":"Format",
				"description":"The string pattern to express the Vector2 value."
			},
			{
				"name":"Float Conversion",
				"description":"The c# ToString() format to express each vector float components as strings. Useful if you want to optimized the generated string."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Vector3 To String",
		"category":"Convert",
		"image":"./images/ConvertVector3ToString.png",
		"description":"Converts a vector3 to a string. Format is flexible, [x] [y] and [z] are placeholders",
		"params": [
			{
				"name":"Vector 3",
				"description":"The value itself"
			},
			{
				"name":"Format",
				"description":"The string pattern to express the Vector3 value."
			},
			{
				"name":"Float Conversion",
				"description":"The c# ToString() format to express each vector float components as strings. Useful if you want to optimized the generated string."
			},
			{
				"name":"Store Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Vector3 To Vector2",
		"category":"Convert",
		"image":"./images/ConvertVector3ToVector2.png",
		"description":"Store a Vector3 XY component into a Vector2 XY component. Drops the Vector3 z component, you can optionally save it to a float.",
		"params": [
			{
				"name":"Vector 3",
				"description":"The vector3"
			},
			{
				"name":"Vector 2",
				"description":"The vector2"
			},
			{
				"name":"Z Value",
				"description":"Optional z value stored as float"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Decode Bit Flag Field",
		"category":"Convert",
		"image":"./images/DecodeBitFlagField.png",
		"description":"Decode an integer (bit-flag) value into a collection of booleans",
		"params": [
			{
				"name":"Input Int",
				"description":"Integer value to decode into booleans. Use Decimal values."
			},
			{
				"name":"Bool Variables",
				"description":"Output location of the boolean variables after decoding."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Encode Bit Flag Field",
		"category":"Convert",
		"image":"./images/EncodeBitFlagField.png",
		"description":"Encode a collection of boolean values into a bit-flag field which is represented as an integer value in decimal format.",
		"params": [
			{
				"name":"Bool Variables",
				"description":"Number of Booleans to encode."
			},
			{
				"name":"Int Output",
				"description":"Variable output as a decimal value."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Split Float To Int",
		"category":"Convert",
		"image":"./images/SplitFloatToInt.png",
		"description":"Split Float into Ints.",
		"params": [
			{
				"name":"Float Variable",
				"description":"TODO"
			},
			{
				"name":"Whole Number",
				"description":"Store the result in a Int variable."
			},
			{
				"name":"Decimal Number",
				"description":"Store the result in a Int variable."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Split Int To Float",
		"category":"Convert",
		"image":"./images/SplitIntToFloat.png",
		"description":"Int split into Float.",
		"params": [
			{
				"name":"Whole Number",
				"description":"TODO"
			},
			{
				"name":"Decimal Number",
				"description":"TODO"
			},
			{
				"name":"Float Variable",
				"description":"Store the result in a Int variable."
			},
			{
				"name":"Leading Zeros",
				"description":"How many leading zeros in the decimal - example: 3 would mean .000xxx"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Axis Event",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformAxisEvent.png",
		"description":"Sends events based on the direction of Cross Platform Input Axis (Left/Right/Up/Down...).",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"Horizontal axis as defined in the Input Manager"
			},
			{
				"name":"Vertical Axis",
				"description":"Vertical axis as defined in the Input Manager"
			},
			{
				"name":"Left Event",
				"description":"Event to send if input is to the left."
			},
			{
				"name":"Right Event",
				"description":"Event to send if input is to the right."
			},
			{
				"name":"Up Event",
				"description":"Event to send if input is to the up."
			},
			{
				"name":"Down Event",
				"description":"Event to send if input is to the down."
			},
			{
				"name":"Any Direction",
				"description":"Event to send if input is in any direction."
			},
			{
				"name":"No Direction",
				"description":"Event to send if no axis input (centered)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Get Axis",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformGetAxis.png",
		"description":"Gets the value of the specified Input Axis and stores it in a Float Variable. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Axis Name",
				"description":"The name of the axis. Set in the Unity Input Manager."
			},
			{
				"name":"Multiplier",
				"description":"Axis values are in the range -1 to 1. Use the multiplier to set a larger range."
			},
			{
				"name":"Store",
				"description":"Store the result in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Typically this would be set to True."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Get Axis Exists",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformGetAxisExists.png",
		"description":"Gets if a specified Input Axis exists. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Axis Name",
				"description":"The name of the axis."
			},
			{
				"name":"Axis Exists",
				"description":"true if axis exists"
			},
			{
				"name":"Axis Exists Event",
				"description":"Event sent if axis exists"
			},
			{
				"name":"Axis Do Not Exists Event",
				"description":"Event sent if axis do not exists"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Get Axis Raw",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformGetAxisRaw.png",
		"description":"Gets the value of the specified Input Axis and stores it in a Float Variable. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Axis Name",
				"description":"The name of the axis. Set in the Unity Input Manager."
			},
			{
				"name":"Multiplier",
				"description":"Axis values are in the range -1 to 1. Use the multiplier to set a larger range."
			},
			{
				"name":"Store",
				"description":"Store the result in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Typically this would be set to True."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Get Button",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformGetButton.png",
		"description":"Gets the pressed state of the specified Button and stores it in a Bool Variable. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button. Set in the Unity Input Manager."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Get Button Down",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformGetButtonDown.png",
		"description":"Sends an Event when a Button is pressed. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button. Set in the Unity Input Manager."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the button is pressed."
			},
			{
				"name":"Store Result",
				"description":"Set to True if the button is pressed."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Get Button Exists",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformGetButtonExists.png",
		"description":"Gets if a specified Button exist. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button. Set in the Unity Input Manager."
			},
			{
				"name":"Button Exists",
				"description":"true if Button exists"
			},
			{
				"name":"Button Exists Event",
				"description":"Event sent if Button exists"
			},
			{
				"name":"Button Do Not Exists Event",
				"description":"Event sent if Button do not exists"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Get Button Up",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformGetButtonUp.png",
		"description":"Sends an Event when a Button is released. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button. Set in the Unity Input Manager."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the button is released."
			},
			{
				"name":"Store Result",
				"description":"Set to True if the button is released."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Get Mouse Position",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformGetMousePosition.png",
		"description":"Gets mousePosition from CrossPlatformInput Manager. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Mouse Position",
				"description":"Store the mouse position in a vector3"
			},
			{
				"name":"Mouse Position 2d",
				"description":"Store the mouse position in a vector2"
			},
			{
				"name":"Mouse Position X",
				"description":"Store the mouse X position"
			},
			{
				"name":"Mouse Position Y",
				"description":"Store the mouse Y position"
			},
			{
				"name":"Mouse Position Z",
				"description":"Store the mouse Z position"
			},
			{
				"name":"Normalize",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Set Axis",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformSetAxis.png",
		"description":"Sets the value of the specified Input Axis. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Axis Name",
				"description":"The name of the axis. Set in the Unity Input Manager."
			},
			{
				"name":"Value",
				"description":"Axis values are in the range -1 to 1."
			},
			{
				"name":"Axis Not Found",
				"description":"Event Sent if axis not found"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Set Button",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformSetButton.png",
		"description":"Sets the value of the specified Input Button. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button. Set in the Unity Input Manager."
			},
			{
				"name":"Value",
				"description":"Button value"
			},
			{
				"name":"Button Not Found",
				"description":"Event Sent if button not found"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cross Platform Set Virtual Mouse Position",
		"category":"CrossPlatformInput",
		"image":"./images/CrossPlatformSetVirtualMousePosition.png",
		"description":"Sets the value of the virtual MousePosition. Requires Standard Assets CrossPlatformInput.",
		"params": [
			{
				"name":"Mouse Position",
				"description":"Set the mouse position in a vector3"
			},
			{
				"name":"Mouse Position 2d",
				"description":"Set the mouse position in a vector2"
			},
			{
				"name":"Mouse Position X",
				"description":"Set the mouse X position"
			},
			{
				"name":"Mouse Position Y",
				"description":"Set the mouse Y position"
			},
			{
				"name":"Mouse Position Z",
				"description":"Set the mouse Z position"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Draw Arrow",
		"category":"Debug",
		"image":"./images/DebugDrawArrow.png",
		"description":"Draw gizmo arrow in direction or towards target.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Radius",
				"description":"Set the distance. Min:0.1f"
			},
			{
				"name":"Arrow Head Angle",
				"description":"Set the arrow head angle if needed"
			},
			{
				"name":"Arrow Head Length",
				"description":"Set the arrow head length if needed"
			},
			{
				"name":"Sphere Size",
				"description":"Set the spehere size"
			},
			{
				"name":"Direction",
				"description":"Direction of arrow or use target"
			},
			{
				"name":"Target",
				"description":"Target if not manually setting direction"
			},
			{
				"name":"Using 2D",
				"description":"Correct gizmo when looking up or down"
			},
			{
				"name":"Set Color",
				"description":"The color to use for the center debug line."
			},
			{
				"name":"Sphere Color",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Log Console",
		"category":"Debug",
		"image":"./images/DebugLogConsole.png",
		"description":"Sends a log message to Unity Console Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Text",
				"description":"Text to print to the PlayMaker log window."
			},
			{
				"name":"Pause Game",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Quaternion",
		"category":"Debug",
		"image":"./images/DebugQuaternion.png",
		"description":"Logs the value of a Quaternion Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Quaternion Variable",
				"description":"The Vector3 variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Android Vibrate Advance",
		"category":"Device",
		"image":"./images/AndroidVibrateAdvance.png",
		"description":"Android - causes the device to vibrate with custom settings. Please read instruction by clicking on the action url link. If set incorrectly, you may get odd behavior as a result!",
		"params": [
			{
				"name":"Milliseconds",
				"description":"0 or null = off"
			},
			{
				"name":"Repeat",
				"description":"-1 means do not repeat"
			},
			{
				"name":"Set Pattern",
				"description":"Set milliseconds array to create a pattern. Note: Make the first index in pattern 0, followed by the rest to start immediately. The first value indicates the number of milliseconds to wait before turning the vibrator on."
			},
			{
				"name":"Cancel Vibrator",
				"description":"Cancel the vibration by 're-entering' action with bool set to True. Do *not* do this immediately after calling vibrate. It may not have time to even begin vibrating!"
			},
			{
				"name":"Disable Sleep Timeout",
				"description":"The screen will never sleep if set to true as when the screen sleeps the vibration stops"
			},
			{
				"name":"Not Android",
				"description":"TODO"
			},
			{
				"name":"Not Android Event",
				"description":"The event to send if it has No vibrator"
			},
			{
				"name":"Vibrator Cancelled",
				"description":"If you cancel"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Build Switch",
		"category":"Device",
		"image":"./images/BuildSwitch.png",
		"description":"Send event based on build.",
		"params": [
			{
				"name":"Send Event Unity Editor",
				"description":"TODO"
			},
			{
				"name":"Send Event Ios",
				"description":"TODO"
			},
			{
				"name":"Send Event Android",
				"description":"TODO"
			},
			{
				"name":"Send Event Editor Win",
				"description":"TODO"
			},
			{
				"name":"Send Event Editor Osx",
				"description":"TODO"
			},
			{
				"name":"Send Event Standalone Osx",
				"description":"TODO"
			},
			{
				"name":"Send Event Standalone Win",
				"description":"TODO"
			},
			{
				"name":"Send Event Standalone Linux",
				"description":"TODO"
			},
			{
				"name":"Send Event Standalone",
				"description":"TODO"
			},
			{
				"name":"Send Event Webplayer",
				"description":"TODO"
			},
			{
				"name":"Send Event Iphone",
				"description":"TODO"
			},
			{
				"name":"Send Event Web Gl",
				"description":"TODO"
			},
			{
				"name":"Send Event Tizen",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Device Orientation Watcher",
		"category":"Device",
		"image":"./images/DeviceOrientationWatcher.png",
		"description":"Sends discrete Event based on the Orientation changes of the mobile device.",
		"params": [
			{
				"name":"Face Up Event",
				"description":"send when device entered face up orientation"
			},
			{
				"name":"Face Down Event",
				"description":"send when device entered face down orientation"
			},
			{
				"name":"Landscape Left Event",
				"description":"send when device entered llndscape left orientation"
			},
			{
				"name":"Landscape Right Event",
				"description":"send when device entered landscape right orientation"
			},
			{
				"name":"Portrait Event",
				"description":"send when device entered portrait orientation"
			},
			{
				"name":"Portrait Upside Down Event",
				"description":"send when device entered upside down portrait orientation"
			},
			{
				"name":"Unknown Event",
				"description":"send when device entered unkown orientation"
			},
			{
				"name":"Ignore Initial Orientation",
				"description":"if true, do not fire an event on the orientation found when this action starts"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Device Still Event",
		"category":"Device",
		"image":"./images/DeviceStillEvent.png",
		"description":"Sends an Event when the mobile device stops shaking ( actually, when it falls under a shaking threshold).",
		"params": [
			{
				"name":"Shake Threshold",
				"description":"Amount of acceleration under which to trigger the event. Use low numbers."
			},
			{
				"name":"Send Event",
				"description":"Event to send when Shake Threshold is exceded."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Device Gyroscope",
		"category":"Device",
		"image":"./images/GetDeviceGyroscope.png",
		"description":"Gets the last measured Gyroscope data of a device and stores it in Variables.",
		"params": [
			{
				"name":"Device",
				"description":"If set, this gameObject will show the attitude of the device, processed with the initial rotation of this GameObject"
			},
			{
				"name":"Rotation Rate",
				"description":"Rotation rate as measured by the device's gyroscope"
			},
			{
				"name":"Rotation Rate Unbiased",
				"description":"Unbiased rotation rate as measured by the device's gyroscope"
			},
			{
				"name":"Gravity",
				"description":"The gravity acceleration vector expressed in the device's reference frame."
			},
			{
				"name":"User Acceleration",
				"description":"The acceleration that the user is giving to the device."
			},
			{
				"name":"Attitude",
				"description":"the attitude of the device"
			},
			{
				"name":"Attitude Angles",
				"description":"the attitude of the device in euler angles"
			},
			{
				"name":"Debug",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Iphone Generation",
		"category":"Device",
		"image":"./images/GetIphoneGeneration.png",
		"description":"Gets the iPhone generation.",
		"params": [
			{
				"name":"Iphone Generation",
				"description":"The iPhone generation."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get System Info",
		"category":"Device",
		"image":"./images/GetSystemInfo.png",
		"description":"Gets the system info on the device. Some are expensive calls so use only as needed.",
		"params": [
			{
				"name":"Device Model",
				"description":"TODO"
			},
			{
				"name":"Device Name",
				"description":"TODO"
			},
			{
				"name":"Device Type",
				"description":"TODO"
			},
			{
				"name":"Device Unique Identifier",
				"description":"TODO"
			},
			{
				"name":"Graphics Device ID",
				"description":"TODO"
			},
			{
				"name":"Graphics Device Name",
				"description":"TODO"
			},
			{
				"name":"Graphics Device Vendor",
				"description":"TODO"
			},
			{
				"name":"Graphics Device Vendor ID",
				"description":"TODO"
			},
			{
				"name":"Graphics Device Version",
				"description":"TODO"
			},
			{
				"name":"Graphics Memory Size",
				"description":"TODO"
			},
			{
				"name":"Graphics Pixel Fillrate",
				"description":"TODO"
			},
			{
				"name":"Graphics Shader Level",
				"description":"TODO"
			},
			{
				"name":"Npot Support",
				"description":"TODO"
			},
			{
				"name":"Operating System",
				"description":"TODO"
			},
			{
				"name":"Processor Count",
				"description":"TODO"
			},
			{
				"name":"Processor Type",
				"description":"TODO"
			},
			{
				"name":"Supported Render Target Count",
				"description":"TODO"
			},
			{
				"name":"Supports 3D Textures",
				"description":"TODO"
			},
			{
				"name":"Supports Accelerometer",
				"description":"TODO"
			},
			{
				"name":"Supports Compute Shaders",
				"description":"TODO"
			},
			{
				"name":"Supports Gyroscope",
				"description":"TODO"
			},
			{
				"name":"Supports Image Effects",
				"description":"TODO"
			},
			{
				"name":"Supports Instancing",
				"description":"TODO"
			},
			{
				"name":"Supports Location Service",
				"description":"TODO"
			},
			{
				"name":"Supports Render Textures",
				"description":"TODO"
			},
			{
				"name":"Supports Render To Cubemap",
				"description":"TODO"
			},
			{
				"name":"Supports Shadows",
				"description":"TODO"
			},
			{
				"name":"Supports Sparse Textures",
				"description":"TODO"
			},
			{
				"name":"Supports Stencil",
				"description":"TODO"
			},
			{
				"name":"Supports Vibration",
				"description":"TODO"
			},
			{
				"name":"System Memory Size",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Touch Double Tap",
		"category":"Device",
		"image":"./images/GetTouchDoubleTap.png",
		"description":"Send event if user double taps",
		"params": [
			{
				"name":"Finger Id",
				"description":"TODO"
			},
			{
				"name":"Touch Phase",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Store Finger Id",
				"description":"TODO"
			},
			{
				"name":"Tap Speed",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Open Device Key Board",
		"category":"Device",
		"image":"./images/OpenDeviceKeyBoard.png",
		"description":"Opens the native keyboard provided by OS on the screen",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Pinch Float",
		"category":"Device",
		"image":"./images/PinchFloat.png",
		"description":"Pinch",
		"params": [
			{
				"name":"Speed",
				"description":"TODO"
			},
			{
				"name":"Target Float",
				"description":"TODO"
			},
			{
				"name":"Is Active",
				"description":"TODO"
			},
			{
				"name":"Min Size Clamp",
				"description":"Minimum Value. Cannot go below that number"
			},
			{
				"name":"Max Size Clamp",
				"description":"Maximum Value. Cannot go above that number"
			},
			{
				"name":"Invert",
				"description":"TODO"
			},
			{
				"name":"Disable Action",
				"description":"Disable action and send event"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Device Screen Orientation",
		"category":"Device",
		"image":"./images/SetDeviceScreenOrientation.png",
		"description":"Specifies logical orientation of the screen. Currently screen orientation is only relevant on mobile platforms",
		"params": [
			{
				"name":"Orientation",
				"description":"Amount of acceleration under which to trigger the event. Use low numbers."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Gravityfrom Acceleration",
		"category":"Device",
		"image":"./images/SetGravityfromAcceleration.png",
		"description":"Adjust the gravity direction based on the device acceleration. Typically to control rolling balls",
		"params": [
			{
				"name":"Multiplier",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Swipe Gesture Event Advanced",
		"category":"Device",
		"image":"./images/SwipeGestureEventAdvanced.png",
		"description":"Sends an event when a swipe is detected. Advanced: Store the speed, distance and duration of the swipe (inedepent of 'Min Swipe Distance').",
		"params": [
			{
				"name":"Min Swipe Distance",
				"description":"How far a touch has to travel to be considered a swipe. Uses normalized distance (e.g. 1 = 1 screen diagonal distance). Should generally be a very small number."
			},
			{
				"name":"Get Swipe Speed",
				"description":"Store the speed of the swipe (distance / time)."
			},
			{
				"name":"Get Swipe Distance",
				"description":"Store the distance the swipe traveled."
			},
			{
				"name":"Get Swipe Duration",
				"description":"Store the duration between the swipe start and end."
			},
			{
				"name":"Get Force",
				"description":"Store the force of the swipe."
			},
			{
				"name":"Swipe Left Event",
				"description":"Event to send when swipe left detected."
			},
			{
				"name":"Swipe Right Event",
				"description":"Event to send when swipe right detected."
			},
			{
				"name":"Swipe Up Event",
				"description":"Event to send when swipe up detected."
			},
			{
				"name":"Swipe Down Event",
				"description":"Event to send when swipe down detected."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch Event Not On U Gui",
		"category":"Device",
		"image":"./images/TouchEventNotOnUGui.png",
		"description":"Sends an event if a touch input does not hit a gui element. It also work with the left mouse",
		"params": [
			{
				"name":"Pointer Over UI",
				"description":"Event to send when the touch is over an uGui object."
			},
			{
				"name":"Pointer Not Over UI",
				"description":"Event to send when the touch is NOT over an uGui object."
			},
			{
				"name":"Is Pointer Over UI",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch Obj 2d Event Out Of Range",
		"category":"Device",
		"image":"./images/TouchObj2dEventOutOfRange.png",
		"description":"Sends events when a 2d object is touched. Optionally filter by a fingerID. NOTE: Uses the MainCamera! and can send an event when out of range",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to detect touches on."
			},
			{
				"name":"Finger Id",
				"description":"Only detect touches that match this fingerID, or set to None."
			},
			{
				"name":"Touch Began",
				"description":"Event to send on touch began."
			},
			{
				"name":"Touch Moved",
				"description":"Event to send on touch moved."
			},
			{
				"name":"Touch Stationary",
				"description":"Event to send on stationary touch."
			},
			{
				"name":"Touch Ended",
				"description":"Event to send on touch ended."
			},
			{
				"name":"Touch Canceled",
				"description":"Event to send on touch cancel."
			},
			{
				"name":"Touch Out Of Range",
				"description":"Event to send on touch out of range"
			},
			{
				"name":"Store Finger Id",
				"description":"Store the fingerId of the touch."
			},
			{
				"name":"Store Hit Point",
				"description":"Store the 2d position where the object was touched."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch Screen Left Or Right",
		"category":"Device",
		"image":"./images/TouchScreenLeftOrRight.png",
		"description":"Sends events based on Touch left or right of screen.",
		"params": [
			{
				"name":"Finger Id",
				"description":"TODO"
			},
			{
				"name":"Touch Phase",
				"description":"TODO"
			},
			{
				"name":"Send Event Left",
				"description":"TODO"
			},
			{
				"name":"Send Event Right",
				"description":"TODO"
			},
			{
				"name":"Store Finger Id",
				"description":"TODO"
			},
			{
				"name":"Use Mouse",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch Swipe",
		"category":"Device",
		"image":"./images/TouchSwipe.png",
		"description":"Detect Touch Swipe",
		"params": [
			{
				"name":"Finger Id",
				"description":"TODO"
			},
			{
				"name":"Swipe Dir",
				"description":"TODO"
			},
			{
				"name":"Swiping",
				"description":"Is currently swiping"
			},
			{
				"name":"Send Event",
				"description":"Swip was successful"
			},
			{
				"name":"Last Position",
				"description":"The last finger position of swip"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw Curve",
		"category":"Effects",
		"image":"./images/DrawCurve.png",
		"description":"Draws a Quadratic Bézier Curve between three Game Objects using Unity's Line Renderer.",
		"params": [
			{
				"name":"Start",
				"description":"Curve start."
			},
			{
				"name":"Middle",
				"description":"Curve Middle."
			},
			{
				"name":"End",
				"description":"Curve End."
			},
			{
				"name":"Material",
				"description":"Curve Material (If set to None will automatically use 'Particles/Additive'."
			},
			{
				"name":"Start Colour",
				"description":"Curve Colour at Start."
			},
			{
				"name":"End Colour",
				"description":"Curve Colour at End."
			},
			{
				"name":"Start Width",
				"description":"Curve Width at Start."
			},
			{
				"name":"End Width",
				"description":"Curve Width at End."
			},
			{
				"name":"Number Of Points",
				"description":"Number of points with which the Curve is drawn."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Destroy On Exit",
				"description":"Destroys the Curve on exiting the state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw Line",
		"category":"Effects",
		"image":"./images/DrawLine.png",
		"description":"Draws line between two objects or points using LineRenderer.",
		"params": [
			{
				"name":"Start Object",
				"description":"Line start."
			},
			{
				"name":"End Object",
				"description":"Line end."
			},
			{
				"name":"Start Offset",
				"description":"Start offset or world position."
			},
			{
				"name":"End Offset",
				"description":"End offset or world position."
			},
			{
				"name":"Space Mode",
				"description":"Space."
			},
			{
				"name":"Align In Space Mode Self",
				"description":"When Space Mode Self is selected Start Object and End Object will execute LookAt each other to align their Z axes"
			},
			{
				"name":"Material",
				"description":"Material"
			},
			{
				"name":"Shadow Casting Mode",
				"description":"Shadow Casting Mode"
			},
			{
				"name":"Receive Shadows",
				"description":"Receive Shadows"
			},
			{
				"name":"Start Width",
				"description":"start width"
			},
			{
				"name":"End Width",
				"description":"end width"
			},
			{
				"name":"Start Color",
				"description":"Start Color"
			},
			{
				"name":"End Color",
				"description":"End Color"
			},
			{
				"name":"Store Gameobject",
				"description":"Store GameObject with LineRenderer."
			},
			{
				"name":"Every Frame",
				"description":"Updates positions every frame"
			},
			{
				"name":"Destroy On Exit",
				"description":"Destroy drawn line on exit"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw Path Line Renderer",
		"category":"Effects",
		"image":"./images/DrawPathLineRenderer.png",
		"description":"Draws a path using an array of positions using LineRenderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the LineRenderer component "
			},
			{
				"name":"Points",
				"description":"Path definition"
			},
			{
				"name":"Every Frame",
				"description":"Updates positions every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw Spline",
		"category":"Effects",
		"image":"./images/DrawSpline.png",
		"description":"Draws a Spline between Game Objects using Unity's Line Renderer.",
		"params": [
			{
				"name":"Control Points",
				"description":"Game Objects used as Control Points. Use a minimum of 5. Start and End should occupy the first TWO and last TWO slots respectivley."
			},
			{
				"name":"Labels",
				"description":"TODO"
			},
			{
				"name":"Material",
				"description":"Curve Material (If set to None will automatically use 'Particles/Additive'."
			},
			{
				"name":"Start Colour",
				"description":"Curve Colour at Start."
			},
			{
				"name":"End Colour",
				"description":"Curve Colour at End."
			},
			{
				"name":"Start Width",
				"description":"Curve Width at Start."
			},
			{
				"name":"End Width",
				"description":"Curve Width at End."
			},
			{
				"name":"Number Of Points",
				"description":"Number of points with which the Curve is drawn."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Destroy On Exit",
				"description":"Destroys the Spline on exiting the state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Perlin Noise",
		"category":"Effects",
		"image":"./images/PerlinNoise.png",
		"description":"PerlinNoise action",
		"params": [
			{
				"name":"Speed",
				"description":"PerlinNoise animation speed"
			},
			{
				"name":"Seed",
				"description":"PerlinNoise seed ( the x component). Leave to none for random"
			},
			{
				"name":"Perlin Noise",
				"description":"the actual PerlinNoise result ranging from 0 to 1"
			},
			{
				"name":"Every Frame",
				"description":"If set to false, will not animate over time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Delete Key With Simple Hash",
		"category":"PlayerPrefs Encryption",
		"image":"./images/PlayerPrefsDeleteKeyWithSimpleHash.png",
		"description":"Removes key with hash and its corresponding value from the preferences.",
		"params": [
			{
				"name":"Key",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Get Float With Simple Hashing",
		"category":"PlayerPrefs Encryption",
		"image":"./images/PlayerPrefsGetFloatWithSimpleHashing.png",
		"description":"Returns the value corresponding to key in the preference file if it exists. Checks if data with Hashing - MD5 or SH1.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Variables",
				"description":"TODO"
			},
			{
				"name":"Password",
				"description":"Optional. You can leave blank if wanted"
			},
			{
				"name":"Selection",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Get Int With Simple Hashing",
		"category":"PlayerPrefs Encryption",
		"image":"./images/PlayerPrefsGetIntWithSimpleHashing.png",
		"description":"Returns the value corresponding to key in the preference file if it exists. Checks if data with Hashing - MD5 or SH1.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Variables",
				"description":"TODO"
			},
			{
				"name":"Password",
				"description":"Optional. You can leave blank if wanted"
			},
			{
				"name":"Selection",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Get String With Simple Hashing",
		"category":"PlayerPrefs Encryption",
		"image":"./images/PlayerPrefsGetStringWithSimpleHashing.png",
		"description":"Returns the value corresponding to key in the preference file if it exists. Checks if data with Hashing - MD5 or SH1.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Variables",
				"description":"TODO"
			},
			{
				"name":"Password",
				"description":"Optional. You can leave blank if wanted"
			},
			{
				"name":"Selection",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Set Float With Simple Hashing",
		"category":"PlayerPrefs Encryption",
		"image":"./images/PlayerPrefsSetFloatWithSimpleHashing.png",
		"description":"Sets the value of the preference identified by key with Simple Hashing - MD5 or SH1.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Password",
				"description":"Optional. You can leave blank if wanted"
			},
			{
				"name":"Selection",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Set Int With Simple Hashing",
		"category":"PlayerPrefs Encryption",
		"image":"./images/PlayerPrefsSetIntWithSimpleHashing.png",
		"description":"Sets the value of the preference identified by key with Simple Hashing - MD5 or SH1.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Password",
				"description":"Optional. You can leave blank if wanted"
			},
			{
				"name":"Selection",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Set String With Simple Hashing",
		"category":"PlayerPrefs Encryption",
		"image":"./images/PlayerPrefsSetStringWithSimpleHashing.png",
		"description":"Sets the value of the preference identified by key with Simple Hashing - MD5 or SH1.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Password",
				"description":"Optional. You can leave blank if wanted"
			},
			{
				"name":"Selection",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Simple Hashing",
		"category":"Encryption",
		"image":"./images/SimpleHashing.png",
		"description":"Simple Hashing - MD5 or SH1",
		"params": [
			{
				"name":"Selection",
				"description":"TODO"
			},
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"String Value",
				"description":"TODO"
			},
			{
				"name":"Password",
				"description":"Optional. You can leave blank if wanted"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enum Get Random",
		"category":"Enum",
		"image":"./images/EnumGetRandom.png",
		"description":"Get a Random item from an enum.",
		"params": [
			{
				"name":"Enum Variable",
				"description":"The Enum Variable to get a random Item from."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Enum As Array",
		"category":"Enum",
		"image":"./images/GetEnumAsArray.png",
		"description":"Gets all Items in an Enum and saves it in an array.",
		"params": [
			{
				"name":"Enum Variable",
				"description":"The Enum Variable to get all Items from."
			},
			{
				"name":"Save As Enum Array",
				"description":"Save all Enum Items in an Enum Array of the same type."
			},
			{
				"name":"Save As String Array",
				"description":"Optionally save them as a String-Array."
			},
			{
				"name":"Save As String",
				"description":"Optionally save them in a separated String-Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Weighted Enum",
		"category":"Enum",
		"image":"./images/RandomWeightedEnum.png",
		"description":"Pick a random weighted Enum picked from an array of specified Enums.",
		"params": [
			{
				"name":"Amount",
				"description":"TODO"
			},
			{
				"name":"Weights",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Repeat",
				"description":"Can hit the same enum twice in a row."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Binary Load",
		"category":"Files",
		"image":"./images/BinaryLoad.png",
		"description":"Load Data saved using Binary Save, for Array only type of float, integer, string that are currently working, feel free to test other data types",
		"params": [
			{
				"name":"Float Var",
				"description":"load your float variable here if there are any saved, can be more than one"
			},
			{
				"name":"Int Var",
				"description":"load your int variable here if there are any saved, can be more than one"
			},
			{
				"name":"String Var",
				"description":"load your string variable here if there are any saved, can be more than one"
			},
			{
				"name":"Bool Var",
				"description":"load your bool variable here if there are any saved, can be more than one"
			},
			{
				"name":"Array Var",
				"description":"load your array variable here, can be more than one and can be a different type (only float, integer and string are currently tested)"
			},
			{
				"name":"Filename",
				"description":"name of the save file that will be loaded, make sure the name its the same with the one on Binary Save"
			},
			{
				"name":"Not Found Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Binary Save",
		"category":"Files",
		"image":"./images/BinarySave.png",
		"description":"Save Data to be load later using Binary Load, for Array only type of float, integer, string that are currently working, feel free to test other data types",
		"params": [
			{
				"name":"Float Var",
				"description":"Save your float variable here, can be more than one"
			},
			{
				"name":"Int Var",
				"description":"Save your integer variable here, can be more than one"
			},
			{
				"name":"String Var",
				"description":"Save your string variable here, can be more than one"
			},
			{
				"name":"Bool Var",
				"description":"Save your bool variable here, can be more than one"
			},
			{
				"name":"Array Var",
				"description":"Save your array variable here, can be more than one and can be a different type (only float, integer and string are currently tested)"
			},
			{
				"name":"Filename",
				"description":"name of the save file that will be outputted"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Check If File Exists",
		"category":"Files",
		"image":"./images/CheckIfFileExists.png",
		"description":"Check if a File exists",
		"params": [
			{
				"name":"File Path",
				"description":"The file path"
			},
			{
				"name":"File Exists",
				"description":"True if the file exists, false if it wasn't found"
			},
			{
				"name":"File Exists Event",
				"description":"TODO"
			},
			{
				"name":"File Not Found Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Directory",
		"category":"Files",
		"image":"./images/CreateDirectory.png",
		"description":"Create a directory",
		"params": [
			{
				"name":"Directory Path",
				"description":"TODO"
			},
			{
				"name":"Success Event",
				"description":"TODO"
			},
			{
				"name":"Already Exists Event",
				"description":"TODO"
			},
			{
				"name":"Failure Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Delete File",
		"category":"Files",
		"image":"./images/DeleteFile.png",
		"description":"Delete a file",
		"params": [
			{
				"name":"Path To File",
				"description":"TODO"
			},
			{
				"name":"Secure Delete",
				"description":"TODO"
			},
			{
				"name":"Loop",
				"description":"TODO"
			},
			{
				"name":"Done",
				"description":"TODO"
			},
			{
				"name":"Failed",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Environment Special Folder",
		"category":"Files",
		"image":"./images/GetEnvironmentSpecialFolder.png",
		"description":"Get Operating Special folder path into a string",
		"params": [
			{
				"name":"Special Folder",
				"description":"The Special Folder type"
			},
			{
				"name":"Special Folder Path",
				"description":"The special folder path as string"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get File Count",
		"category":"Files",
		"image":"./images/GetFileCount.png",
		"description":"Get the number of files in a directory.",
		"params": [
			{
				"name":"Folder Path",
				"description":"The path of the folder."
			},
			{
				"name":"Search Pattern",
				"description":"The search pattern. Use * for all"
			},
			{
				"name":"Search Option",
				"description":"The search options. let you search only in the folder or in all sub folders too"
			},
			{
				"name":"File Count",
				"description":"The number of files in the folder"
			},
			{
				"name":"No Files Event",
				"description":"Event sent if no file found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get File Info By Index",
		"category":"Files",
		"image":"./images/GetFileInfoByIndex.png",
		"description":"Get infos from a file by index within a directory.",
		"params": [
			{
				"name":"Folder Path",
				"description":"The path of the folder."
			},
			{
				"name":"Search Pattern",
				"description":"The search pattern. Use * for all"
			},
			{
				"name":"Search Option",
				"description":"The search options. let you search only in the folder or in all sub folders too"
			},
			{
				"name":"File Index",
				"description":"The number of files in the folder"
			},
			{
				"name":"Date Time Format",
				"description":"The datetime format to get datetime properties of the file in the folder"
			},
			{
				"name":"File Name",
				"description":"The name of the file"
			},
			{
				"name":"Extension",
				"description":"The extension  of the file"
			},
			{
				"name":"Full Name",
				"description":"The full name of the file"
			},
			{
				"name":"Directory Name",
				"description":"The directory name of the file"
			},
			{
				"name":"Is Read Only",
				"description":"The readonly state of the file"
			},
			{
				"name":"Creation Time",
				"description":"The creation time of the file"
			},
			{
				"name":"Last Access Time",
				"description":"The last access time of the file"
			},
			{
				"name":"Last Write Time",
				"description":"The last write time of the file"
			},
			{
				"name":"File Size",
				"description":"The file size in bytes"
			},
			{
				"name":"Index Out Of Range Event",
				"description":"Event sent if no file found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load From File",
		"category":"Files",
		"image":"./images/LoadFromFile.png",
		"description":"Load a File into a string for example Assets/myfile.txt",
		"params": [
			{
				"name":"File Path",
				"description":"Set the file path, for example : Assets/myfile.txt"
			},
			{
				"name":"Text",
				"description":"The text"
			},
			{
				"name":"Success Event",
				"description":"TODO"
			},
			{
				"name":"Failure Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Write To File",
		"category":"Files",
		"image":"./images/WriteToFile.png",
		"description":"Write string to a File",
		"params": [
			{
				"name":"File Path",
				"description":"Set the file path, for example : Assets/myfile.txt"
			},
			{
				"name":"Text",
				"description":"The text"
			},
			{
				"name":"Success Event",
				"description":"TODO"
			},
			{
				"name":"Failure Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Dynamic Vision Cone Fov",
		"category":"FOV",
		"image":"./images/DynamicVisionConeFov.png",
		"description":"Visually create a FOV mesh and set bool if target is inside gameobject FOV.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Quality",
				"description":"TODO"
			},
			{
				"name":"Fov Angle",
				"description":"TODO"
			},
			{
				"name":"Fov Max Distance",
				"description":"TODO"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers. 0 is off"
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Use Tag",
				"description":"TODO"
			},
			{
				"name":"Filter Tag",
				"description":"Filter by tag. First mask then tag."
			},
			{
				"name":"Status",
				"description":"Set the status by int. This int = material index. The status int is linked to the amount of materials used. Change the int in Game Mode to change the material. For example: 0 = Idle, 2 = Suspicious 4 = Alert. etc... "
			},
			{
				"name":"Material",
				"description":"Set the material you will use"
			},
			{
				"name":"Target",
				"description":"Your agent - player or npc - If empty tag filter will be active"
			},
			{
				"name":"Tag",
				"description":"Your agent - player or npc by tag if target object is empty"
			},
			{
				"name":"Inside Fov",
				"description":"Will set bool to true or false"
			},
			{
				"name":"Update Type Select",
				"description":"When to cast the ray"
			},
			{
				"name":"Force Finish",
				"description":"TODO"
			},
			{
				"name":"Rays Gizmos Enabled",
				"description":"TODO"
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the draw debug."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Dynamic Vision Cone Fov 2D",
		"category":"FOV",
		"image":"./images/DynamicVisionConeFov2D.png",
		"description":"Visually create a FOV mesh and set bool if target is inside 2D gameobject FOV.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Quality",
				"description":"TODO"
			},
			{
				"name":"Fov Angle",
				"description":"TODO"
			},
			{
				"name":"Fov Max Distance",
				"description":"TODO"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers. 0 is off"
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Use Tag",
				"description":"TODO"
			},
			{
				"name":"Filter Tag",
				"description":"Filter by tag. First mask then tag."
			},
			{
				"name":"Status",
				"description":"Set the status by int. This int = material index. The status int is linked to the amount of materials used. Change the int in Game Mode to change the material. For example: 0 = Idle, 2 = Suspicious 4 = Alert. etc... "
			},
			{
				"name":"Material",
				"description":"Set the material you will use"
			},
			{
				"name":"Target",
				"description":"Your agent - player or npc - If empty tag filter will be active"
			},
			{
				"name":"Tag",
				"description":"Your agent - player or npc by tag if target object is empty"
			},
			{
				"name":"Inside Fov",
				"description":"Will set bool to true or false"
			},
			{
				"name":"Update Type Select",
				"description":"When to cast the ray"
			},
			{
				"name":"Force Finish",
				"description":"TODO"
			},
			{
				"name":"Rays Gizmos Enabled",
				"description":"TODO"
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the draw debug."
			},
			{
				"name":"Hits 2D",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Enemy Fov 2d",
		"category":"FOV",
		"image":"./images/SetEnemyFov2d.png",
		"description":"Send event or set bool if target is inside gameobject 2D FOV. Does NOT use physics. Set FOV direction manually or auto to target",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Radius",
				"description":"Set the distance. Min:0.1f"
			},
			{
				"name":"Fov",
				"description":"Set the FOV. Min:1f"
			},
			{
				"name":"Direction",
				"description":"Manually set the FOV direction"
			},
			{
				"name":"Auto Rotate",
				"description":"Set rotation default gameobject rotation"
			},
			{
				"name":"Rotation",
				"description":"Manually set the FOV rotation. Leave it at 0 to ignore."
			},
			{
				"name":"Auto On",
				"description":"Auto set the FOV direction towards the target object"
			},
			{
				"name":"Use Late Update",
				"description":"use Late Update"
			},
			{
				"name":"Target",
				"description":"Your target - player or npc"
			},
			{
				"name":"Inside Fov",
				"description":"Will set bool to true or false"
			},
			{
				"name":"Inside Event",
				"description":"TODO"
			},
			{
				"name":"Outside Event",
				"description":"TODO"
			},
			{
				"name":"Draw Gizmo",
				"description":"Draw the FOV in scene"
			},
			{
				"name":"Center Color",
				"description":"The color to use for the center debug line."
			},
			{
				"name":"Angle Color",
				"description":"The color to use for the angle debug line."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Enemy Fov 2d By Tag",
		"category":"FOV",
		"image":"./images/SetEnemyFov2dByTag.png",
		"description":"Send event or set bool if target is inside gameobject 2D FOV. Does NOT use physics. Set FOV direction manually or auto to target",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Radius",
				"description":"Set the distance. Min:0.1f"
			},
			{
				"name":"Fov",
				"description":"Set the FOV. Min:1f"
			},
			{
				"name":"Direction",
				"description":"Manually set the FOV direction"
			},
			{
				"name":"Auto Rotate",
				"description":"Set rotation default gameobject rotation"
			},
			{
				"name":"Rotation",
				"description":"Manually set the FOV rotation. Leave it at 0 to ignore."
			},
			{
				"name":"Use Late Update",
				"description":"use Late Update"
			},
			{
				"name":"Tag",
				"description":"Your agent - player or npc by tag if target object is empty"
			},
			{
				"name":"Inside Fov",
				"description":"Will set bool to true or false"
			},
			{
				"name":"Inside Event",
				"description":"TODO"
			},
			{
				"name":"Outside Event",
				"description":"TODO"
			},
			{
				"name":"Draw Gizmo",
				"description":"Draw the FOV in scene"
			},
			{
				"name":"Center Color",
				"description":"The color to use for the center debug line."
			},
			{
				"name":"Angle Color",
				"description":"The color to use for the angle debug line."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Enemy Fov 3d",
		"category":"FOV",
		"image":"./images/SetEnemyFov3d.png",
		"description":"Send event or set bool if target is inside gameobject FOV. Does NOT use physics. Set FOV direction manually or auto to target",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Radius",
				"description":"Set the distance. Min:0.1f"
			},
			{
				"name":"Fov",
				"description":"Set the FOV. Min:1f"
			},
			{
				"name":"Direction",
				"description":"Manually set the FOV direction"
			},
			{
				"name":"Auto Rotate",
				"description":"Set rotation default gameobject rotation"
			},
			{
				"name":"Rotation",
				"description":"Manually set the FOV rotation. Leave it at 0 to ignore."
			},
			{
				"name":"Auto On",
				"description":"Auto set the FOV direction towards the target object"
			},
			{
				"name":"Use Late Update",
				"description":"use Late Update"
			},
			{
				"name":"Target",
				"description":"Your target - player or npc"
			},
			{
				"name":"Inside Fov",
				"description":"Will set bool to true or false"
			},
			{
				"name":"Inside Event",
				"description":"TODO"
			},
			{
				"name":"Outside Event",
				"description":"TODO"
			},
			{
				"name":"Draw Gizmo",
				"description":"Draw the FOV in scene"
			},
			{
				"name":"Flip On",
				"description":"Correct gizmo when looking up or down"
			},
			{
				"name":"Center Color",
				"description":"The color to use for the center debug line."
			},
			{
				"name":"Angle Color",
				"description":"The color to use for the angle debug line."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Enemy Fov 3d By Tag",
		"category":"FOV",
		"image":"./images/SetEnemyFov3dByTag.png",
		"description":"Send event or set bool if target is inside gameobject FOV. Does NOT use physics. Set FOV direction manually or auto to target",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Radius",
				"description":"Set the distance. Min:0.1f"
			},
			{
				"name":"Fov",
				"description":"Set the FOV. Min:1f"
			},
			{
				"name":"Direction",
				"description":"Manually set the FOV direction"
			},
			{
				"name":"Auto Rotate",
				"description":"Set rotation default gameobject rotation"
			},
			{
				"name":"Rotation",
				"description":"Manually set the FOV rotation. Leave it at 0 to ignore."
			},
			{
				"name":"Use Late Update",
				"description":"use Late Update"
			},
			{
				"name":"Tag",
				"description":"Your agent - player or npc by tag if target object is empty"
			},
			{
				"name":"Inside Fov",
				"description":"Will set bool to true or false"
			},
			{
				"name":"Inside Event",
				"description":"TODO"
			},
			{
				"name":"Outside Event",
				"description":"TODO"
			},
			{
				"name":"Draw Gizmo",
				"description":"Draw the FOV in scene"
			},
			{
				"name":"Flip On",
				"description":"Correct gizmo when looking up or down"
			},
			{
				"name":"Center Color",
				"description":"The color to use for the center debug line."
			},
			{
				"name":"Angle Color",
				"description":"The color to use for the angle debug line."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Children",
		"category":"GameObject",
		"image":"./images/ActivateChildren.png",
		"description":"Activates/deactivates children of a gameObject. Can optionnaly define depth of recursion to only affects so many levels of children",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to activate/deactivate."
			},
			{
				"name":"Activate",
				"description":"Check to activate, uncheck to deactivate Game Object."
			},
			{
				"name":"Recursive Depth",
				"description":"Recursively activate/deactivate all children given their depth. 0 direct children, 1 means grand children, -1 means all"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the game objects when exiting this state. Useful if you want an object to be active only while this state is active.\nNote: Only applies to the last Game Object activated/deactivated (won't work if Game Object changes)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Component 2",
		"category":"GameObject",
		"image":"./images/ActivateComponent2.png",
		"description":"Destroys a Component of an Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Component."
			},
			{
				"name":"Component",
				"description":"The name of the Component to destroy."
			},
			{
				"name":"Activate",
				"description":"Activate / Deactivate the Component"
			},
			{
				"name":"Every Frame",
				"description":"Repeat Everyframe"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Game Object Child",
		"category":"GameObject",
		"image":"./images/ActivateGameObjectChild.png",
		"description":"Activates/deactivates a Game Object child with an exception. Use this to hide/show areas, or enable/disable many Behaviours at once.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Parent GameObject to activate/deactivate."
			},
			{
				"name":"Except This Child",
				"description":"Except this child GameObject"
			},
			{
				"name":"Activate",
				"description":"Check to activate, uncheck to deactivate Game Object."
			},
			{
				"name":"Every Frame",
				"description":"Repeat this action every frame. Useful if Activate changes over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Game Object Child By Name",
		"category":"GameObject",
		"image":"./images/ActivateGameObjectChildByName.png",
		"description":"Activates/deactivates one or more Game Object children by name. Use this to hide/show areas, or enable/disable many Behaviours at once. Optionally reverse the action on exit.",
		"params": [
			{
				"name":"Game Object",
				"description":"The parent GameObject."
			},
			{
				"name":"Names",
				"description":"Name(s) of children to activate/deactivate. Slashes may be used to denote heirarchical paths."
			},
			{
				"name":"Activate",
				"description":"Activate/deactivate the game object."
			},
			{
				"name":"Recursive",
				"description":"Apply recursively to child objects."
			},
			{
				"name":"Reset On Exit",
				"description":"Reverse activate action on exit."
			},
			{
				"name":"Every Frame",
				"description":"Repeat this action every frame. Useful if Activate changes over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Game Objects",
		"category":"GameObject",
		"image":"./images/ActivateGameObjects.png",
		"description":"Enable/Disable multiple GameObjects at once.",
		"params": [
			{
				"name":"Game Objects",
				"description":"The current GameObject to enable/disable."
			},
			{
				"name":"Enable",
				"description":"Wheter to enable/disable the current GameObject."
			},
			{
				"name":"Apply To All",
				"description":"If not 'None', sets all 'Enable' bools to true or false."
			},
			{
				"name":"Recursive",
				"description":"Recursively activate/deactivate all children."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the game objects when exiting this state. Useful if you want an object to be active only while this state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Game Objects Advanced",
		"category":"GameObject",
		"image":"./images/ActivateGameObjectsAdvanced.png",
		"description":"Enable/Disable multiple GameObjects at once. Advanced version allows for a delay between each GameObject and to run this action every frame.",
		"params": [
			{
				"name":"Game Objects",
				"description":"The current GameObject to enable/disable."
			},
			{
				"name":"Enable",
				"description":"Wheter to enable/disable the current GameObject."
			},
			{
				"name":"Apply To All",
				"description":"If not 'None', sets all 'Enable' bools to true or false."
			},
			{
				"name":"Recursive",
				"description":"Recursively activate/deactivate all children."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the game objects when exiting this state. Useful if you want an object to be active only while this state is active."
			},
			{
				"name":"Delay",
				"description":"Define a delay between enabling/disabling each GameObject."
			},
			{
				"name":"Every Frame",
				"description":"Repeat this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Game Objects By Tag",
		"category":"GameObject",
		"image":"./images/ActivateGameObjectsByTag.png",
		"description":"Activates/deactives all Game Object with a given tag.",
		"params": [
			{
				"name":"Tag",
				"description":"The Tag"
			},
			{
				"name":"Activate",
				"description":"The active state to set all GameObject with this tag"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Are Game Objects Facing Each Other",
		"category":"GameObject",
		"image":"./images/AreGameObjectsFacingEachOther.png",
		"description":"Checks to see if two game objects are facing each other with a tolerance. A tolerance of 0 means they must be perfectly aligned to return true.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Target",
				"description":"TODO"
			},
			{
				"name":"Threshold",
				"description":"TODO"
			},
			{
				"name":"Is Facing",
				"description":"TODO"
			},
			{
				"name":"Facing",
				"description":"TODO"
			},
			{
				"name":"Not Facing",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bill Board",
		"category":"GameObject",
		"image":"./images/BillBoard.png",
		"description":"Align an object to always face the camera. You optionnally decide to keep a constant screensize.",
		"params": [
			{
				"name":"Camera Target",
				"description":"Leave to none to use the main camera"
			},
			{
				"name":"Constant Screen Size",
				"description":"check this if you want constant screensize"
			},
			{
				"name":"Distance Base",
				"description":"if 0, will use the current distance to keep constant screensize to be scaled to 1 at that distance"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Empty Object 2",
		"category":"GameObject",
		"image":"./images/CreateEmptyObject2.png",
		"description":"Creates a Game Object at a spawn point.\nUse a Game Object and/or Position/Rotation for the Spawn Point. If you specify a Game Object, Position is used as a local offset, and Rotation will override the object's rotation.\nv2: Fixed local offset for spawn point position",
		"params": [
			{
				"name":"Game Object",
				"description":"Optional GameObject to create. Usually a Prefab."
			},
			{
				"name":"Spawn Point",
				"description":"Optional Spawn Point."
			},
			{
				"name":"Position",
				"description":"Position. If a Spawn Point is defined, this is used as a local offset from the Spawn Point position."
			},
			{
				"name":"Rotation",
				"description":"Rotation. NOTE: Overrides the rotation of the Spawn Point."
			},
			{
				"name":"Store Object",
				"description":"Optionally store the created object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Object 2",
		"category":"GameObject",
		"image":"./images/CreateObject2.png",
		"description":"Creates a Game Object, usually using a Prefab.\nUse a Game Object and/or Position/Rotation for the Spawn Point. If you specify a Game Object, Position is used as a local offset, and Rotation will override the object's rotation.\nv2: Fixed local offset for spawn point position and remove obsolete old networking properties]",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to create. Usually a Prefab."
			},
			{
				"name":"Spawn Point",
				"description":"Optional Spawn Point."
			},
			{
				"name":"Position",
				"description":"Position. If a Spawn Point is defined, this is used as a local offset from the Spawn Point position."
			},
			{
				"name":"Rotation",
				"description":"Rotation. NOTE: Overrides the rotation of the Spawn Point."
			},
			{
				"name":"Store Object",
				"description":"Optionally store the created object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Object Advanced",
		"category":"GameObject",
		"image":"./images/CreateObjectAdvanced.png",
		"description":"Creates a Game Object, usually from a Prefab. Let you define parent and name",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to create. Usually a Prefab."
			},
			{
				"name":"Parent",
				"description":"GameObject  parent. Leave to null or none for no parenting"
			},
			{
				"name":"World Position Stays",
				"description":"If True, parenting will keep the objecr created in place"
			},
			{
				"name":"Name",
				"description":"GameObject name. Leave to null or none for default"
			},
			{
				"name":"Set Active",
				"description":"Activate the created instance or not"
			},
			{
				"name":"Spawn Point",
				"description":"Optional Spawn Point."
			},
			{
				"name":"Position",
				"description":"Position. If a Spawn Point is defined, this is used as a local offset from the Spawn Point position."
			},
			{
				"name":"Rotation",
				"description":"Rotation. NOTE: Overrides the rotation of the Spawn Point if set."
			},
			{
				"name":"Store Object",
				"description":"Optionally store the created object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Delete Singleton Reference",
		"category":"Logic",
		"image":"./images/DeleteSingletonReference.png",
		"description":"Delete a singleton reference added using SingletonManager action.",
		"params": [
			{
				"name":"Reference",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Children",
		"category":"GameObject",
		"image":"./images/DestroyChildren.png",
		"description":"Destroys all children from the specified GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to destroy children from."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Object Multi",
		"category":"GameObject",
		"image":"./images/DestroyObjectMulti.png",
		"description":"Destroys a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to destroy."
			},
			{
				"name":"Detach Children",
				"description":"Detach children before destroying the Game Object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Objects By Tag",
		"category":"GameObject",
		"image":"./images/DestroyObjectsByTag.png",
		"description":"Destroys all Game Object with a given tag.",
		"params": [
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Delay",
				"description":"Optional delay before destroying the Game Object."
			},
			{
				"name":"Accumulate Delay",
				"description":"if delay not 0, accumulate the dealy for object to be destroy, destroy them one after the other basically"
			},
			{
				"name":"Detach Children",
				"description":"Detach children before destroying the Game Object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Root",
		"category":"GameObject",
		"image":"./images/DestroyRoot.png",
		"description":"Destroys a Game Object's transfom root.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to destroy its root."
			},
			{
				"name":"Delay",
				"description":"Optional delay before destroying the Game Object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Children",
		"category":"GameObject",
		"image":"./images/EnableChildren.png",
		"description":"Enables/Disables all children from the specified parent.",
		"params": [
			{
				"name":"Parent",
				"description":"GameObject to change the children off of."
			},
			{
				"name":"Enable",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Children In Range",
		"category":"GameObject",
		"image":"./images/EnableChildrenInRange.png",
		"description":"Enables/Disables all children from the specified parent in a given range.",
		"params": [
			{
				"name":"Parent",
				"description":"GameObject to change the children off of."
			},
			{
				"name":"Starting From",
				"description":"From which index to start enabling/disabling from. Leave at 0 to start from the first child."
			},
			{
				"name":"Ending At",
				"description":"From which index to end enabling/disabling at. Leave at 0 to end at the last child."
			},
			{
				"name":"Enable",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Children",
		"category":"GameObject",
		"image":"./images/FindChildren.png",
		"description":"Finds all child GameObject's with the matching name and/or tag and stores them in an FsmArray.",
		"params": [
			{
				"name":"Name",
				"description":"The name of the GameObject to find. You can leave this empty if you specify a Tag."
			},
			{
				"name":"Tag",
				"description":"Find a GameObject with this tag. If a name was specified then both the name and tag must match."
			},
			{
				"name":"Result",
				"description":"Store the result in a FsmArray variable of type GameObject."
			},
			{
				"name":"Success Event",
				"description":"The event to trigger if any children could be found."
			},
			{
				"name":"Failed Event",
				"description":"The event to trigger when no child matches the given criteria."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Closest 2",
		"category":"GameObject",
		"image":"./images/FindClosest2.png",
		"description":"Finds the closest object to the specified Game Object.\nOptionally filter by Tag, layer and Visibility.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to measure from."
			},
			{
				"name":"With Tag",
				"description":"Only consider objects with this Tag. NOTE: It's generally a lot quicker to find objects with a Tag!"
			},
			{
				"name":"Ignore Owner",
				"description":"If checked, ignores the object that owns this FSM."
			},
			{
				"name":"Must Be Visible",
				"description":"Only consider objects visible to the camera."
			},
			{
				"name":"Layer Mask",
				"description":"Only consider objects from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Store Object",
				"description":"Store the closest object."
			},
			{
				"name":"Store Distance",
				"description":"Store the distance to the closest object."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Farthest",
		"category":"GameObject",
		"image":"./images/FindFarthest.png",
		"description":"Finds the farthest object to the specified Game Object.\nOptionally filter by Tag, layer and Visibility.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to measure from."
			},
			{
				"name":"With Tag",
				"description":"Only consider objects with this Tag. NOTE: It's generally a lot quicker to find objects with a Tag!"
			},
			{
				"name":"Ignore Owner",
				"description":"If checked, ignores the object that owns this FSM."
			},
			{
				"name":"Must Be Visible",
				"description":"Only consider objects visible to the camera."
			},
			{
				"name":"Layer Mask",
				"description":"Only consider objects from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Store Object",
				"description":"Store the closest object."
			},
			{
				"name":"Store Distance",
				"description":"Store the distance to the farthest object."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Game Object 2",
		"category":"GameObject",
		"image":"./images/FindGameObject2.png",
		"description":"Finds a Game Object by Name and/or Tag. If searching by tags defined as FsmString, optional event to catch when tag doesn't exists",
		"params": [
			{
				"name":"Object Name",
				"description":"The name of the GameObject to find. You can leave this empty if you specify a Tag."
			},
			{
				"name":"With Tag",
				"description":"Find a GameObject with this tag. If Object Name is specified then both name and Tag must match."
			},
			{
				"name":"Store",
				"description":"Store the result in a GameObject variable."
			},
			{
				"name":"Tag Doesnt Exist Event",
				"description":"Event fired if tag is not found, typically possible if you are using a FsmString to define the tag"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Game Object By Type",
		"category":"GameObject",
		"image":"./images/FindGameObjectByType.png",
		"description":"Finds a Game Object by type",
		"params": [
			{
				"name":"Type",
				"description":"The Type. Should be a component type."
			},
			{
				"name":"Store",
				"description":"Store the result in a GameObject variable."
			},
			{
				"name":"Found",
				"description":"Event sent if this type was found in the hierarchy"
			},
			{
				"name":"Not Found",
				"description":"Event sent if this type was not found in the hierarchy"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Game Objects With Tag",
		"category":"GameObject",
		"image":"./images/FindGameObjectsWithTag.png",
		"description":"Finds GameObjects by Tag.",
		"params": [
			{
				"name":"With Tag",
				"description":"Find a GameObject with this tag. "
			},
			{
				"name":"Store",
				"description":"Store the result in a GameObject variable."
			},
			{
				"name":"Tag Doesnt Exist Event",
				"description":"Event fired if tag is not found, typically possible if you are using a FsmString to define the tag"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Keep Active",
		"category":"GameObject",
		"image":"./images/GameObjectKeepActive.png",
		"description":"Keeps multiple GameObjects active, as long as the other GameObject is.",
		"params": [
			{
				"name":"Game Object To Check",
				"description":"Specify the GameObject that is being checked against."
			},
			{
				"name":"Keep Active",
				"description":"Specify the GameObject that is being checked against."
			},
			{
				"name":"State",
				"description":"What state the GameObject to check must be in order to active the given GameObjects."
			},
			{
				"name":"Active Type",
				"description":"What active state should be checked.\n'Active In Hirarchy' = If the GameObject and all of it's parents are active (a.k.a. if it's visible in the scene);\n'ActiveSelf' = If the GameObject is active independent of its parents."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Layer Switch",
		"category":"Logic",
		"image":"./images/GameObjectLayerSwitch.png",
		"description":"Sends an Event based on a Game Object's Layer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"Layer",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Motion Fx",
		"category":"GameObject",
		"image":"./images/GameObjectMotionFx.png",
		"description":"Sine Wave/Motion (Fx) on a object (GameObject: Camera, Canvas, Cube, etc",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject"
			},
			{
				"name":"Set Time",
				"description":"Set time"
			},
			{
				"name":"Amplitude",
				"description":"How far the object moves"
			},
			{
				"name":"Speed",
				"description":"How quickly the object moves"
			},
			{
				"name":"Interpolation",
				"description":"Select interpolation type."
			},
			{
				"name":"Lerp Curve",
				"description":"Only works if interpolation is set to curve!)"
			},
			{
				"name":"Vectordirection",
				"description":"Vector3 Direction"
			},
			{
				"name":"Obj Direction",
				"description":"TODO"
			},
			{
				"name":"Loop",
				"description":"Repeat this action every frame. To allow a loop force quit, set Fsm Bool (true = active) and change it to false in game."
			},
			{
				"name":"Exit On Finish",
				"description":"Leave state when finished shaking"
			},
			{
				"name":"Exit",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Shake",
		"category":"GameObject",
		"image":"./images/GameObjectShake.png",
		"description":"Shake an object (GameObject: Camera, Canvas, Cube, etc)",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to shake"
			},
			{
				"name":"Set Time",
				"description":"Amount of Time for shake"
			},
			{
				"name":"Shake Amount",
				"description":"Shake strength. If interpolation is off, use low numbers such as 0,02 for subtle shake of camera for example."
			},
			{
				"name":"Interpolation",
				"description":"Select interpolation type. Off means interpolation + shake speed are disabled"
			},
			{
				"name":"Shake Speed",
				"description":"If interpolation is on, recommended shake speed above 1f (depends on selection!)"
			},
			{
				"name":"Lerp Curve",
				"description":"Only works if interpolation is to curve!)"
			},
			{
				"name":"Rotation Amount",
				"description":"Set rotation strength. 0 = Off/disabled"
			},
			{
				"name":"Exit On Finish",
				"description":"Leave state when finished shaking"
			},
			{
				"name":"Exit",
				"description":"TODO"
			},
			{
				"name":"Loop",
				"description":"Repeat this action every frame. To allow a loop force quit, set Fsm Bool (true = active) and change it to false in game"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Shake 2D",
		"category":"GameObject",
		"image":"./images/GameObjectShake2D.png",
		"description":"Shake any object but without Z axis - good for 2D",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to shake"
			},
			{
				"name":"Set Time",
				"description":"Amount of Time for shake"
			},
			{
				"name":"Shake Amount",
				"description":"Shake strength. If interpolation is off, use low numbers such as 0,02 for subtle shake of camera for example."
			},
			{
				"name":"Interpolation",
				"description":"Select interpolation type. Off means interpolation + shake speed are disabled"
			},
			{
				"name":"Shake Speed",
				"description":"If interpolation is on, recommended shake speed above 1f (depends on selection!)"
			},
			{
				"name":"Lerp Curve",
				"description":"Only works if interpolation is to curve!)"
			},
			{
				"name":"Rotation Amount",
				"description":"Set rotation strength. 0 = Off/disabled"
			},
			{
				"name":"Exit On Finish",
				"description":"Leave state when finished shaking"
			},
			{
				"name":"Exit",
				"description":"TODO"
			},
			{
				"name":"Loop",
				"description":"Repeat this action every frame. To allow a loop force quit, set Fsm Bool (true = active) and change it to false in game"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Speed No Y",
		"category":"GameObject",
		"image":"./images/GameObjectSpeedNoY.png",
		"description":"Get the speed of a gameObject ignoring its Y velocity.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Speed",
				"description":"The current speed"
			},
			{
				"name":"Speed Vector",
				"description":"The current speed vector"
			},
			{
				"name":"Space",
				"description":"Use local or world space for the Speed vector."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Time Rewind",
		"category":"GameObject",
		"image":"./images/GameObjectTimeRewind.png",
		"description":"Rewind a Gameobject. Default elements: Position + Rotation + Scale + Velocity. You can add more variables or component by code to the action (marked in code).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Behaviour."
			},
			{
				"name":"Time Limit In Seconds",
				"description":"The rewind time in seconds"
			},
			{
				"name":"Is 2D",
				"description":"Is gameobject render 2d?"
			},
			{
				"name":"Use Smooth Delta Time",
				"description":"Use SmoothDeltaTime?"
			},
			{
				"name":"Rewind Is Kinematic",
				"description":"Set to true if you use gravity"
			},
			{
				"name":"Update Type Select",
				"description":"Which update to use"
			},
			{
				"name":"Use Stop Motion",
				"description":"TODO"
			},
			{
				"name":"Stop Motion",
				"description":"TODO"
			},
			{
				"name":"List Limit",
				"description":"Limit the size of list"
			},
			{
				"name":"Rewind",
				"description":"TODO"
			},
			{
				"name":"Force Quit",
				"description":"TODO"
			},
			{
				"name":"Is Rewinding",
				"description":"TODO"
			},
			{
				"name":"Force Quit Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get All Recursive Children",
		"category":"GameObject",
		"image":"./images/GetAllRecursiveChildren.png",
		"description":"gets all children recursivly",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to get recursive children from."
			},
			{
				"name":"Include Inactive",
				"description":"if true, will list inactive gameobjects"
			},
			{
				"name":"Store",
				"description":"Store the result in a GameObject variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Child Count 2",
		"category":"GameObject",
		"image":"./images/GetChildCount2.png",
		"description":"Gets the number of children that a GameObject has. This version has everyframe option",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"Store Result",
				"description":"Store the number of children in an int variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Child Count Advanced",
		"category":"GameObject",
		"image":"./images/GetChildCountAdvanced.png",
		"description":"Gets the number of children that a GameObject has. Adds the options to get all children recursively, only return those that are enabled/disabled and get the amount every frame.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to get the child amount from."
			},
			{
				"name":"Store Result",
				"description":"Store the number of children in an int variable."
			},
			{
				"name":"Get Active",
				"description":"Wheter to only get children that are enabled or disabled. Gets ignored if set to 'None'."
			},
			{
				"name":"Active Type",
				"description":"What active type should be the children checked against.\n\nActiveInHirarchy: If active in the scene\n\nActiveSelf: Is the GameObject itself active independent of any parents state\n\nActive: Deprecated function included to support pre Unity 4 users"
			},
			{
				"name":"Recursive",
				"description":"Wheter to even get all children of children."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Child Count Recursive",
		"category":"GameObject",
		"image":"./images/GetChildCountRecursive.png",
		"description":"Gets the number of children recursivly ( all children, not just direct childs) that a GameObject has.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"Include Inactive",
				"description":"if true, will count inactive gameobjects"
			},
			{
				"name":"Store Result",
				"description":"Store the number of children in an int variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Children",
		"category":"GameObject",
		"image":"./images/GetChildren.png",
		"description":"Finds multiple children of a GameObject by their names.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to search."
			},
			{
				"name":"Child Names",
				"description":"The name of the child. Note, you can specify a path to the child (e.g. \"LeftShoulder/Arm/Hand/Finger\", where \"LeftShoulder\" would be the child to start from."
			},
			{
				"name":"Store Result",
				"description":"Store the current child in a GameObject variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Direction Between Game Objects",
		"category":"Transform",
		"image":"./images/GetDirectionBetweenGameObjects.png",
		"description":"Get a Direction Vector Between two gameobjects, return both 3d or 2d direction, in world or self space, direction can be normalized as well",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject"
			},
			{
				"name":"Target",
				"description":"The target GameObject"
			},
			{
				"name":"Space",
				"description":"In what reference to express the direction"
			},
			{
				"name":"Normalize",
				"description":"if true, normalize the direction result"
			},
			{
				"name":"Direction",
				"description":"The direction from gameobject to target, express in 'Space' reference"
			},
			{
				"name":"Direction 2d",
				"description":"The 2d direction from gameobject to target, express in 'Space' reference"
			},
			{
				"name":"Distance",
				"description":"The distance between the two gameobjects, make sense when normaized is false"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Distance 2",
		"category":"GameObject",
		"image":"./images/GetDistance2.png",
		"description":"Measures the Distance betweens 2 Game Objects or vectors and stores the result in a Float Variable. Vector3 are offseted to GameObjects if declared",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Or Vector 3",
				"description":"TODO"
			},
			{
				"name":"Target",
				"description":"TODO"
			},
			{
				"name":"Or Vector 3 Target",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Game Object Hierarchy Path",
		"category":"GameObject",
		"image":"./images/GetGameObjectHierarchyPath.png",
		"description":"Gets the hierarchy Path of the selected GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject from which you return a String of its Path."
			},
			{
				"name":"Include Self",
				"description":"Include The GameObject in the path"
			},
			{
				"name":"Store Full Path",
				"description":"Store the final String of the GO's Path in a variable."
			},
			{
				"name":"Store Parent Names",
				"description":"Store all parents names"
			},
			{
				"name":"Store Parents",
				"description":"Store the all parents in an array."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Game Object Sibling",
		"category":"GameObject",
		"image":"./images/GetGameObjectSibling.png",
		"description":"Get the GameObject before or after the specified GameObject (any GameObject under the same parent).",
		"params": [
			{
				"name":"Starting From",
				"description":"The GameObject to start from."
			},
			{
				"name":"Index",
				"description":"0 = Owner, Negative = before, positive = after the 'Starting From' GameObject. E.g.: -1 would be the GameObject above in the Hirarchy, if any. If none, it wouldn't get the parent, but throw an Error."
			},
			{
				"name":"Store Result",
				"description":"The final GameObject it reached."
			},
			{
				"name":"Store Result Name",
				"description":"The Name of the final GameObject it reached."
			},
			{
				"name":"Not Found Event",
				"description":"Event send if there could be no sibling found at the specified index."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Game Object Speed",
		"category":"GameObject",
		"image":"./images/GetGameObjectSpeed.png",
		"description":"Get the speed of a gameObject. No need to have it set up with a physic component.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Speed",
				"description":"The current speed"
			},
			{
				"name":"Speed Vector",
				"description":"The current speed vector"
			},
			{
				"name":"Space",
				"description":"Use local or world space for the Speed vector."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Last Child",
		"category":"GameObject",
		"image":"./images/GetLastChild.png",
		"description":"Gets the last child of a GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObjec to get the last child of."
			},
			{
				"name":"Result",
				"description":"The last child of the given GameObject."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Layer 2",
		"category":"GameObject",
		"image":"./images/GetLayer2.png",
		"description":"Gets a Game Object's Layer and stores it in an Int Variable or a String Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Store Int Value",
				"description":"TODO"
			},
			{
				"name":"Store Name Value",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Multilevel Game Object",
		"category":"GameObject",
		"image":"./images/GetMultilevelGameObject.png",
		"description":"Get the Game Object and name of a higher parent or lower child specified by an index.",
		"params": [
			{
				"name":"Starting From",
				"description":"The GameObject to start from."
			},
			{
				"name":"Index",
				"description":"How many 'Directories' to go up or down. For example '2' would be the grandparent of the GameObject this FSM is attached to, '3' the parent of that one ... and so on. 0 returns the Owner. Anything below 0 goes in the other direction (-2 = first Child of the first Child). You can also set a very high number to definitely get the root."
			},
			{
				"name":"Store Result",
				"description":"The final GameObject it reached."
			},
			{
				"name":"Store Result Name",
				"description":"The Name of the final GameObject it reached."
			},
			{
				"name":"Debug",
				"description":"Follow the path it takes (throws Debug.Log's for every GameObject it passes). If there are several Log entries with the same GameObject, it means that the given index is higher than the GameObject has parents or lower than it has children."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Child Recursive",
		"category":"GameObject",
		"image":"./images/GetNextChildRecursive.png",
		"description":"Each time this action is called it gets the next recursived child of a GameObject within all its hierarchy. This lets you quickly loop through all the recursive children of an object to perform actions on them. NOTE: To find a specific child use Find Child.",
		"params": [
			{
				"name":"Game Object",
				"description":"The parent GameObject. Note, if GameObject changes, this action will reset and start again at the first child."
			},
			{
				"name":"Include Inactive",
				"description":"if true, will list inactive gameobjects"
			},
			{
				"name":"Store Next Child",
				"description":"Store the next child in a GameObject variable."
			},
			{
				"name":"Reset",
				"description":"Set to true to force iterating from the first item. This variable will be set to false as it carries on iterating, force it back to true if you want to renter this action back to the first item."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more children."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Child Reset",
		"category":"GameObject",
		"image":"./images/GetNextChildReset.png",
		"description":"Each time this action is called it gets the next child of a GameObject. This lets you quickly loop through all the children of an object to perform actions on them. NOTE: To find a specific child use Find Child.",
		"params": [
			{
				"name":"Game Object",
				"description":"The parent GameObject. Note, if GameObject changes, this action will reset and start again at the first child."
			},
			{
				"name":"Store Next Child",
				"description":"Store the next child in a GameObject variable."
			},
			{
				"name":"Reset",
				"description":"Set to true to force iterating from the first item. This variable will be set to false as it carries on iterating, force it back to true if you want to renter this action back to the first item."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more children."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Parent 2",
		"category":"GameObject",
		"image":"./images/GetParent2.png",
		"description":"Gets the Parent of a Game Object with option to get it everyframe for complex one state flow",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Parent More",
		"category":"GameObject",
		"image":"./images/GetParentMore.png",
		"description":"Gets the Parent of a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Repetitions",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sqr Magnitude",
		"category":"GameObject",
		"image":"./images/GetSqrMagnitude.png",
		"description":"Measures the Square Distance between 2 Game Objects and stores the result in a Float Variable. It's faster than distance, so for relative comparision, it's preferable",
		"params": [
			{
				"name":"Game Object",
				"description":"Measure distance from this GameObject."
			},
			{
				"name":"Target",
				"description":"Target GameObject."
			},
			{
				"name":"Store Result",
				"description":"Store the square distance in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Tag 2",
		"category":"GameObject",
		"image":"./images/GetTag2.png",
		"description":"Gets a Game Object's Tag and stores it in a String Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to get the tag from."
			},
			{
				"name":"Store Result",
				"description":"The tag of the GameObject"
			},
			{
				"name":"Every Frame",
				"description":"runs everyframe, useful if value is expected to change often"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Tag Name",
		"category":"GameObject",
		"image":"./images/GetTagName.png",
		"description":"Gets the name of a given tag",
		"params": [
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get World Distance",
		"category":"GameObject",
		"image":"./images/GetWorldDistance.png",
		"description":"Measures the Distance betweens 2 Game Objects and stores the result in a Float Variable. \nOptionaly ignore axis to obtain planar distance axis distance. \nExample: ignore the y axis only to obtain the distance on the YZ plane. \nExample: ignore Y and Z to obtain the distance on the x axis.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to work with"
			},
			{
				"name":"Target",
				"description":"The target Game Object to work with"
			},
			{
				"name":"Store Result",
				"description":"Store the distance between the gameObject and the target"
			},
			{
				"name":"Ignore X",
				"description":"The world x axis is ignored"
			},
			{
				"name":"Ignore Y",
				"description":"The world y axis is ignored"
			},
			{
				"name":"Ignore Z",
				"description":"The world z axis is ignored"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Grid 2d",
		"category":"GameObject",
		"image":"./images/grid2d.png",
		"description":"Create a 2d grid",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Width",
				"description":"TODO"
			},
			{
				"name":"Height",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"Space between objects in grid. 1 = no space"
			},
			{
				"name":"Vertical Spawn",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Has Child",
		"category":"GameObject",
		"image":"./images/HasChild.png",
		"description":"Finds the Child of a GameObject by Name and/or Tag. Sends events based on result ( Found or not found). NOTE: This action will search recursively through all children and return the first match; To find a specific child use Find Child.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to search."
			},
			{
				"name":"Child Name",
				"description":"The name of the child to search for."
			},
			{
				"name":"With Tag",
				"description":"The Tag to search for. If Child Name is set, both name and Tag need to match."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a GameObject variable."
			},
			{
				"name":"Found",
				"description":"True if child was found"
			},
			{
				"name":"Found Event",
				"description":"TODO"
			},
			{
				"name":"Not Found Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Has Sibling",
		"category":"GameObject",
		"image":"./images/HasSibling.png",
		"description":"Finds the sibling of a GameObject by Name and/or Tag. Sends events based on result (found or not found). NOTE: This action will search recursively through all siblingren of the GameObjects parent and return the first match.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to search from."
			},
			{
				"name":"Sibling Name",
				"description":"The name of the sibling to search for."
			},
			{
				"name":"With Tag",
				"description":"The Tag to search for. If sibling-name is set, both name and Tag need to match."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a GameObject variable."
			},
			{
				"name":"Found",
				"description":"True if sibling was found"
			},
			{
				"name":"Found Event",
				"description":"TODO"
			},
			{
				"name":"Not Found Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Active",
		"category":"GameObject",
		"image":"./images/IsActive.png",
		"description":"Check if a gameObject is active.This lets you know if a gameObject is active in the game. That is the case if its GameObject.activeSelf property is enabled, as well as that of all it's parents.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to check activate state."
			},
			{
				"name":"Is Active",
				"description":"The active state of this gameObject. It uses activeInHierarchy, not activeSelf. So it will return true if this gameobject is active in the game."
			},
			{
				"name":"Is Active Event",
				"description":"TODO"
			},
			{
				"name":"Is Not Active Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat this action every frame. Useful if Activate changes over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Target In Front Or Behind",
		"category":"GameObject",
		"image":"./images/IsTargetInFrontOrBehind.png",
		"description":"Checks to see if a target game object is in front or behind another game object. Stores results in bools and can fire events.",
		"params": [
			{
				"name":"Base Object",
				"description":"The first game object"
			},
			{
				"name":"Target",
				"description":"The target game object."
			},
			{
				"name":"Is Front",
				"description":"TODO"
			},
			{
				"name":"Is Behind",
				"description":"TODO"
			},
			{
				"name":"Behind",
				"description":"TODO"
			},
			{
				"name":"Front",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Visible In Camera Frustrum",
		"category":"Logic",
		"image":"./images/IsVisibleInCameraFrustrum.png",
		"description":"Check to see if a gameobject is visible within the camera's frustrum. Because dynamic shadows break isVisible, it's better to use this check.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"Camera",
				"description":"The Camera to test with. leave to none or empty to use the main"
			},
			{
				"name":"True Event",
				"description":"Event to send if the GameObject is visible."
			},
			{
				"name":"False Event",
				"description":"Event to send if the GameObject is NOT visible."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Position Smooth Damp",
		"category":"Transform",
		"image":"./images/PositionSmoothDamp.png",
		"description":"Gradually changes a vector3 towards a desired goal over time. The value is smoothed by some spring-damper like function, which will never overshoot. The function can be used to smooth any kind of value, positions, colors, scalars.",
		"params": [
			{
				"name":"Game Object",
				"description":"Start/Current GameObject Position"
			},
			{
				"name":"Target",
				"description":"Target Vector, If 'OrTargetGameObject' is set, target will be ignored"
			},
			{
				"name":"Or Target Game Object",
				"description":"Or Target GameObject"
			},
			{
				"name":"Current Velocity",
				"description":"The current velocity, this value is modified by the function every time you call it."
			},
			{
				"name":"Smooth Time",
				"description":"Approximately the time it will take to reach the target. A smaller value will reach the target faster."
			},
			{
				"name":"Max Speed",
				"description":"Optionally allows you to clamp the maximum speed."
			},
			{
				"name":"Done",
				"description":"Event sent when current value is almost equal to the target value"
			},
			{
				"name":"Is Done",
				"description":"true when current value is almost equal to the target value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Scene Objects Count",
		"category":"GameObject",
		"image":"./images/SceneObjectsCount.png",
		"description":"Gets the number of children that a GameObject has.",
		"params": [
			{
				"name":"Store Result",
				"description":"Store the number of children in an int variable."
			},
			{
				"name":"Find With Tag",
				"description":"Optional Find with tag"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Game Object If Not Null",
		"category":"GameObject",
		"image":"./images/SetGameObjectIfNotNull.png",
		"description":"Sets the value of a Game Object variable if it's not null.",
		"params": [
			{
				"name":"Variable",
				"description":"TODO"
			},
			{
				"name":"Game Object",
				"description":"The GameObject to overwrite 'Variable' with if it's not null."
			},
			{
				"name":"Is Null",
				"description":"Optional event to send if the GameObject is null."
			},
			{
				"name":"Is Not Null",
				"description":"Optional event to send if the GameObject isn't null."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to repeat this action on every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Layer By Name",
		"category":"GameObject",
		"image":"./images/SetLayerByName.png",
		"description":"Sets a Game Object's Layer using a string reference for the layer.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Layer",
				"description":"TODO"
			},
			{
				"name":"Layer Not Found Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Layer Recursive",
		"category":"GameObject",
		"image":"./images/SetLayerRecursive.png",
		"description":"Sets the layer and the layer of its children too",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Layer",
				"description":"TODO"
			},
			{
				"name":"Children",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Game Object Value",
		"category":"GameObject",
		"image":"./images/SetMultiGameObjectValue.png",
		"description":"Sets the value of many GameObject Variable.",
		"params": [
			{
				"name":"Gameobject Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Layer Value",
		"category":"GameObject",
		"image":"./images/SetMultiLayerValue.png",
		"description":"Sets the value of many GameObject's Layer.",
		"params": [
			{
				"name":"Gameobject Variable",
				"description":"TODO"
			},
			{
				"name":"Layer",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Name Value",
		"category":"GameObject",
		"image":"./images/SetMultiNameValue.png",
		"description":"Sets the value of many GameObject's name.",
		"params": [
			{
				"name":"Gameobject Variable",
				"description":"TODO"
			},
			{
				"name":"Name",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Tag Value",
		"category":"GameObject",
		"image":"./images/SetMultiTagValue.png",
		"description":"Sets the value of many Game Object's Tag.",
		"params": [
			{
				"name":"Gameobject Variable",
				"description":"TODO"
			},
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Parent 2",
		"category":"GameObject",
		"image":"./images/SetParent2.png",
		"description":"Sets the Parent of a Game Object. Same as official action but lt you use 'owner' for the parent for convenience.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to parent."
			},
			{
				"name":"Parent",
				"description":"The new parent for the Game Object."
			},
			{
				"name":"Reset Local Position",
				"description":"Set the local position to 0,0,0 after parenting."
			},
			{
				"name":"Reset Local Rotation",
				"description":"Set the local rotation to 0,0,0 after parenting."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Singleton Manager",
		"category":"Logic",
		"image":"./images/SingletonManager.png",
		"description":"Manager Singletons. If the reference given exists already, then this gameobject is destroyed",
		"params": [
			{
				"name":"Reference",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Toggle Component",
		"category":"Logic",
		"image":"./images/ToggleComponent.png",
		"description":"Enables a Component if it's disabled and vice versa.",
		"params": [
			{
				"name":"Component",
				"description":"The component to toggle. Supports scripts, colliders and renderer."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run this action every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Toggle Game Object",
		"category":"Logic",
		"image":"./images/ToggleGameObject.png",
		"description":"Enables a GameObject if it's disabled and vice versa.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to toggle."
			},
			{
				"name":"Active Type",
				"description":"What active state should be checked.\n'Active In Hirarchy' = If the GameObject and all of it's parents are active (a.k.a. if it's visible in the scene);\n'ActiveSelf' = If the GameObject is active independent of its parents."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run this action every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Garbage Collection",
		"category":"Garbage Collection",
		"image":"./images/GarbageCollection.png",
		"description":"Request a collection explicitly",
		"params": [
			{
				"name":"Collection On",
				"description":"Allow Garbage Collection"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Garbage Collection Get Total Memory",
		"category":"Garbage Collection",
		"image":"./images/GarbageCollectionGetTotalMemory.png",
		"description":"Get Mono Total Memory",
		"params": [
			{
				"name":"Get Gc Mem",
				"description":"Allow Garbage Collection"
			},
			{
				"name":"Result Mb",
				"description":"TODO"
			},
			{
				"name":"Everyframe",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Garbage Collection Large Heap",
		"category":"Garbage Collection",
		"image":"./images/GarbageCollectionLargeHeap.png",
		"description":"This strategy works best for games where allocations (and therefore collections) are relatively infrequent and can be handled during pauses in gameplay.",
		"params": [
			{
				"name":"Byte Size",
				"description":"!!! Power of two - default is 1024"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Garbage Collection Small Heap",
		"category":"Garbage Collection",
		"image":"./images/GarbageCollectionSmallHeap.png",
		"description":"This strategy is often best for games that have long periods of gameplay where a smooth framerate is the main concern",
		"params": [
			{
				"name":"Collection On",
				"description":"Allow Garbage Collection"
			},
			{
				"name":"Frame Count",
				"description":"TODO"
			},
			{
				"name":"Force Cancelled",
				"description":"Stop the collection"
			},
			{
				"name":"Cancelled Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Begin Size",
		"category":"GUI",
		"image":"./images/GUIBeginSize.png",
		"description":"GUI Begin Size.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI End Size",
		"category":"GUI",
		"image":"./images/GUIEndSize.png",
		"description":"GUI End Size.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Gui Focus Control",
		"category":"GUI",
		"image":"./images/GuiFocusControl.png",
		"description":"Move keyboard focus to a named control.",
		"params": [
			{
				"name":"Control Name",
				"description":"The the name of the control to focus"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Gui Keyboard Event",
		"category":"GUI",
		"image":"./images/GuiKeyboardEvent.png",
		"description":"Sends an Event when a KeyCode is detected in the GUI. Always use this before a textfield action to catch enter for example",
		"params": [
			{
				"name":"Key Code",
				"description":"The key to catch"
			},
			{
				"name":"Send Event",
				"description":"Event to send when key detected"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Gui Set Next Control Name",
		"category":"GUI",
		"image":"./images/GuiSetNextControlName.png",
		"description":"Set the name of the next control. Useful to control focus on textfields for example",
		"params": [
			{
				"name":"Control Name",
				"description":"The the name of the next control"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Gui Sizer Set Default Size",
		"category":"GUI",
		"image":"./images/GuiSizerSetDefaultSize.png",
		"description":"Set the default size of the gui when using GuiBeginSize and GuiEndSize",
		"params": [
			{
				"name":"Default Width",
				"description":"TODO"
			},
			{
				"name":"Default Height",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Texture Pixel Inset Position",
		"category":"GUIElement",
		"image":"./images/SetGUITexturePixelInsetPosition.png",
		"description":"Sets the Pixel Inset Position of the GUITexture attached to a Game Object. Useful for moving GUI elements around.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Pixel Inset X",
				"description":"TODO"
			},
			{
				"name":"Pixel Inset Y",
				"description":"TODO"
			},
			{
				"name":"As Increment",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Texture Pixel Inset Size",
		"category":"GUIElement",
		"image":"./images/SetGUITexturePixelInsetSize.png",
		"description":"Sets the Pixel Inset Soze of the GUITexture attached to a Game Object. Useful for sizing GUI elements around.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Width",
				"description":"TODO"
			},
			{
				"name":"Height",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Begin Area Follow Mouse",
		"category":"GUILayout",
		"image":"./images/GUILayoutBeginAreaFollowMouse.png",
		"description":"Begin a GUILayout area that follows the mouse. Useful for overlays (e.g., playerName). NOTE: Block must end with a corresponding GUILayoutEndArea.",
		"params": [
			{
				"name":"Offset Left",
				"description":"TODO"
			},
			{
				"name":"Offset Top",
				"description":"TODO"
			},
			{
				"name":"Width",
				"description":"TODO"
			},
			{
				"name":"Height",
				"description":"TODO"
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Any Key Store String",
		"category":"Input",
		"image":"./images/AnyKeyStoreString.png",
		"description":"Sends an Event when the user hits any Key or Mouse Button.",
		"params": [
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Axis Ended Event",
		"category":"Input",
		"image":"./images/AxisEndedEvent.png",
		"description":"Sends an event based on the  inactive direction of Input Axis",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"Horizontal axis as defined in the Input Manager if no axis set, the value will be 0"
			},
			{
				"name":"Vertical Axis",
				"description":"Vertical axis as defined in the Input Manager if no axis set, the value will be 0"
			},
			{
				"name":"Direction To Check",
				"description":"The direction to check"
			},
			{
				"name":"Tolerance",
				"description":"Set a tolerance when the event should trigger (deadzone) This must be a value between 0 and 1"
			},
			{
				"name":"Check Other Axis",
				"description":"Check if the other axis is active, this only works for Left / Right / Up / Down"
			},
			{
				"name":"Direction Inactive",
				"description":"TODO"
			},
			{
				"name":"Ended Event",
				"description":"Event to send if input is to the left."
			},
			{
				"name":"Other Axis Active",
				"description":"Event to send if input is to the left."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Axis Event Extended",
		"category":"Input",
		"image":"./images/AxisEventExtended.png",
		"description":"Sends events based on the direction of Input Axis (Left/Right/Up/Down...). Also sends intermedidate directions ( left-Right). Expose an option to only send event when direction changed.",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"Horizontal axis as defined in the Input Manager"
			},
			{
				"name":"Vertical Axis",
				"description":"Vertical axis as defined in the Input Manager"
			},
			{
				"name":"Tolerance",
				"description":"Set a tolerance when the event should trigger (deadzone) This must be a value between 0 and 1"
			},
			{
				"name":"Store Angle",
				"description":"The direction angle. Range from -180 to 180, 0 being full up"
			},
			{
				"name":"Left Event",
				"description":"Event to send if input is to the left."
			},
			{
				"name":"Right Event",
				"description":"Event to send if input is to the right."
			},
			{
				"name":"Up Event",
				"description":"Event to send if input is to the up."
			},
			{
				"name":"Down Event",
				"description":"Event to send if input is to the down."
			},
			{
				"name":"Up Left Event",
				"description":"Event to send if input is to the up left."
			},
			{
				"name":"Up Right Event",
				"description":"Event to send if input is to the up right."
			},
			{
				"name":"Down Left Event",
				"description":"Event to send if input is to the down left."
			},
			{
				"name":"Down Right Event",
				"description":"Event to send if input is to the down right."
			},
			{
				"name":"No Direction",
				"description":"Event to send if no axis input (centered)."
			},
			{
				"name":"Discrete Events",
				"description":"Only send events when direction changes"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Axis Raw Event",
		"category":"Input",
		"image":"./images/AxisRawEvent.png",
		"description":"Sends events based on the direction of Input Axis (Left/Right/Up/Down...).",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"Horizontal axis as defined in the Input Manager"
			},
			{
				"name":"Vertical Axis",
				"description":"Vertical axis as defined in the Input Manager"
			},
			{
				"name":"Left Event",
				"description":"Event to send if input is to the left."
			},
			{
				"name":"Right Event",
				"description":"Event to send if input is to the right."
			},
			{
				"name":"Up Event",
				"description":"Event to send if input is to the up."
			},
			{
				"name":"Down Event",
				"description":"Event to send if input is to the down."
			},
			{
				"name":"Any Direction",
				"description":"Event to send if input is in any direction."
			},
			{
				"name":"No Direction",
				"description":"Event to send if no axis input (centered)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Custom Mouse Pick",
		"category":"Input",
		"image":"./images/CustomMousePick.png",
		"description":"Perform a Mouse Pick on the scene and stores the results. Use Ray Distance to set how close the camera must be to pick the object.",
		"params": [
			{
				"name":"Screen Position",
				"description":"The screen Position, same reference system as Input.MousePosition: The bottom-left of the screen or window is at (0, 0). The top-right of the screen or window is at (Screen.width, Screen.height)."
			},
			{
				"name":"Ray Distance",
				"description":"TODO"
			},
			{
				"name":"Camera",
				"description":"The Camera from which to check. LEave empty to use main camera"
			},
			{
				"name":"Store Did Pick Object",
				"description":"TODO"
			},
			{
				"name":"Store Game Object",
				"description":"TODO"
			},
			{
				"name":"Store Point",
				"description":"TODO"
			},
			{
				"name":"Store Normal",
				"description":"TODO"
			},
			{
				"name":"Store Distance",
				"description":"TODO"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Line",
				"description":"TODO"
			},
			{
				"name":"Debug Color",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Axis Raw",
		"category":"Input",
		"image":"./images/GetAxisRaw.png",
		"description":"Gets the raw value of the specified Input Axis and stores it in a Float Variable. See Unity Input Manager docs.",
		"params": [
			{
				"name":"Axis Name",
				"description":"The name of the axis. Set in the Unity Input Manager."
			},
			{
				"name":"Multiplier",
				"description":"Axis values are in the range -1 to 1. Use the multiplier to set a larger range."
			},
			{
				"name":"Store",
				"description":"Store the result in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Typically this would be set to True."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Axis Vector Extended",
		"category":"Input",
		"image":"./images/GetAxisVectorExtended.png",
		"description":"Gets a world direction Vector from 2 Input Axis. Typically used for a third person controller with Relative To set to the camera.",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"The name of the horizontal input axis. See Unity Input Manager."
			},
			{
				"name":"Vertical Axis",
				"description":"The name of the vertical input axis. See Unity Input Manager."
			},
			{
				"name":"Multiplier",
				"description":"Input axis are reported in the range -1 to 1, this multiplier lets you set a new range."
			},
			{
				"name":"Map To Plane",
				"description":"The world plane to map the 2d input onto."
			},
			{
				"name":"Relative To",
				"description":"Make the result relative to a GameObject, typically the main camera."
			},
			{
				"name":"Store Vector",
				"description":"Store the direction vector."
			},
			{
				"name":"Store Magnitude",
				"description":"Store the length of the direction vector."
			},
			{
				"name":"Store Angle",
				"description":"Store the angle of the direction vector. Ranges from -180 to 180, 0, being fully vertical, 90, fully right,-90 fully left"
			},
			{
				"name":"Check Angle If Axis 0",
				"description":"If Uncheck, this will prevent to check the angle when the magnitude is 0 ( both axis are 0)"
			},
			{
				"name":"Use Raw Axis",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Connected Joystick Number",
		"category":"Input",
		"image":"./images/GetConnectedJoystickNumber.png",
		"description":"How many joysticks are connected",
		"params": [
			{
				"name":"Joystick Quantity",
				"description":"Store the amount of Joysticks"
			},
			{
				"name":"Empty Event",
				"description":"Event to send when there are no Joysticks."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there more than Joystick connected."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Custom Axis Vector",
		"category":"Input",
		"image":"./images/GetCustomAxisVector.png",
		"description":"Gets a world direction Vector from 2 Inputs. Typically used for a third person controller with Relative To set to the camera.",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"The horizontal input"
			},
			{
				"name":"Vertical Axis",
				"description":"The vertical input"
			},
			{
				"name":"Multiplier",
				"description":"Input are usually reported in the range -1 to 1, this multiplier lets you set a new range."
			},
			{
				"name":"Map To Plane",
				"description":"The world plane to map the 2d input onto."
			},
			{
				"name":"Relative To",
				"description":"Make the result relative to a GameObject, typically the main camera."
			},
			{
				"name":"Store Vector",
				"description":"Store the direction vector."
			},
			{
				"name":"Store Magnitude",
				"description":"Store the length of the direction vector."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Joystick Button",
		"category":"Input",
		"image":"./images/GetJoystickButton.png",
		"description":"Set bool of joystick button down/up",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button axis. Set in the Unity Input Manager."
			},
			{
				"name":"Store",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Typically this would be set to True."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Joystick Name",
		"category":"Input",
		"image":"./images/GetJoystickName.png",
		"description":"Gets a Joystick name by its index.",
		"params": [
			{
				"name":"Joystick Index",
				"description":"TODO"
			},
			{
				"name":"Joystick Name",
				"description":"Store the Joystick Name found at that index"
			},
			{
				"name":"Found Event",
				"description":"Event to send when the index is found"
			},
			{
				"name":"Not Found Event",
				"description":"Event to send when the index is out of range"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Key Code To String",
		"category":"Input",
		"image":"./images/GetKeyCodeToString.png",
		"description":"Get KeyCode and set to string ",
		"params": [
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Key Down From String",
		"category":"Input",
		"image":"./images/GetKeyDownFromString.png",
		"description":"Sends an Event when the Keystring is pressed. Waring!! The String must be a valid KeyCode.",
		"params": [
			{
				"name":"Key Code",
				"description":"The keystring to test. Waring!! The String must be a valid KeyCode."
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Store Key",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Key From String",
		"category":"Input",
		"image":"./images/GetKeyFromString.png",
		"description":"Gets the pressed state of the Keystring. Waring!! The String must be a valid KeyCode.",
		"params": [
			{
				"name":"Key Code",
				"description":"The keystring to test. Waring!! The String must be a valid KeyCode."
			},
			{
				"name":"Store Result",
				"description":"Store if the key is down (True) or up (False)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're waiting for a key press/release."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Key Multi",
		"category":"Input",
		"image":"./images/GetKeyMulti.png",
		"description":"Gets the pressed state of a Key.",
		"params": [
			{
				"name":"Key",
				"description":"The key to test."
			},
			{
				"name":"Values",
				"description":"Store if the key is down (True) or up (False)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're waiting for a key press/release."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Key Up From String",
		"category":"Input",
		"image":"./images/GetKeyUpFromString.png",
		"description":"Sends an Event when the Keystring is released. Waring!! The String must be a valid KeyCode.",
		"params": [
			{
				"name":"Key Code",
				"description":"The keystring to test. Waring!! The String must be a valid KeyCode."
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Store Key",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mouse Delta Position",
		"category":"Input",
		"image":"./images/GetMouseDeltaPosition.png",
		"description":"Gets the delta Position of the mouse as a Vector3, vector2, or individual axis.",
		"params": [
			{
				"name":"Mouse Delta Position",
				"description":"TODO"
			},
			{
				"name":"Mouse Position Delta Vector 2",
				"description":"TODO"
			},
			{
				"name":"Mouse Delta Position X",
				"description":"TODO"
			},
			{
				"name":"Mouse Delta Position Y",
				"description":"TODO"
			},
			{
				"name":"Normalize",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mouse Position",
		"category":"Input",
		"image":"./images/GetMousePosition.png",
		"description":"Gets the Vector3 Position of the mouse and stores it in a Variable.",
		"params": [
			{
				"name":"Mouse Position",
				"description":"TODO"
			},
			{
				"name":"Normalize",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mouse Position Advanced",
		"category":"Input",
		"image":"./images/GetMousePositionAdvanced.png",
		"description":"Get Mouse Position in screen space.",
		"params": [
			{
				"name":"Store Mouse Position",
				"description":"Store the position in this Vector3"
			},
			{
				"name":"Every Frame",
				"description":"Do this every frame?"
			},
			{
				"name":"From Screen Center",
				"description":"Get the position relative to the center of the screen? (note: doesn't work with Invert Y checked)"
			},
			{
				"name":"Invert Y",
				"description":"Invery Y. For use with GUI space."
			},
			{
				"name":"Normalized",
				"description":"Normalize the Vector3 result?"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Joystick Name",
		"category":"Input",
		"image":"./images/GetNextJoystickName.png",
		"description":"Each time this action is called it gets the next child Joystick. This lets you quickly loop through all the Joystick perform actions on them.",
		"params": [
			{
				"name":"Store Next Joystick Name",
				"description":"Store the next Joystick Name"
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next Joystick."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more Joysticks."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Input Look",
		"category":"Input",
		"image":"./images/InputLook.png",
		"description":"Based on MouseLook, Rotates a GameObject based on mouse movement using Inputs. Minimum and Maximum values can be used to constrain the rotation.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Axes",
				"description":"The axes to rotate around."
			},
			{
				"name":"Input X",
				"description":"Joystick value that controls Input X"
			},
			{
				"name":"Input Y",
				"description":"Joystick value that controls Input Y"
			},
			{
				"name":"Sensitivity X",
				"description":"Sensitivity of movement in X direction."
			},
			{
				"name":"Sensitivity Y",
				"description":"Sensitivity of movement in Y direction."
			},
			{
				"name":"Minimum X",
				"description":"Clamp rotation around X axis. Set to None for no clamping."
			},
			{
				"name":"Maximum X",
				"description":"Clamp rotation around X axis. Set to None for no clamping."
			},
			{
				"name":"Minimum Y",
				"description":"Clamp rotation around Y axis. Set to None for no clamping."
			},
			{
				"name":"Maximum Y",
				"description":"Clamp rotation around Y axis. Set to None for no clamping."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Keyboard Pick Event",
		"category":"Input",
		"image":"./images/KeyboardPickEvent.png",
		"description":"Sends Events based on keyboard stroke and current mouse position interactions with a Game Object. Use Ray Distance to set how close the camera must be to pick the object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Ray Distance",
				"description":"Length of the ray to cast from the camera."
			},
			{
				"name":"Key",
				"description":"The key to test."
			},
			{
				"name":"Mouse Over",
				"description":"Event to send when the mouse is over the GameObject."
			},
			{
				"name":"Key Down",
				"description":"Event to send when the key is pressed while mouse over the GameObject."
			},
			{
				"name":"Key Up",
				"description":"Event to send when the key is released while over the GameObject."
			},
			{
				"name":"Mouse Off",
				"description":"Event to send when the mouse moves off the GameObject."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Look 2d",
		"category":"Input",
		"image":"./images/MouseLook2d.png",
		"description":"rotate on the z axis looking to the mouse position",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Minimum Z",
				"description":"TODO"
			},
			{
				"name":"Maximum Z",
				"description":"TODO"
			},
			{
				"name":"Rotation Offset",
				"description":"Set the GameObject starting offset. In degrees. 0 if your object is facing right, 180 if facing left etc..."
			},
			{
				"name":"Z Rotation",
				"description":"the Z rotation"
			},
			{
				"name":"Only Get Value",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Look Invert",
		"category":"Input",
		"image":"./images/MouseLookInvert.png",
		"description":"Rotates a GameObject based on mouse movement. Minimum and Maximum values can be used to constrain the rotation.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Axes",
				"description":"The axes to rotate around."
			},
			{
				"name":"Sensitivity X",
				"description":"Sensitivity of movement in X direction."
			},
			{
				"name":"Sensitivity Y",
				"description":"Sensitivity of movement in Y direction."
			},
			{
				"name":"Minimum X",
				"description":"Clamp rotation around X axis. Set to None for no clamping."
			},
			{
				"name":"Maximum X",
				"description":"Clamp rotation around X axis. Set to None for no clamping."
			},
			{
				"name":"Minimum Y",
				"description":"Clamp rotation around Y axis. Set to None for no clamping."
			},
			{
				"name":"Maximum Y",
				"description":"Clamp rotation around Y axis. Set to None for no clamping."
			},
			{
				"name":"Invert X",
				"description":"Invert Y direction (rotate down instead of up)"
			},
			{
				"name":"Invert Y",
				"description":"Invert Y direction (rotate down instead of up)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Move Activity Events",
		"category":"Input",
		"image":"./images/MouseMoveActivityEvents.png",
		"description":"Send Events when mouse becomes still and moves after some inactivity, inactivity time can be fine tuned.",
		"params": [
			{
				"name":"Inactivity Threshold",
				"description":"Time threshold in seconds under which events are not sent. so the mouse must not move for this duration to trigger a future event when finally moved again"
			},
			{
				"name":"Is Inactive",
				"description":"TODO"
			},
			{
				"name":"Event Target",
				"description":"Where to send the mouse move event."
			},
			{
				"name":"Mouse Still Event",
				"description":"The event to send when mouse becomes inactive. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Mouse Move Event",
				"description":"The event to send when mouse moves again. NOTE: Events must be marked Global to send between FSMs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Pick 2d To Vector3",
		"category":"Input",
		"image":"./images/MousePick2dToVector3.png",
		"description":"Perform a Mouse Pick on a 2d scene and stores the results. Use Ray Distance to set how close the camera must be to pick the 2d object.",
		"params": [
			{
				"name":"Store Did Pick Object",
				"description":"Store if a GameObject was picked in a Bool variable. True if a GameObject was picked, otherwise false."
			},
			{
				"name":"Store Game Object",
				"description":"Store the picked GameObject in a variable."
			},
			{
				"name":"Store Value",
				"description":"Store the picked point in a variable."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Pick 2d XY",
		"category":"Input",
		"image":"./images/MousePick2dXY.png",
		"description":"Perform a Mouse Pick on a 2d scene and stores the results. Use Ray Distance to set how close the camera must be to pick the 2d object.",
		"params": [
			{
				"name":"Store Did Pick Object",
				"description":"Store if a GameObject was picked in a Bool variable. True if a GameObject was picked, otherwise false."
			},
			{
				"name":"Store Game Object",
				"description":"Store the picked GameObject in a variable."
			},
			{
				"name":"Store Point",
				"description":"Store the picked point in a variable."
			},
			{
				"name":"Store Point X",
				"description":"Store the picked point X in a variable."
			},
			{
				"name":"Store Point Y",
				"description":"Store the picked point Y in a variable."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Pick Event 2",
		"category":"Input",
		"image":"./images/MousePickEvent2.png",
		"description":"Sends Events based on mouse interactions with a Game Object: MouseOver, MouseDown, MouseUp, MouseOff. Use Ray Distance to set how close the camera must be to pick the object. Button id can be set as well: 0 for left click ( default), 1 for right click, 2 for middle click",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Ray Distance",
				"description":"Length of the ray to cast from the camera."
			},
			{
				"name":"Button Id",
				"description":"The button id. 0 by default, 1 for right click, 2 for middle click"
			},
			{
				"name":"Mouse Over",
				"description":"Event to send when the mouse is over the GameObject."
			},
			{
				"name":"Mouse Down",
				"description":"Event to send when the mouse is pressed while over the GameObject."
			},
			{
				"name":"Mouse Up",
				"description":"Event to send when the mouse is released while over the GameObject."
			},
			{
				"name":"Mouse Off",
				"description":"Event to send when the mouse moves off the GameObject."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Pick Event Custom",
		"category":"Input",
		"image":"./images/MousePickEventCustom.png",
		"description":"Sends Events based on mouse interactions with a Game Object: MouseOver, MouseDown, MouseUp, MouseOff. Use Ray Distance to set how close the camera must be to pick the object.",
		"params": [
			{
				"name":"Camera",
				"description":"The Camera from which to check. LEave empty to use main camera"
			},
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Ray Distance",
				"description":"Length of the ray to cast from the camera."
			},
			{
				"name":"Mouse Over",
				"description":"Event to send when the mouse is over the GameObject."
			},
			{
				"name":"Mouse Down",
				"description":"Event to send when the mouse is pressed while over the GameObject."
			},
			{
				"name":"Mouse Up",
				"description":"Event to send when the mouse is released while over the GameObject."
			},
			{
				"name":"Mouse Off",
				"description":"Event to send when the mouse moves off the GameObject."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Line",
				"description":"TODO"
			},
			{
				"name":"Debug Color",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Polar Direction Event",
		"category":"Input",
		"image":"./images/PolarDirectionEvent.png",
		"description":"Sends events based on 16 polar direction ( NNW, SEE, etc). Expose an option to only send event when direction changed.",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"Horizontal axis as defined in the Input Manager"
			},
			{
				"name":"Vertical Axis",
				"description":"Vertical axis as defined in the Input Manager"
			},
			{
				"name":"Store Angle",
				"description":"The direction angle. Range from -180 to 180, 0 being EST"
			},
			{
				"name":"North Event",
				"description":"Event to send if direction is North."
			},
			{
				"name":"North North Est Event",
				"description":"Event to send if direction is North North Est."
			},
			{
				"name":"North Est Event",
				"description":"Event to send if direction is North Est"
			},
			{
				"name":"North Est Est Event",
				"description":"Event to send if direction is North Est Est."
			},
			{
				"name":"Est Event",
				"description":"Event to send if direction is Est."
			},
			{
				"name":"South Est Est Event",
				"description":"Event to send if direction is South Est Est."
			},
			{
				"name":"South Est Event",
				"description":"Event to send if direction is South Est."
			},
			{
				"name":"South South Est Event",
				"description":"Event to send if direction is South South Est."
			},
			{
				"name":"South Event",
				"description":"Event to send if direction is South."
			},
			{
				"name":"South South West Event",
				"description":"Event to send if direction is South South West."
			},
			{
				"name":"South West Event",
				"description":"Event to send if direction is South West."
			},
			{
				"name":"South West West Event",
				"description":"Event to send if direction is South West West."
			},
			{
				"name":"West Event",
				"description":"Event to send if direction is West."
			},
			{
				"name":"North West West Event",
				"description":"Event to send if direction is North West West."
			},
			{
				"name":"North West Event",
				"description":"Event to send if direction is North West."
			},
			{
				"name":"North North West Event",
				"description":"Event to send if direction is North North West."
			},
			{
				"name":"No Direction",
				"description":"Event to send if no axis input (centered)."
			},
			{
				"name":"Discrete Events",
				"description":"Only send events when direction changes"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch Object Event 2",
		"category":"Device",
		"image":"./images/TouchObjectEvent2.png",
		"description":"Sends events when an object is touched. Optionally filter by a fingerID. NOTE: Uses the MainCamera! Only raycast on the gameObject layer, prevents mix up in some cases.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to detect touches on."
			},
			{
				"name":"Pick Distance",
				"description":"How far from the camera is the Game Object pickable."
			},
			{
				"name":"Finger Id",
				"description":"Only detect touches that match this fingerID, or set to None."
			},
			{
				"name":"Touch Began",
				"description":"Event to send on touch began."
			},
			{
				"name":"Touch Moved",
				"description":"Event to send on touch moved."
			},
			{
				"name":"Touch Stationary",
				"description":"Event to send on stationary touch."
			},
			{
				"name":"Touch Ended",
				"description":"Event to send on touch ended."
			},
			{
				"name":"Touch Canceled",
				"description":"Event to send on touch cancel."
			},
			{
				"name":"Store Finger Id",
				"description":"Store the fingerId of the touch."
			},
			{
				"name":"Store Hit Point",
				"description":"Store the world position where the object was touched."
			},
			{
				"name":"Store Hit Normal",
				"description":"Store the surface normal vector where the object was touched."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Move Update 2",
		"category":"iTween",
		"image":"./images/iTweenMoveUpdate2.png",
		"description":"Similar to MoveTo but incredibly less expensive for usage inside the Update function or similar looping situations involving a 'live' set of changing values. Does not utilize an EaseType. Let's you choose the tyoe of update.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Transform Position",
				"description":"Move From a transform rotation."
			},
			{
				"name":"Vector Position",
				"description":"The position the GameObject will animate from.  If transformPosition is set, this is used as an offset."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Space",
				"description":"Whether to animate in local or world space."
			},
			{
				"name":"Update Call",
				"description":"TODO"
			},
			{
				"name":"Orient To Path",
				"description":"Whether or not the GameObject will orient to its direction of travel. False by default."
			},
			{
				"name":"Look At Object",
				"description":"A target object the GameObject will look at."
			},
			{
				"name":"Look At Vector",
				"description":"A target position the GameObject will look at."
			},
			{
				"name":"Look Time",
				"description":"The time in seconds the object will take to look at either the Look At Target or Orient To Path. 0 by default"
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Rotate Update 2",
		"category":"iTween",
		"image":"./images/iTweenRotateUpdate2.png",
		"description":"Similar to RotateTo but incredibly less expensive for usage inside the Update function or similar looping situations involving a 'live' set of changing values. Does not utilize an EaseType. Let's you choose the tyoe of update.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Transform Rotation",
				"description":"Rotate to a transform rotation."
			},
			{
				"name":"Vector Rotation",
				"description":"A rotation the GameObject will animate from."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete. If transformRotation is set, this is used as an offset."
			},
			{
				"name":"Space",
				"description":"Whether to animate in local or world space."
			},
			{
				"name":"Update Call",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Stream Progress For Level",
		"category":"Level",
		"image":"./images/GetStreamProgressForLevel.png",
		"description":"Get the Stream progres for a level",
		"params": [
			{
				"name":"Level Name",
				"description":"The name of the level to load. NOTE: Must be in the list of levels defined in File->Build Settings... "
			},
			{
				"name":"Loading Progress",
				"description":"Store the loading progress: range 0-1"
			},
			{
				"name":"Loaded Event",
				"description":"Event to send when the level has loaded. NOTE: This only makes sense if the FSM is still in the scene!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Stream Progress For Level Num",
		"category":"Level",
		"image":"./images/GetStreamProgressForLevelNum.png",
		"description":"Get the Stream progres for a level id",
		"params": [
			{
				"name":"Level",
				"description":"The id of the level to load. NOTE: Must be in the list of levels defined in File->Build Settings... "
			},
			{
				"name":"Loading Progress",
				"description":"Store the loading progress: range 0-1"
			},
			{
				"name":"Loaded Event",
				"description":"Event to send when the level has loaded. NOTE: This only makes sense if the FSM is still in the scene!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load Level 2",
		"category":"Level",
		"image":"./images/LoadLevel2.png",
		"description":"Loads a Level by Name. For async loading, gives pogress feedback. NOTE: Before you can load a level, you have to add it to the list of levels defined in File->Build Settings...",
		"params": [
			{
				"name":"Level Name",
				"description":"The name of the level to load. NOTE: Must be in the list of levels defined in File->Build Settings... "
			},
			{
				"name":"Additive",
				"description":"Load the level additively, keeping the current scene."
			},
			{
				"name":"Async",
				"description":"Load the level asynchronously in the background."
			},
			{
				"name":"Async Progress",
				"description":"asynchronous loading progress."
			},
			{
				"name":"Loaded Event",
				"description":"Event to send when the level has loaded. NOTE: This only makes sense if the FSM is still in the scene!"
			},
			{
				"name":"Dont Destroy On Load",
				"description":"Keep this GameObject in the new level. NOTE: The GameObject and components is disabled then enabled on load; uncheck Reset On Disable to keep the active state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load Level Num 2",
		"category":"Level",
		"image":"./images/LoadLevelNum2.png",
		"description":"Loads a Level by Index number. For async loading, gives progress feedback. Before you can load a level, you have to add it to the list of levels defined in File->Build Settings...",
		"params": [
			{
				"name":"Level Index",
				"description":"The level index in File->Build Settings"
			},
			{
				"name":"Additive",
				"description":"Load the level additively, keeping the current scene."
			},
			{
				"name":"Loaded Event",
				"description":"Event to send after the level is loaded."
			},
			{
				"name":"Dont Destroy On Load",
				"description":"Keep this GameObject in the new level. NOTE: The GameObject and components is disabled then enabled on load; uncheck Reset On Disable to keep the active state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Light Intensity",
		"category":"Lights",
		"image":"./images/GetLightIntensity.png",
		"description":"Gets the Intensity of a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Light Intensity",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Light Range",
		"category":"Lights",
		"image":"./images/GetLightRange.png",
		"description":"Gets the Range of a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Light Range",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Any False",
		"category":"Logic",
		"image":"./images/BoolAnyFalse.png",
		"description":"Tests if any of the given Bool Variables are False.",
		"params": [
			{
				"name":"Bool Variables",
				"description":"The Bool variables to check."
			},
			{
				"name":"Send Event",
				"description":"Event to send if any of the Bool variables are False."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Any True Indexed",
		"category":"Logic",
		"image":"./images/BoolAnyTrueIndexed.png",
		"description":"Tests if any of the given Bool Variables are True.",
		"params": [
			{
				"name":"Bool Variables",
				"description":"The Bool variables to check."
			},
			{
				"name":"Send Event",
				"description":"Event to send if any of the Bool variables are True."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Element Index",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Compare",
		"category":"Logic",
		"image":"./images/BoolCompare.png",
		"description":"Compares 2 Strings and sends Events based on the result.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to test."
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Equal Event",
				"description":"TODO"
			},
			{
				"name":"Not Equal Event",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"Store the true/false result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the strings are changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Float Multiplier",
		"category":"Logic",
		"image":"./images/BoolFloatMultiplier.png",
		"description":"Multiply a float based on a bool variable.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable that determines the multiplication."
			},
			{
				"name":"Float Variable",
				"description":"The float variable to work with"
			},
			{
				"name":"Multiply If True",
				"description":"Factor used when the bool is true."
			},
			{
				"name":"Multiply If False",
				"description":"Factor used when the bool is false."
			},
			{
				"name":"Reset Float",
				"description":"Reset the float to what it was upon entering the state."
			},
			{
				"name":"Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Multi Condition",
		"category":"Logic",
		"image":"./images/BoolMultiCondition.png",
		"description":"Check multiple bool variables for conditions.",
		"params": [
			{
				"name":"Booleans",
				"description":"The variables to evaluate."
			},
			{
				"name":"Conditions",
				"description":"The passing conditions for the above variable list. Must be the same count as Booleans."
			},
			{
				"name":"Pass Event",
				"description":"If the evaluated booleans DO match the conditions, this event can fire."
			},
			{
				"name":"Fail Event",
				"description":"If the evaluated booleans do NOT match the conditions, this event can fire."
			},
			{
				"name":"Result",
				"description":"true if all conditions met"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			},
			{
				"name":"Debug",
				"description":"Reports clear information about failure events."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Int To Letter",
		"category":"Logic",
		"image":"./images/ConvertIntToLetter.png",
		"description":"Returns the letter at the given Integer position (must be between 1 and 26).",
		"params": [
			{
				"name":"Int Value",
				"description":"The int variable that serves as the position to get the letter of."
			},
			{
				"name":"Result",
				"description":"The resulting letter."
			},
			{
				"name":"Return Uppercase",
				"description":"Whether the resulting letter should be in uppercase format instead of lowercase."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variable is changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Count Bool States",
		"category":"Logic",
		"image":"./images/CountBoolStates.png",
		"description":"Tests the given Bool Variables and counts the ones that are true and false",
		"params": [
			{
				"name":"Bool Variables",
				"description":"The Bool variables to check."
			},
			{
				"name":"True Count",
				"description":"Store the true result in an Int variable."
			},
			{
				"name":"False Count",
				"description":"Store the false result in an Int variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enum Changed",
		"category":"Logic",
		"image":"./images/EnumChanged.png",
		"description":"Tests if the value of a Enum Variable has changed",
		"params": [
			{
				"name":"Enum Variable",
				"description":"The Enum variable to watch for changes."
			},
			{
				"name":"Wanted Enum Value",
				"description":"If wanted to check only for certain enum's state. If not given, we will look changes to whatever possible value."
			},
			{
				"name":"Changed Event",
				"description":"Event to send if the variable changes."
			},
			{
				"name":"Store Result",
				"description":"Set to True if changed."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Changed Tolerance",
		"category":"Logic",
		"image":"./images/FloatChangedTolerance.png",
		"description":"Tests if the value of a Float variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to watch for a change."
			},
			{
				"name":"Tolerance",
				"description":"The Float variable to watch for a change."
			},
			{
				"name":"Changed Event",
				"description":"Event to send if the float variable changes."
			},
			{
				"name":"Store Result",
				"description":"Set to True if the float variable changes."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Compare Range",
		"category":"Logic",
		"image":"./images/FloatCompareRange.png",
		"description":"Checks if a float variable is between one or multiple ranges and sends an event accordingly. Since the ranges go in order, you should define the smallest float first (even if negative).",
		"params": [
			{
				"name":"Float Value",
				"description":"The floatValue to compare with set ranges."
			},
			{
				"name":"Bigger Than",
				"description":"If the given int is bigger than this and smaller than the next range, send the event."
			},
			{
				"name":"Curr Event",
				"description":"The event to send if in this range."
			},
			{
				"name":"Smaller Than First",
				"description":"Send an event if the int is smaller than the first given range."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Compare With Bools",
		"category":"Logic",
		"image":"./images/FloatCompareWithBools.png",
		"description":"Sends Events based on the comparison of 2 Floats with bool storing options",
		"params": [
			{
				"name":"Float 1",
				"description":"The first float variable."
			},
			{
				"name":"Float 2",
				"description":"The second float variable."
			},
			{
				"name":"Tolerance",
				"description":"Tolerance for the Equal test (almost equal)."
			},
			{
				"name":"Equal",
				"description":"Event sent if Float 1 equals Float 2 (within Tolerance)"
			},
			{
				"name":"Store Result Equal",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Less Than",
				"description":"Event sent if Float 1 is less than Float 2"
			},
			{
				"name":"Store Result Less",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Greater Than",
				"description":"Event sent if Float 1 is greater than Float 2"
			},
			{
				"name":"Store Result Greater",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Equals",
		"category":"Logic",
		"image":"./images/FloatEquals.png",
		"description":"Sends Events based on the comparison of multiple Floats.",
		"params": [
			{
				"name":"Key Float",
				"description":"Main float to compare to"
			},
			{
				"name":"Floats",
				"description":"TODO"
			},
			{
				"name":"Description Area",
				"description":"TODO"
			},
			{
				"name":"Tolerance",
				"description":"Tolerance for the Equal test (almost equal). 0 =off (will use the advance tolerance instead) / 1+ =on "
			},
			{
				"name":"Tolerance Positive",
				"description":"Tolerance above(+) the main number."
			},
			{
				"name":"Tolerance Negative",
				"description":"Tolerance below(-) the main number."
			},
			{
				"name":"Is Equal",
				"description":"Set bool to true if all floats equal"
			},
			{
				"name":"Is Not Equal",
				"description":"Set bool to true if floats are not equal"
			},
			{
				"name":"Equal",
				"description":"Event sent if all floats equal"
			},
			{
				"name":"Not Equal",
				"description":"Event sent if floats are not equal"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Switch 2",
		"category":"Logic",
		"image":"./images/FloatSwitch2.png",
		"description":"Sends an Event based on the value of a Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to test."
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Bool Test",
		"category":"Logic",
		"image":"./images/FsmBoolTest.png",
		"description":"Sends Events based on the value of a Bool Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Is True",
				"description":"TODO"
			},
			{
				"name":"Is False",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Enum Switch",
		"category":"Logic",
		"image":"./images/FsmEnumSwitch.png",
		"description":"Sends an Event based on the value of an Enum Variable on a given Fsm.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Fsm"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"the name of the fsmEnum variable"
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Is Active In Hierarchy",
		"category":"Logic",
		"image":"./images/GameObjectIsActiveInHierarchy.png",
		"description":"Tests if a GameObject Variable is Active or not.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject variable to test."
			},
			{
				"name":"Is Active",
				"description":"Event to send if the GamObject is Active."
			},
			{
				"name":"Is Not Active",
				"description":"Event to send if the GamObject is NOT Active."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Debugging",
				"description":"Debug console warning if null object."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Compare Range",
		"category":"Logic",
		"image":"./images/IntCompareRange.png",
		"description":"Checks if an integer variable is between one or multiple ranges and sends an event accordingly. Since the ranges go in order, you should define the smallest int first (even if negative).",
		"params": [
			{
				"name":"Integer Value",
				"description":"The Integer to compare with set ranges."
			},
			{
				"name":"Bigger Than",
				"description":"If the given int is bigger than this and smaller than the next range, send the event."
			},
			{
				"name":"Curr Event",
				"description":"The event to send if in this range."
			},
			{
				"name":"Smaller Than First",
				"description":"Send an event if the int is smaller than the first given range."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Sign Test",
		"category":"Logic",
		"image":"./images/IntSignTest.png",
		"description":"Sends Events based on the sign of an Integer variable.",
		"params": [
			{
				"name":"Int Value",
				"description":"The int variable to test."
			},
			{
				"name":"Is Positive",
				"description":"Event to send if the int variable is positive."
			},
			{
				"name":"Is Negative",
				"description":"Event to send if the int variable is negative."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variable is changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Map Get Distance Geo Coordinates",
		"category":"Logic",
		"image":"./images/MapGetDistanceGeoCoordinates.png",
		"description":"Get distance between two sets of longitude/latitude",
		"params": [
			{
				"name":"Latitude From",
				"description":"TODO"
			},
			{
				"name":"Longitude From",
				"description":"TODO"
			},
			{
				"name":"Latitude To",
				"description":"TODO"
			},
			{
				"name":"Longitude To",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Unit Select",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Material Compare",
		"category":"Logic",
		"image":"./images/MaterialCompare.png",
		"description":"Compare 2 Material Variables and send events based on the result.",
		"params": [
			{
				"name":"Material Variable",
				"description":"TODO"
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Equal Event",
				"description":"Event to send if the 2 object values are equal."
			},
			{
				"name":"Not Equal Event",
				"description":"Event to send if the 2 object values are not equal."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Float If Between",
		"category":"Logic",
		"image":"./images/SetFloatIfBetween.png",
		"description":"Set float (and bool) values if it is between min or max floats.",
		"params": [
			{
				"name":"Current Float",
				"description":"The first float variable."
			},
			{
				"name":"Min Float",
				"description":"Min float variable."
			},
			{
				"name":"Max Float",
				"description":"Maxfloat variable."
			},
			{
				"name":"Set Float",
				"description":"TODO"
			},
			{
				"name":"Float Value Between",
				"description":"Set Float if between min and max"
			},
			{
				"name":"Value Less Than Min",
				"description":"Set Float if less than min float"
			},
			{
				"name":"Value Greater Than Max",
				"description":"Set Float if greater than max float"
			},
			{
				"name":"Is In Between",
				"description":"TODO"
			},
			{
				"name":"Is Less",
				"description":"TODO"
			},
			{
				"name":"Is Greater",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Int If Between",
		"category":"Logic",
		"image":"./images/SetIntIfBetween.png",
		"description":"Set int (and bool) values if int is between min or max.",
		"params": [
			{
				"name":"Current Int",
				"description":"The first int variable."
			},
			{
				"name":"Min Int",
				"description":"Min int variable."
			},
			{
				"name":"Max Int",
				"description":"Max int variable."
			},
			{
				"name":"Int Value Between",
				"description":"Set int if between min and max"
			},
			{
				"name":"Set Int",
				"description":"TODO"
			},
			{
				"name":"Is In Between",
				"description":"TODO"
			},
			{
				"name":"Is Less",
				"description":"TODO"
			},
			{
				"name":"Is Greater",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Compare Advanced",
		"category":"Logic",
		"image":"./images/StringCompareAdvanced.png",
		"description":"Compares 2 Strings and sends Events based on the result. This version has a few extra options.",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Equal Event",
				"description":"TODO"
			},
			{
				"name":"Not Equal Event",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"Store the true/false result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the strings are changing over time."
			},
			{
				"name":"Ignore Accents",
				"description":"Ignore accents in current culture, e.g. ø, å etc. "
			},
			{
				"name":"Ignore Case",
				"description":"Ignore case sensitivity"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Contains Fast",
		"category":"Logic",
		"image":"./images/StringContainsFast.png",
		"description":"Optimised tests if a String contains another String.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String variable to test."
			},
			{
				"name":"Contains String",
				"description":"Test if the String variable contains this string."
			},
			{
				"name":"True Event",
				"description":"Event to send if true."
			},
			{
				"name":"False Event",
				"description":"Event to send if false."
			},
			{
				"name":"Store Result",
				"description":"Store the true/false result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the strings are changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Get Index Of",
		"category":"String",
		"image":"./images/StringGetIndexOf.png",
		"description":"Finds a single char string from a string variable.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String variable to test."
			},
			{
				"name":"Contains String",
				"description":"Test if the String variable contains this string."
			},
			{
				"name":"Start Index",
				"description":"Index at which search will start. Leave to none or 0 to start search at begining of string. Other values may be used to help find multiple Char within a single string by updating the value each time the char is found, and runing the action again until no more are found."
			},
			{
				"name":"Count",
				"description":"Index at which search will start. Leave to none or 0 to start search at begining of string. Other values may be used to help find multiple Char within a single string by updating the value each time the char is found, and runing the action again until no more are found."
			},
			{
				"name":"String Comparision",
				"description":"Comparision setting for the search."
			},
			{
				"name":"Found",
				"description":"True if containsString was found in stringVariable"
			},
			{
				"name":"Index",
				"description":"Index at which the containsString was first found within the String. -1 means the ContainsString was not found in StringVariable."
			},
			{
				"name":"Found Event",
				"description":"Event fired if Char was found in String."
			},
			{
				"name":"Not Found Event",
				"description":"Event fired if Char was not found in String."
			},
			{
				"name":"Failure Event",
				"description":"Event fired if startSearchAt is below 0 or greater than the length of stringVariable or if containsString is empty"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Main Module Set Start Size",
		"category":"Particles",
		"image":"./images/MainModuleSetStartSize.png",
		"description":"Sets particleSystem main Module start size(s)",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Mode",
				"description":"TODO"
			},
			{
				"name":"Start Size",
				"description":"Start size"
			},
			{
				"name":"Min Start Size",
				"description":"Min start size. Leave to none for no effect"
			},
			{
				"name":"Max Start Size",
				"description":"Max start size. Leave to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Texture Watermark",
		"category":"Material",
		"image":"./images/AddTextureWatermark.png",
		"description":"Add watermark on image",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"Watermark",
				"description":"TODO"
			},
			{
				"name":"X Offset",
				"description":"TODO"
			},
			{
				"name":"Y Offset",
				"description":"TODO"
			},
			{
				"name":"New Texture",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Clear Texture",
		"category":"Material",
		"image":"./images/ClearTexture.png",
		"description":"Clear the texture",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Texture To Sprite",
		"category":"Material",
		"image":"./images/ConvertTextureToSprite.png",
		"description":"Convert a texture to sprite",
		"params": [
			{
				"name":"Texture",
				"description":"The texture to convert"
			},
			{
				"name":"Sprite",
				"description":"The sprite object"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Copy Material Properties",
		"category":"Material",
		"image":"./images/CopyMaterialProperties.png",
		"description":"Copy a material properties onto another.",
		"params": [
			{
				"name":"Source",
				"description":"TODO"
			},
			{
				"name":"Recipient",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create New Material",
		"category":"Material",
		"image":"./images/CreateNewMaterial.png",
		"description":"TODO",
		"params": [
			{
				"name":"Shader",
				"description":"The Name of the Shader to create the Material from"
			},
			{
				"name":"New Material",
				"description":"The newly created Material"
			},
			{
				"name":"Shader Not Found",
				"description":"Event sent if shader reference not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Dxt Compress Texture",
		"category":"Material",
		"image":"./images/DxtCompressTexture.png",
		"description":"Compress texture into DXT format. Use this to compress textures generated at runtime. Compressed textures use less graphics memory and are faster to render. After compression, texture will be in DXT1 format if the original texture had no alpha channel, and in DXT5 format if it had alpha channel.",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"High Quality",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material Color",
		"category":"Material",
		"image":"./images/GetMaterialColor.png",
		"description":"Gets a named color value from a game object's material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Named Color",
				"description":"The named color parameter in the shader."
			},
			{
				"name":"Color",
				"description":"Get the parameter value."
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material Float",
		"category":"Material",
		"image":"./images/GetMaterialFloat.png",
		"description":"Gets a named float value from a game object's material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Named Float",
				"description":"The named float parameter in the shader."
			},
			{
				"name":"Value",
				"description":"Get the parameter value."
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			},
			{
				"name":"Everyframe",
				"description":"executes every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material Name",
		"category":"Material",
		"image":"./images/GetMaterialName.png",
		"description":"Gets the name of game object's material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Trim Name",
				"description":"If the pointer to the material is an instance, the name will be appended with ' (instance)'. If True, this will be removed, else the name will be as is"
			},
			{
				"name":"Material Name",
				"description":"The name of the material."
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material Property Block Color",
		"category":"Material",
		"image":"./images/GetMaterialPropertyBlockColor.png",
		"description":"Gets a named color value in a game object's material PropertyBlock. ",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Property Name",
				"description":"A named color parameter in the shader. Must have [PerRendererData] attribute"
			},
			{
				"name":"Color",
				"description":"Get the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material Property Block Float",
		"category":"Material",
		"image":"./images/GetMaterialPropertyBlockFloat.png",
		"description":"Gets a named float value in a game object's material PropertyBlock. ",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Property Name",
				"description":"A named float parameter in the shader. Must have [PerRendererData] attribute"
			},
			{
				"name":"Float Value",
				"description":"Get the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material Property Block Texture",
		"category":"Material",
		"image":"./images/GetMaterialPropertyBlockTexture.png",
		"description":"Gets a named texture value in a game object's material PropertyBlock. ",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Property Name",
				"description":"A named float parameter in the shader. Must have [PerRendererData] attribute"
			},
			{
				"name":"Texture",
				"description":"Get the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Materials",
		"category":"Material",
		"image":"./images/GetMaterials.png",
		"description":"Gets all material of a GameObject with a Renderer component",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Materials",
				"description":"All materials on the GameObject's Renderer component"
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material Texture Scale",
		"category":"Material",
		"image":"./images/GetMaterialTextureScale.png",
		"description":"Gets the Scale of a named texture in a Game Object's Material. Useful for special effects.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Named Texture",
				"description":"The named texture parameter in the shader."
			},
			{
				"name":"Scale",
				"description":"The scale of the texture"
			},
			{
				"name":"Scale X",
				"description":"The scale x value of the texture"
			},
			{
				"name":"Scale Y",
				"description":"The scale y value of the texture"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Name From Material",
		"category":"Material",
		"image":"./images/GetNameFromMaterial.png",
		"description":"Gets the name of game object's material.",
		"params": [
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Trim Name",
				"description":"If the pointer to the material is an instance, the name will be appended with ' (instance)'. If True, this will be removed, else the name will be as is"
			},
			{
				"name":"Material Name",
				"description":"The name of the material."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Physic Material Properties",
		"category":"Material",
		"image":"./images/GetPhysicMaterialProperties.png",
		"description":"Gets the various properties of a Physics Material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to. Requires a Collider components"
			},
			{
				"name":"Physics Material",
				"description":"alternativly, can set directly, without a reference of the gameobject. Leave to null if targeting the gameobject"
			},
			{
				"name":"Dynamic Friction",
				"description":"Get the dynamicFriction value"
			},
			{
				"name":"Static Friction",
				"description":"Get the staticFriction value"
			},
			{
				"name":"Bounciness",
				"description":"Get the bounciness value"
			},
			{
				"name":"Friction Combine",
				"description":"Get the frictionCombine value"
			},
			{
				"name":"Bounce Combine",
				"description":"Get the bounceCombine value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Material Disable Keyword",
		"category":"Material",
		"image":"./images/MaterialDisableKeyword.png",
		"description":"Sets a disableKeyword property of a material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Keyword",
				"description":"keyword to disable."
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Material Enable Keyword",
		"category":"Material",
		"image":"./images/MaterialEnableKeyword.png",
		"description":"Sets a enableKeyword property of a material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Keyword",
				"description":"keyword to enable."
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Material Get Shader Keywords",
		"category":"Material",
		"image":"./images/MaterialGetShaderKeywords.png",
		"description":"Gets the shaderKeywords property of a material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Shader Keywords",
				"description":"shader keywords."
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Resize Texture",
		"category":"Material",
		"image":"./images/ResizeTexture.png",
		"description":"Resize the texture. Example: ratio of 0,5 would mean current texture devided by half",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"Ratio",
				"description":"Leave to 0 to change only the FilterMode"
			},
			{
				"name":"New Texture",
				"description":"TODO"
			},
			{
				"name":"Filter Mode",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Resize Texture 2",
		"category":"Material",
		"image":"./images/ResizeTexture2.png",
		"description":"Resize the texture with another method - Only works on ARGB32, RGB24 and Alpha8 textures that are marked readable",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"Set Width",
				"description":"TODO"
			},
			{
				"name":"Set Height",
				"description":"TODO"
			},
			{
				"name":"New Texture",
				"description":"TODO"
			},
			{
				"name":"Filter Mode",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Resize Texture Using Gpu",
		"category":"Material",
		"image":"./images/ResizeTextureUsingGpu.png",
		"description":"Resize the texture using GPU - WARNING: This script override the RTT Setup! (It sets a RTT!)",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"Set Width",
				"description":"TODO"
			},
			{
				"name":"Set Height",
				"description":"TODO"
			},
			{
				"name":"Filter Mode",
				"description":"TODO"
			},
			{
				"name":"New Texture",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rotate Texture",
		"category":"Material",
		"image":"./images/RotateTexture.png",
		"description":"Rotate the Fsm texture",
		"params": [
			{
				"name":"Texture Input",
				"description":"TODO"
			},
			{
				"name":"Angle",
				"description":"TODO"
			},
			{
				"name":"Texture Output",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Save Texture As Image",
		"category":"Material",
		"image":"./images/SaveTextureAsImage.png",
		"description":"Save Texture as png or jpg.",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"File Path",
				"description":"TODO"
			},
			{
				"name":"Use Mypictures",
				"description":"Use the default MyPictures Folder?"
			},
			{
				"name":"Use Default Folder",
				"description":"Use the default save Folder?"
			},
			{
				"name":"Filename",
				"description":"TODO"
			},
			{
				"name":"Use Jpg",
				"description":"TODO"
			},
			{
				"name":"Jpg Quality",
				"description":"Jpg Quality - 0 to 100"
			},
			{
				"name":"Debug On",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Color To Children",
		"category":"Material",
		"image":"./images/SetMaterialColorToChildren.png",
		"description":"Sets a named color value in a game object's  material and its children.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Material Index",
				"description":"TODO"
			},
			{
				"name":"Named Color",
				"description":"TODO"
			},
			{
				"name":"Color",
				"description":"TODO"
			},
			{
				"name":"Affect All Hierarchy",
				"description":"TODO"
			},
			{
				"name":"Revert On Exit",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Float To Children",
		"category":"Material",
		"image":"./images/SetMaterialFloatToChildren.png",
		"description":"Sets a named float value in a game object's  material and its children.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Material Index",
				"description":"TODO"
			},
			{
				"name":"Named Float",
				"description":"TODO"
			},
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Affect All Hierarchy",
				"description":"TODO"
			},
			{
				"name":"Revert On Exit",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material HDR Color",
		"category":"Material",
		"image":"./images/SetMaterialHDRColor.png",
		"description":"Sets a named HDR color value in a game object's material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Named Color",
				"description":"A named color parameter in the shader."
			},
			{
				"name":"Color",
				"description":"Set the parameter value."
			},
			{
				"name":"Brightness",
				"description":"Set the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Property Block Color",
		"category":"Material",
		"image":"./images/SetMaterialPropertyBlockColor.png",
		"description":"Sets a named color value in a game object's material PropertyBlock. ",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Property Name",
				"description":"A named color parameter in the shader. Must have [PerRendererData] attribute"
			},
			{
				"name":"Color",
				"description":"Set the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Property Block Float",
		"category":"Material",
		"image":"./images/SetMaterialPropertyBlockFloat.png",
		"description":"Sets a named float value in a game object's material PropertyBlock. ",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Property Name",
				"description":"A named float parameter in the shader. Must have [PerRendererData] attribute"
			},
			{
				"name":"Float Value",
				"description":"Set the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Property Block Texture",
		"category":"Material",
		"image":"./images/SetMaterialPropertyBlockTexture.png",
		"description":"Sets a named texture value in a game object's material PropertyBlock. ",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Property Name",
				"description":"A named float parameter in the shader. Must have [PerRendererData] attribute"
			},
			{
				"name":"Texture",
				"description":"Set the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Vector 4",
		"category":"Material",
		"image":"./images/SetMaterialVector4.png",
		"description":"Sets a named Vector4 in a game object's material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Named Vector 4",
				"description":"A named vector4 parameter in the shader."
			},
			{
				"name":"X Value",
				"description":"TODO"
			},
			{
				"name":"Y Value",
				"description":"TODO"
			},
			{
				"name":"Z Value",
				"description":"TODO"
			},
			{
				"name":"W Value",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Physic Material Properties",
		"category":"Material",
		"image":"./images/SetPhysicMaterialProperties.png",
		"description":"Sets the various properties of a Physics Material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to. Requires a Collider components"
			},
			{
				"name":"Physics Material",
				"description":"alternativly, can set directly, without a reference of the gameobject. Leave to null if targeting the gameobject"
			},
			{
				"name":"Dynamic Friction",
				"description":"Set the dynamicFriction value"
			},
			{
				"name":"Static Friction",
				"description":"Set the staticFriction value"
			},
			{
				"name":"Bounciness",
				"description":"Set the bounciness value"
			},
			{
				"name":"Friction Combine",
				"description":"Set the frictionCombine value"
			},
			{
				"name":"Bounce Combine",
				"description":"Set the bounceCombine value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Physics Material 2d Bounciness",
		"category":"Material",
		"image":"./images/SetPhysicsMaterial2dBounciness.png",
		"description":"Sets the bounciness value of a Physics Material 2d.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to. Requires a Collider2d components"
			},
			{
				"name":"Physics Material 2d",
				"description":"Alternativly, can set directly, without a reference of the gameobject. Leave to null if targeting the gameobject"
			},
			{
				"name":"Bounciness",
				"description":"Set the friction value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Physics Material 2d Friction",
		"category":"Material",
		"image":"./images/SetPhysicsMaterial2dFriction.png",
		"description":"Sets the friction value of a Physics Material 2d.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to. Requires a Collider2d components"
			},
			{
				"name":"Physics Material 2d",
				"description":"alternativly, can set directly, without a reference of the gameobject. Leave to null if targeting the gameobject"
			},
			{
				"name":"Friction",
				"description":"Set the friction value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Visibility 2",
		"category":"Material",
		"image":"./images/SetVisibility2.png",
		"description":"Sets or toggle the visibility on a game object. Can optionnaly reset on exit and recurse children visibility",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Toggle",
				"description":"Should the object visibility be toggled?\nHas priority over the 'visible' setting"
			},
			{
				"name":"Visible",
				"description":"Should the object be set to visible or invisible?"
			},
			{
				"name":"Reset On Exit",
				"description":"Resets to the initial visibility once\nit leaves the state"
			},
			{
				"name":"Recursive",
				"description":"Affects children if set to true"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Visibility By Tag",
		"category":"Material",
		"image":"./images/SetVisibilityByTag.png",
		"description":"Sets the visibility of GameObject's by (1) Tag then by (2) layer (if layer option is On). Note: This action sets the GameObject Renderer's enabled state or Sprite renderer enabled state.",
		"params": [
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Visible",
				"description":"Should the object visibility be On or Off?"
			},
			{
				"name":"Incl Collider",
				"description":"Should the object Collider be included?"
			},
			{
				"name":"Incl Children",
				"description":"Should the object Children be included?"
			},
			{
				"name":"Layer Filter On",
				"description":"Also filter by layer?"
			},
			{
				"name":"Incl Layer Filter On Child",
				"description":"Filter layer on child?"
			},
			{
				"name":"Layer",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Texture Crop",
		"category":"Material",
		"image":"./images/TextureCrop.png",
		"description":"Square crop Texture - NOTE: Read/Write has to be enabled if texture not created in-game",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"Crop Size",
				"description":"TODO"
			},
			{
				"name":"Offset X",
				"description":"TODO"
			},
			{
				"name":"Offset Y",
				"description":"TODO"
			},
			{
				"name":"New Texture",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Texture Get Height",
		"category":"Material",
		"image":"./images/TextureGetHeight.png",
		"description":"Get texture height",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"Get Height",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Texture Get Width",
		"category":"Material",
		"image":"./images/TextureGetWidth.png",
		"description":"Get texture width",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"Get Width",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Texture Size",
		"category":"Material",
		"image":"./images/TextureSize.png",
		"description":"Size of String (b, kb, mb, etc)",
		"params": [
			{
				"name":"Texture Variable",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Float Mb",
				"description":"Always in mb"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Abs Advanced",
		"category":"Math",
		"image":"./images/FloatAbsAdvanced.png",
		"description":"Sets a Float variable to its absolute value.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable."
			},
			{
				"name":"Multiplier",
				"description":"The multiplier. Set to -1 to force the abs result to be negative for example"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Average",
		"category":"Math",
		"image":"./images/FloatAverage.png",
		"description":"Gets the average of all listed float variables.",
		"params": [
			{
				"name":"Float Array",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Ceiling",
		"category":"Math",
		"image":"./images/FloatCeiling.png",
		"description":"Returns the smallest integer greater to or equal to f.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to process."
			},
			{
				"name":"Float Result",
				"description":"The float result."
			},
			{
				"name":"Int Result",
				"description":"The int result."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Clamp Advanced",
		"category":"Math",
		"image":"./images/FloatClampAdvanced.png",
		"description":"Clamps the value of Float Variable to a Min/Max. This advanced versrion let you choose between the different types of updates",
		"params": [
			{
				"name":"Float Variable",
				"description":"Float variable to clamp."
			},
			{
				"name":"Min Value",
				"description":"The minimum value."
			},
			{
				"name":"Max Value",
				"description":"The maximum value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Decimal Count",
		"category":"Math",
		"image":"./images/FloatDecimalCount.png",
		"description":"Count Float decimals into an Int",
		"params": [
			{
				"name":"Float Variable",
				"description":"TODO"
			},
			{
				"name":"Decimal Number Count",
				"description":"Count Result"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Evaluate On Curve",
		"category":"Math",
		"image":"./images/FloatEvaluateOnCurve.png",
		"description":"Evaluate a float using a curve. example: for a linear curve ranging from 0,0, to 1,1, evaluating 0.5f would return 0.5f as a result",
		"params": [
			{
				"name":"The Float",
				"description":"The Value"
			},
			{
				"name":"Anim Curve",
				"description":"The curve defining the mapping between the base and target ranges"
			},
			{
				"name":"Store Result",
				"description":"Store the result in this float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Floor",
		"category":"Math",
		"image":"./images/FloatFloor.png",
		"description":"Returns the largest integer smaller to or equal to f.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to process."
			},
			{
				"name":"Float Result",
				"description":"The float result."
			},
			{
				"name":"Int Result",
				"description":"The int result."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Follow",
		"category":"Math",
		"image":"./images/FloatFollow.png",
		"description":"Follow a float value and lerp if outside the defined margin. Typically use for camera movement to follow player when getting close to the screen sides",
		"params": [
			{
				"name":"Value",
				"description":"The value"
			},
			{
				"name":"Target",
				"description":"The target to follow"
			},
			{
				"name":"Margin",
				"description":"The margin to trigger lerping if distance between the target and value if greater than margin"
			},
			{
				"name":"Lerp Smoothing",
				"description":"The margin to trigger lerping if distance between the target and value if greater than margin"
			},
			{
				"name":"Result",
				"description":"The result"
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Get Percentage",
		"category":"Math",
		"image":"./images/FloatGetPercentage.png",
		"description":"Get the percentage from a float",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to get persentage from"
			},
			{
				"name":"Percentage",
				"description":"Percentage to get"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			},
			{
				"name":"Result",
				"description":"The percentage result"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Lerp",
		"category":"Math",
		"image":"./images/FloatLerp.png",
		"description":"Linearly interpolates between 2 floats. It has an option to lerp against deltaTime for the amount, allowing framerate indepedant animations.",
		"params": [
			{
				"name":"From Float",
				"description":"First Float"
			},
			{
				"name":"To Float",
				"description":"Second Float."
			},
			{
				"name":"Amount",
				"description":"Interpolate between FromFloat and ToFloat by this amount. Value is clamped to 0-1 range. 0 = FromFloat; 1 = ToFloat; 0.5 = half way in between."
			},
			{
				"name":"Lerp Against Delta Time",
				"description":"Amount is multiplied by the deltatime"
			},
			{
				"name":"Store Result",
				"description":"Store the result in this float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Lerp Advanced",
		"category":"Math",
		"image":"./images/FloatLerpAdvanced.png",
		"description":"Advanced interpolation between 2 floats.",
		"params": [
			{
				"name":"From Float",
				"description":"First Vector."
			},
			{
				"name":"To Float",
				"description":"Second Vector."
			},
			{
				"name":"Amount",
				"description":"Interpolate between From Vector and ToVector by this amount. Value is clamped to -1 1 range. interpolation can be choosen below"
			},
			{
				"name":"Interpolation",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"Store the result in this float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Low Pass Filter",
		"category":"Math",
		"image":"./images/FloatLowPassFilter.png",
		"description":"Use a low pass filter to reduce the influence of sudden changes in a float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"Variable to filter. Should generally come from some constantly updated input"
			},
			{
				"name":"Filtering Factor",
				"description":"Determines how much influence new changes have. E.g., 0.1 keeps 10 percent of the unfiltered vector and 90 percent of the previously filtered value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Modulo",
		"category":"Math",
		"image":"./images/FloatModulo.png",
		"description":"Find the modulo between two floats dividend % diviser.",
		"params": [
			{
				"name":"Dividend",
				"description":"TODO"
			},
			{
				"name":"Diviser",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Move Towards",
		"category":"Math",
		"image":"./images/FloatMoveTowards.png",
		"description":"Moves a value current towards target. This is essentially the same as Lerping but instead the function will ensure that the speed never exceeds maxDelta. Negative values of maxDelta pushes the value away from target.",
		"params": [
			{
				"name":"Float Variable",
				"description":"Float variable to move."
			},
			{
				"name":"Target Value",
				"description":"The target value to move towards."
			},
			{
				"name":"Max Delta",
				"description":"The maximum change that should be applied to the value."
			},
			{
				"name":"Time Based Max Delta",
				"description":"If true, maxDelta is multiplied by Time.DeltaTime for framerate independant animations"
			},
			{
				"name":"Finish Distance",
				"description":"Distance at which the move is considered finished, and the Finish Event is sent. Set to none for continous execution"
			},
			{
				"name":"Result",
				"description":"The resulting value"
			},
			{
				"name":"Remaining Distance",
				"description":"The remaining distance from the floatvariable to the targetValue"
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the Finish Distance is reached."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Move Towards Angle",
		"category":"Math",
		"image":"./images/FloatMoveTowardsAngle.png",
		"description":"Moves a value current towards target,and makes sure the values interpolate correctly when they wrap around 360 degrees.\n\nVariables current and target are assumed to be in degrees. For optimization reasons, negative values of maxDelta are not supported and may cause oscillation. To push current away from a target angle, add 180 to that angle instead.",
		"params": [
			{
				"name":"Angle Variable",
				"description":"Float Angle variable to move in degrees."
			},
			{
				"name":"Target Angle",
				"description":"The target value to move towards."
			},
			{
				"name":"Max Delta",
				"description":"The maximum change that should be applied to the value."
			},
			{
				"name":"Time Based Max Delta",
				"description":"If true, maxDelta is multiplied by Time.DeltaTime for framerate independant animations"
			},
			{
				"name":"Finish Distance",
				"description":"Distance at which the move is considered finished, and the Finish Event is sent. Set to none for continous execution"
			},
			{
				"name":"Result",
				"description":"The resulting value wrapped around 360°"
			},
			{
				"name":"Result In Radian",
				"description":"The resulting value in radian"
			},
			{
				"name":"Remaining Angle",
				"description":"The remaining distance from the floatvariable to the targetValue"
			},
			{
				"name":"Remaining Anglein Radian",
				"description":"The remaining distance from the floatvariable to the targetValue in Radian"
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the Finish Distance is reached."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Multiply Advanced",
		"category":"Math",
		"image":"./images/FloatMultiplyAdvanced.png",
		"description":"Multiplies one Float by another. This advanced version lets you choose betweent the different types of updates",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to multiply."
			},
			{
				"name":"Multiply By",
				"description":"Multiply the float variable by this value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Operator Advanced",
		"category":"Math",
		"image":"./images/FloatOperatorAdvanced.png",
		"description":"Performs math operations on 2 Floats: Add, Subtract, Multiply, Divide, Min, Max. This advanced version let you choose when to perform the action.",
		"params": [
			{
				"name":"Float 1",
				"description":"The first float."
			},
			{
				"name":"Float 2",
				"description":"The second float."
			},
			{
				"name":"Operation",
				"description":"The math operation to perform on the floats."
			},
			{
				"name":"Store Result",
				"description":"Store the result of the operation in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Remap",
		"category":"Math",
		"image":"./images/FloatRemap.png",
		"description":"Remap a float from one scale to the other. example: we have 2 existing between 1 and 3, remapping 2 between 0 and 10 would give 5",
		"params": [
			{
				"name":"The Float",
				"description":"The Valuae"
			},
			{
				"name":"Base Start",
				"description":"The base start reference"
			},
			{
				"name":"Base End",
				"description":"The base end reference"
			},
			{
				"name":"Target Start",
				"description":"The target start reference"
			},
			{
				"name":"Target End",
				"description":"The target end reference"
			},
			{
				"name":"Store Result",
				"description":"Store the result in this float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Remap With Curve",
		"category":"Math",
		"image":"./images/FloatRemapWithCurve.png",
		"description":"Remap a float from one scale to the other using a curve. example: for a linear curve we have 2 existing between 1 and 3, remapping 2 between 0 and 10 would give 5",
		"params": [
			{
				"name":"The Float",
				"description":"The Value"
			},
			{
				"name":"Base Start",
				"description":"The base start reference"
			},
			{
				"name":"Base End",
				"description":"The base end reference"
			},
			{
				"name":"Target Start",
				"description":"The target start reference"
			},
			{
				"name":"Target End",
				"description":"The target end reference"
			},
			{
				"name":"Anim Curve",
				"description":"The curve defining the mapping between the base and target ranges"
			},
			{
				"name":"Store Result",
				"description":"Store the result in this float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Repeat",
		"category":"Math",
		"image":"./images/FloatRepeat.png",
		"description":"Loops the value so that it's never larger than length and never smaller than 0.",
		"params": [
			{
				"name":"Float Variable",
				"description":"Float variable to repeat."
			},
			{
				"name":"Time Based",
				"description":"It True, FloatVariable is multiplied by Time.time for time based repetition"
			},
			{
				"name":"Length",
				"description":"The length value."
			},
			{
				"name":"Result",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Round",
		"category":"Math",
		"image":"./images/FloatRound.png",
		"description":"Sets a Float Variable to its round value. You can store the round value as a float or as an int",
		"params": [
			{
				"name":"Float Variable",
				"description":"TODO"
			},
			{
				"name":"Result As Int",
				"description":"TODO"
			},
			{
				"name":"Result As Float",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Round To Nearest",
		"category":"Math",
		"image":"./images/FloatRoundToNearest.png",
		"description":"Round a Float to the specified nearest value. Optional Int store value.",
		"params": [
			{
				"name":"Float Variable",
				"description":"TODO"
			},
			{
				"name":"Nearest",
				"description":"TODO"
			},
			{
				"name":"Result As Int",
				"description":"TODO"
			},
			{
				"name":"Result As Float",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Smooth Damp",
		"category":"Math",
		"image":"./images/FloatSmoothDamp.png",
		"description":"Gradually changes a value towards a desired goal over time. The value is smoothed by some spring-damper like function, which will never overshoot. The function can be used to smooth any kind of value, positions, colors, scalars.",
		"params": [
			{
				"name":"Current",
				"description":"start Float"
			},
			{
				"name":"Target",
				"description":"Target Float"
			},
			{
				"name":"Current Velocity",
				"description":"The current velocity, this value is modified by the function every time you call it."
			},
			{
				"name":"Smooth Time",
				"description":"Approximately the time it will take to reach the target. A smaller value will reach the target faster."
			},
			{
				"name":"Max Speed",
				"description":"Optionally allows you to clamp the maximum speed."
			},
			{
				"name":"Done",
				"description":"Event sent when current value is almost equal to the target value"
			},
			{
				"name":"Is Done",
				"description":"true when current value is almost equal to the target value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Smooth Damp Angle",
		"category":"Math",
		"image":"./images/FloatSmoothDampAngle.png",
		"description":"Gradually changes an angle (euler) towards a desired goal over time. The value is smoothed by some spring-damper like function, which will never overshoot. The function can be used to smooth any kind of value, positions, colors, scalars.",
		"params": [
			{
				"name":"Current",
				"description":"start Float"
			},
			{
				"name":"Target",
				"description":"Target Float"
			},
			{
				"name":"Current Velocity",
				"description":"The current velocity, this value is modified by the function every time you call it."
			},
			{
				"name":"Smooth Time",
				"description":"Approximately the time it will take to reach the target. A smaller value will reach the target faster."
			},
			{
				"name":"Max Speed",
				"description":"Optionally allows you to clamp the maximum speed."
			},
			{
				"name":"Done",
				"description":"Event sent when current value is almost equal to the target value"
			},
			{
				"name":"Is Done",
				"description":"true when current value is almost equal to the target value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Square Root",
		"category":"Math",
		"image":"./images/FloatSquareRoot.png",
		"description":"Get a Float Variable square root value",
		"params": [
			{
				"name":"Float Variable",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Float Add",
		"category":"Math",
		"image":"./images/FsmFloatAdd.png",
		"description":"Adds a value to a Float Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Add",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Per Second",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Bool Invert",
		"category":"Math",
		"image":"./images/GetBoolInvert.png",
		"description":"Flips the value of a Bool Variable and save it into another bool",
		"params": [
			{
				"name":"Bool Variable",
				"description":"Bool variable."
			},
			{
				"name":"Inverted Bool Variable",
				"description":"Store the invertion of boolVariable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Float Exponent",
		"category":"Math",
		"image":"./images/GetFloatExponent.png",
		"description":"Store a float exponent",
		"params": [
			{
				"name":"Power",
				"description":"The power float variable."
			},
			{
				"name":"Exponent",
				"description":"The exponent"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Float Sign",
		"category":"Math",
		"image":"./images/GetFloatSign.png",
		"description":"Store sign of a float as -1 or 1.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable."
			},
			{
				"name":"Sign",
				"description":"The sign as float. -1f or 1f"
			},
			{
				"name":"Sign As Int",
				"description":"The sign as int. -1 or 1"
			},
			{
				"name":"Sign As Bool",
				"description":"The sign as bool. False or True"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Floats Max",
		"category":"Math",
		"image":"./images/GetFloatsMax.png",
		"description":"Returns the maximum float from a list",
		"params": [
			{
				"name":"Floats",
				"description":"The float variables."
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Floats Min",
		"category":"Math",
		"image":"./images/GetFloatsMin.png",
		"description":"Returns the minimum float from a list",
		"params": [
			{
				"name":"Floats",
				"description":"The float variables."
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Nearest Power Of Two",
		"category":"Math",
		"image":"./images/GetNearestPowerOfTwo.png",
		"description":"Find nearest power of two for a given integer value",
		"params": [
			{
				"name":"Number",
				"description":"The value"
			},
			{
				"name":"Nearest Power Of Two",
				"description":"The nearest power of two for that value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat everyFrame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Random Int",
		"category":"Math",
		"image":"./images/GetNextRandomInt.png",
		"description":"Each time this action is called it gets a random int from a pool, which means always unique results, you will end up with no duplicated ints.\nso if you want a series within a range of 5, you might get first 3, the next iteration will pick a random number in 1 2 4 5, because 3 is out already.",
		"params": [
			{
				"name":"Int Pool Count",
				"description":"Defines the int pool range to pick from at random. Starts at 1"
			},
			{
				"name":"Int Serie Count",
				"description":"Defines How many picks to do within the int pool, before the action is finished looping"
			},
			{
				"name":"Store Next Int",
				"description":"Store the next int from the series."
			},
			{
				"name":"Reset",
				"description":"Set to true to force iterating from the first item. This variable will be set to false as it carries on iterating, force it back to true if you want to renter this action back to the first item."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more children."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Percentage Int",
		"category":"Math",
		"image":"./images/GetPercentageInt.png",
		"description":"Returns the percentage of a base Integer and the current value by dividing the value by the base and multiplying it by 100.",
		"params": [
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Base",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Point In Curve",
		"category":"Math",
		"image":"./images/GetPointInCurve.png",
		"description":"Get a point within the curve(from the horizontal axis in the curve graph). Or get a random point in curve",
		"params": [
			{
				"name":"Anim Curve",
				"description":"The curve to use."
			},
			{
				"name":"Curve Point",
				"description":"Get a point in curve"
			},
			{
				"name":"Use Time",
				"description":"Get a point using time - time since start of scene"
			},
			{
				"name":"Use Time Minutes",
				"description":"TODO"
			},
			{
				"name":"Get Random Value",
				"description":"Get random if curve is 0 -> 1"
			},
			{
				"name":"Get Random Normal",
				"description":"Get random Auto"
			},
			{
				"name":"Get Random Advance",
				"description":"Get random with a set Min/Max"
			},
			{
				"name":"Set Min",
				"description":"TODO"
			},
			{
				"name":"Set Max",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Unsigned Float",
		"category":"Math",
		"image":"./images/GetUnsignedFloat.png",
		"description":"Returns the absolute value of an Float variable and optionally sets it to that.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable."
			},
			{
				"name":"Result",
				"description":"The unsigned Float."
			},
			{
				"name":"Apply To Original",
				"description":"Apply the unsigned value to the float."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Float variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Unsigned Int",
		"category":"Math",
		"image":"./images/GetUnsignedInt.png",
		"description":"Returns the absolute value of an Int variable and optionally sets it to that.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The Int variable."
			},
			{
				"name":"Result",
				"description":"The unsigned Int."
			},
			{
				"name":"Apply To Original",
				"description":"Apply the unsigned value to the int."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Int variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Add Multiple",
		"category":"Math",
		"image":"./images/IntAddMultiple.png",
		"description":"Adds multipe int variables to int variable.",
		"params": [
			{
				"name":"Int Variables",
				"description":"The float variables to add."
			},
			{
				"name":"Add To",
				"description":"Add to this variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Average",
		"category":"Math",
		"image":"./images/IntAverage.png",
		"description":"Gets the average of all listed int variables.",
		"params": [
			{
				"name":"Int Array",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Compare 2",
		"category":"Math",
		"image":"./images/IntCompare2.png",
		"description":"Performs comparision on 2 Integers: ==, >,<,>=,<=,half,twice,opposite, OppositeSign. Allow the result to be saved in a FsmBool, and can send events.",
		"params": [
			{
				"name":"Integer 1",
				"description":"The first integer to compare"
			},
			{
				"name":"Integer 2",
				"description":"The second integer to compare"
			},
			{
				"name":"Operation",
				"description":"The comparison method"
			},
			{
				"name":"Result",
				"description":"The comparison result"
			},
			{
				"name":"Comparison Pass Event",
				"description":"Event sent if comparison is true"
			},
			{
				"name":"Comparison Fail Event",
				"description":"Event sent if comparison is false"
			},
			{
				"name":"Every Frame",
				"description":"Performs comparison everyframe, usefull when value is changing"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Equals",
		"category":"Logic",
		"image":"./images/IntEquals.png",
		"description":"Sends Events based on the comparison of multiple Integers.",
		"params": [
			{
				"name":"Integers",
				"description":"TODO"
			},
			{
				"name":"Equal",
				"description":"Event sent if all ints equal"
			},
			{
				"name":"Not Equal",
				"description":"Event sent if ints not equal"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Flip",
		"category":"Math",
		"image":"./images/IntFlip.png",
		"description":"Inverts the sign of an int variable. If the given int is positive, it gets flipped and becomes negative and vice versa.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The int variable to divide."
			},
			{
				"name":"Result",
				"description":"The flipped result."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every Frame. Useful if the variables are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Interpolate",
		"category":"Math",
		"image":"./images/IntInterpolate.png",
		"description":"Interpolates between 2 Int values over a specified Time.",
		"params": [
			{
				"name":"Mode",
				"description":"Interpolation mode: Linear or EaseInOut."
			},
			{
				"name":"From Int",
				"description":"Interpolate from this value."
			},
			{
				"name":"To Int",
				"description":"Interpolate to this value."
			},
			{
				"name":"Time",
				"description":"Interpolate over this amount of time in seconds."
			},
			{
				"name":"Store Result",
				"description":"Store the current value in an Int variable."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the interpolation is finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused (Time scaled to 0)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Modulo",
		"category":"Math",
		"image":"./images/IntModulo.png",
		"description":"Find the modulo between two ints dividend % diviser.",
		"params": [
			{
				"name":"Dividend",
				"description":"TODO"
			},
			{
				"name":"Diviser",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Result As Int",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Odd Even Test",
		"category":"Math",
		"image":"./images/IntOddEvenTest.png",
		"description":"Return if a given Int is odd or even. Store result in boolean variable and/or send events.",
		"params": [
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Is Odd",
				"description":"TODO"
			},
			{
				"name":"Is Even",
				"description":"TODO"
			},
			{
				"name":"Is Odd Event",
				"description":"TODO"
			},
			{
				"name":"Is Even Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Remap",
		"category":"Math",
		"image":"./images/IntRemap.png",
		"description":"Remap a Int from one scale to the other. example: we have 2 existing between 1 and 3, remapping 2 between 0 and 10 would give 5",
		"params": [
			{
				"name":"The Int",
				"description":"The Value"
			},
			{
				"name":"Base Start",
				"description":"The base start reference"
			},
			{
				"name":"Base End",
				"description":"The base end reference"
			},
			{
				"name":"Target Start",
				"description":"The target start reference"
			},
			{
				"name":"Target End",
				"description":"The target end reference"
			},
			{
				"name":"Store Result",
				"description":"Store the result in this Int variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Round To Nearest",
		"category":"Math",
		"image":"./images/IntRoundToNearest.png",
		"description":"Rounds an Int Variable to the specified base up or down. If the given Int is 36 and the Base is 10, then the result is 40. Useful for HealthManager or consticted Slider.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The Variable that should be rounded."
			},
			{
				"name":"Base Value",
				"description":"The Base Value to round from."
			},
			{
				"name":"Result",
				"description":"The rounded int."
			},
			{
				"name":"Every Frame",
				"description":"If it should repeat every frame. (Only useful if the Int Variable changes over time)"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Subtract",
		"category":"Math",
		"image":"./images/IntSubtract.png",
		"description":"Subtracts a value to an Integer Variable.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The int variable to subtract from."
			},
			{
				"name":"Subtract",
				"description":"Value to subtract from the int variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			},
			{
				"name":"Per Second",
				"description":"Used with Every Frame. Subtracts the value over one second to make the operation frame rate independent."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Inverse Float",
		"category":"Math",
		"image":"./images/InverseFloat.png",
		"description":"Inverts a float variable. For example '20.5' becomes '-20.5'",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to inverse."
			},
			{
				"name":"Store Float",
				"description":"Where to store the result."
			},
			{
				"name":"Base Value",
				"description":"Set a base value, so as to offset growth."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Lerp Angle",
		"category":"Math",
		"image":"./images/LerpAngle.png",
		"description":"Allows lerp of angle value without problems when exceeding 360 degrees",
		"params": [
			{
				"name":"From Angle",
				"description":"From Angle"
			},
			{
				"name":"To Angle",
				"description":"To Angle"
			},
			{
				"name":"Amount",
				"description":"Interpolate between FromFloat and ToFloat by this amount. Value is clamped to 0-1 range. 0 = FromFloat; 1 = ToFloat; 0.5 = half way in between."
			},
			{
				"name":"Lerped Angle",
				"description":"Store the result in this float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Array Vector3 Seed",
		"category":"Math",
		"image":"./images/RandomArrayVector3Seed.png",
		"description":"Sets a Float Variable to a random value between Min/Max.",
		"params": [
			{
				"name":"Maxindex",
				"description":"TODO"
			},
			{
				"name":"Seed",
				"description":"TODO"
			},
			{
				"name":"Min",
				"description":"TODO"
			},
			{
				"name":"Max",
				"description":"TODO"
			},
			{
				"name":"Vector 3 Result",
				"description":"TODO"
			},
			{
				"name":"Array Result",
				"description":"The Array Variable to use."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Float Seed",
		"category":"Math",
		"image":"./images/RandomFloatSeed.png",
		"description":"Sets a Float Variable to a random value between Min/Max.",
		"params": [
			{
				"name":"Seed",
				"description":"TODO"
			},
			{
				"name":"Min",
				"description":"TODO"
			},
			{
				"name":"Max",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Int No Repeat",
		"category":"Math",
		"image":"./images/RandomIntNoRepeat.png",
		"description":"Sets an Integer Variable to a random value between Min/Max.",
		"params": [
			{
				"name":"Min",
				"description":"TODO"
			},
			{
				"name":"Max",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Inclusive Max",
				"description":"Should the Max value be included in the possible results?"
			},
			{
				"name":"No Repeat",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Int Seed",
		"category":"Math",
		"image":"./images/RandomIntSeed.png",
		"description":"Sets a Float Variable to a random value between Min/Max.",
		"params": [
			{
				"name":"Seed",
				"description":"TODO"
			},
			{
				"name":"Min",
				"description":"TODO"
			},
			{
				"name":"Max",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Vector3 Seed",
		"category":"Math",
		"image":"./images/RandomVector3Seed.png",
		"description":"Sets a Float Variable to a random value between Min/Max.",
		"params": [
			{
				"name":"Seed",
				"description":"TODO"
			},
			{
				"name":"Min",
				"description":"TODO"
			},
			{
				"name":"Max",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Weighted Bool",
		"category":"Math",
		"image":"./images/RandomWeightedBool.png",
		"description":"Sets a Bool Variable to True or False randomly.",
		"params": [
			{
				"name":"Weights",
				"description":"The higher the value, the more the chance to have a true value as result"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Weighted Int",
		"category":"Math",
		"image":"./images/RandomWeightedInt.png",
		"description":"Pick a random weighted Int picked from an array of Ints.",
		"params": [
			{
				"name":"Ints",
				"description":"TODO"
			},
			{
				"name":"Weights",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Repeat",
				"description":"Can hit the same number twice in a row"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Bool Value",
		"category":"Math",
		"image":"./images/SetMultiBoolValue.png",
		"description":"Sets the value of many Bool Variable.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Float Value",
		"category":"Math",
		"image":"./images/SetMultiFloatValue.png",
		"description":"Sets the value of many Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Int Value",
		"category":"Math",
		"image":"./images/SetMultiIntValue.png",
		"description":"Sets the value of many Int Variable.",
		"params": [
			{
				"name":"Int Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Text Mech",
		"category":"Mesh",
		"image":"./images/SetTextMech.png",
		"description":"Sets the Text Mech attached to a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Text",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Wave Mesh Fx",
		"category":"Mesh",
		"image":"./images/WaveMeshFx.png",
		"description":"Create a wave effect on a mesh",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Wave Source",
				"description":"TODO"
			},
			{
				"name":"Freq",
				"description":"TODO"
			},
			{
				"name":"Amp",
				"description":"TODO"
			},
			{
				"name":"Wave Length",
				"description":"TODO"
			},
			{
				"name":"Force Quit",
				"description":"TODO"
			},
			{
				"name":"Failure Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Local Axis Aligned Bounding Box",
		"category":"Input",
		"image":"./images/LocalAxisAlignedBoundingBox.png",
		"description":"Gets the Bounds of a Target Mesh using a local Transform. Typically, this allows you to know the Bounding size in arbitrary directions.",
		"params": [
			{
				"name":"Axis",
				"description":"The transform to represent the bounds"
			},
			{
				"name":"Mesh Target",
				"description":"The Mesh to use to compute bounds from"
			},
			{
				"name":"Bounds Size",
				"description":"Store the result in a Vector3 variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Typically this would be set to True."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Offset UV",
		"category":"Meshes",
		"image":"./images/OffsetUV.png",
		"description":"Offset Mesh UV",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Affect Shared Mesh",
				"description":"TODO"
			},
			{
				"name":"Offset",
				"description":"TODO"
			},
			{
				"name":"Offset X",
				"description":"TODO"
			},
			{
				"name":"Offset Y",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Mesh",
		"category":"Meshes",
		"image":"./images/SetMesh.png",
		"description":"Sets the Mesh attached to a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Mesh Object",
				"description":"Place the Spline Computer Object here"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set UV Filtered",
		"category":"Meshes",
		"image":"./images/SetUVFiltered.png",
		"description":"Set UV values, only for uv's matching the base value. If all Base properties are set to none, all UV's are set.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Affect Shared Mesh",
				"description":"TODO"
			},
			{
				"name":"Base UV",
				"description":"TODO"
			},
			{
				"name":"Base U",
				"description":"TODO"
			},
			{
				"name":"Base V",
				"description":"TODO"
			},
			{
				"name":"Target UV",
				"description":"TODO"
			},
			{
				"name":"Target U",
				"description":"TODO"
			},
			{
				"name":"Target V",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Microphone Get Device Input Level",
		"category":"Audio",
		"image":"./images/MicrophoneGetDeviceInputLevel.png",
		"description":"Get a microphone device current input volume level",
		"params": [
			{
				"name":"Device Name",
				"description":"The name of the device. Passing null or an empty string will pick the default device. Get device names using the action MicrophoneGetDeviceById for example"
			},
			{
				"name":"Audio Clip",
				"description":"The audio clip where the record is saved."
			},
			{
				"name":"Level",
				"description":"The Device input volume level"
			},
			{
				"name":"Max Level",
				"description":"TODO"
			},
			{
				"name":"Multiplier",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Microphone Is Device Recording",
		"category":"Audio",
		"image":"./images/MicrophoneIsDeviceRecording.png",
		"description":"Check if a microphone device is currently recording",
		"params": [
			{
				"name":"Device Name",
				"description":"The name of the device. Passing null or an empty string will pick the default device. Get device names using the action MicrophoneGetDeviceById for example"
			},
			{
				"name":"Is Recording",
				"description":"Is the device recording or not?"
			},
			{
				"name":"Device Is Recording Event",
				"description":"Event sent when the device is recording. "
			},
			{
				"name":"Device Is Not Recording Event",
				"description":"Event sent when the device is not recording."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Microphone Start Recording",
		"category":"Audio",
		"image":"./images/MicrophoneStartRecording.png",
		"description":"Start Recording sound from a microphone device",
		"params": [
			{
				"name":"Audio Source",
				"description":"The audio source where the created audioClip will be stored."
			},
			{
				"name":"Device Name",
				"description":"The name of the device. Passing null or an empty string will pick the default device. Get device names using the action MicrophoneGetDeviceById for example"
			},
			{
				"name":"Loop",
				"description":"indicates whether the recording should continue recording if lengthSec is reached, and wrap around and record from the beginning of the AudioClip."
			},
			{
				"name":"Record Duration",
				"description":"TODO"
			},
			{
				"name":"Frequency",
				"description":"TODO"
			},
			{
				"name":"Audio Clip",
				"description":"The audio clip where the record is saved."
			},
			{
				"name":"Record Started Event",
				"description":"Event sent when the device effectivly start recording. WARNING, if Loop is on, event will not be fired"
			},
			{
				"name":"Record Done Event",
				"description":"Event sent at the end of the record duration. WARNING, if Loop is on, event will not be ignored"
			},
			{
				"name":"Record Failed Event",
				"description":"Event sent when the record failed"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Microphone Stop Recording",
		"category":"Audio",
		"image":"./images/MicrophoneStopRecording.png",
		"description":"Stop Recording sound from a microphone device",
		"params": [
			{
				"name":"Device Name",
				"description":"The name of the device. Passing null or an empty string will pick the default device. Get device names using the action MicrophoneGetDeviceById for example"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Check For Game Controllers",
		"category":"InputDevice",
		"image":"./images/CheckForGameControllers.png",
		"description":"Sends Events based on the Connection status of Mobile Game Controller. Currently Only works on IOS devices, but potentially works on all future supported devices",
		"params": [
			{
				"name":"Is Connected",
				"description":"The connection status."
			},
			{
				"name":"Raw Joystick Name",
				"description":"The raw joystick name."
			},
			{
				"name":"Vendor Name",
				"description":"The joystick vendorName."
			},
			{
				"name":"Number",
				"description":"The joystick number."
			},
			{
				"name":"Profile",
				"description":"The profile type of the connected game controller. 'Basic' or 'Extended' "
			},
			{
				"name":"Is Extended",
				"description":"True if the profile is Extended, false if Basic"
			},
			{
				"name":"Connection",
				"description":"The connection type of the connected game controller. 'wired' or 'wireless' "
			},
			{
				"name":"Is Wireless",
				"description":"True if the profile is wireless, false if wired"
			},
			{
				"name":"Is Connected Event",
				"description":"Event to send if a game controller is detected."
			},
			{
				"name":"Is Disconnected Event",
				"description":"Event to send if the connected game controller is lost."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active. If false, will fire the current state, if true, will fire when the status changes based on the status this action started with"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse 3d Plane Drag",
		"category":"Movement",
		"image":"./images/mouse3dPlaneDrag.png",
		"description":"drag around on a 3d plane.",
		"params": [
			{
				"name":"Camera",
				"description":"The camera, leave empty if you want to use the camera this fsm is attached to or if you want to use the main camera"
			},
			{
				"name":"Ground Point",
				"description":"The ground position"
			},
			{
				"name":"Ground Normal",
				"description":"The ground normal"
			},
			{
				"name":"Screen Point",
				"description":"The screen point"
			},
			{
				"name":"World Point Result",
				"description":"The resulting world point"
			},
			{
				"name":"Delta Drag Result",
				"description":"The resulting drag in world space"
			},
			{
				"name":"Delta Position Result",
				"description":"The resulting delta movement in world space"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Closest Agent",
		"category":"NavMeshAgent",
		"image":"./images/FindClosestAgent.png",
		"description":"Get the closest agent to the specified one.",
		"params": [
			{
				"name":"Agent",
				"description":"The GameObject containing the NavMeshAgent component to get the closest agent of."
			},
			{
				"name":"With Tag",
				"description":"Only consider objects with this Tag."
			},
			{
				"name":"Ignore Tag",
				"description":"Only consider objects without this Tag."
			},
			{
				"name":"Must Be Visible",
				"description":"Only consider objects visible to the camera."
			},
			{
				"name":"Closest Agent",
				"description":"Returns the closest GameObject with an NavMeshAgent component."
			},
			{
				"name":"Store Distance",
				"description":"Store the distance to the closest agent."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Nav Mesh Agent Get Area Mask",
		"category":"NavMeshAgent",
		"image":"./images/NavMeshAgentGetAreaMask.png",
		"description":"Get the area mask the given NavMeshAgent is on. Optionally send an event if the area mask has changed.",
		"params": [
			{
				"name":"Agent",
				"description":"The GameObject with the NavMeshAgent component attached."
			},
			{
				"name":"Area Mask",
				"description":"TODO"
			},
			{
				"name":"Has Changed Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run this action on every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Nav Mesh Agent Move To",
		"category":"NavMeshAgent",
		"image":"./images/NavMeshAgentMoveTo.png",
		"description":"Sets the destination of the given NavMesh Agent to an object or position (only updates when the target has moved).",
		"params": [
			{
				"name":"Agent",
				"description":"The GameObject with the Agent component attached."
			},
			{
				"name":"Target",
				"description":"Set the GameObject to move to."
			},
			{
				"name":"Target Position",
				"description":"Alternatively define the position where the agent is supposed to move to directly."
			},
			{
				"name":"Space",
				"description":"Wheter the given position is in local or world space."
			},
			{
				"name":"Reached Target Event",
				"description":"Send an event when the NavMesh Agent has reached the target (dependent on slider below). Only works when 'Every Frame' is selected."
			},
			{
				"name":"Offset From Target",
				"description":"Determines the distance to the target in % from where the event should be sent (0 = at target, 100 = at start)."
			},
			{
				"name":"Stop Agent On Exit",
				"description":"Wheter the agent should stop where it's currently at when leaving this state or still keep going."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Nav Mesh Find Closest Point",
		"category":"NavMeshAgent",
		"image":"./images/NavMeshFindClosestPoint.png",
		"description":"Searches for the closest point on any NavMesh from the given position. Useful to lead/teleport an Agent to a point of interest or clicked position, independent of where the agent is currently at.",
		"params": [
			{
				"name":"Source",
				"description":"From what GameObject should the closest NavMesh point be searched."
			},
			{
				"name":"Source Position",
				"description":"Alternatively set the source as a Vector3. If set, 'Source' gets ignored."
			},
			{
				"name":"Max Distance",
				"description":"Define the max distance from the source to search for a NavMesh. A big search radius can get quite expensive; a good starting point would be twice the Agent's height."
			},
			{
				"name":"Space",
				"description":"Wheter the source position and possible outcome is seen as being in world or local space."
			},
			{
				"name":"Nearest Point",
				"description":"The closest NavMesh point from the source, if found."
			},
			{
				"name":"Succeeded",
				"description":"Event to send when a nearest point was found."
			},
			{
				"name":"Failed",
				"description":"Event that gets fired when there was no NavMesh to be found. Increase the Max Distance to see, if it can find it, unless this is the desired result."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Agent Action",
		"category":"NavMeshAgent",
		"image":"./images/EnableAgentAction.png",
		"description":"Enables/Disables Navmesh agent component. ",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Enable",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Nav Mesh Component Enabled",
		"category":"NavMeshAgent",
		"image":"./images/IsNavMeshComponentEnabled.png",
		"description":"Checks to see if Navmesh agent component is enabled. ",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Enabled",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Noise Module Set Damping",
		"category":"Shuriken/NoiseModule",
		"image":"./images/NoiseModuleSetDamping.png",
		"description":"Set the enabled flag of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Enabled",
				"description":"The enabled flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Noise Module Set Enabled",
		"category":"Shuriken/NoiseModule",
		"image":"./images/NoiseModuleSetEnabled.png",
		"description":"Set the enabled flag of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Enabled",
				"description":"The enabled flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Noise Module Set Frequency",
		"category":"Shuriken/NoiseModule",
		"image":"./images/NoiseModuleSetFrequency.png",
		"description":"Set Strength of a particleSystem's NoiseModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Frequency",
				"description":"The noise Strength"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Noise Module Set Octaves",
		"category":"Shuriken/NoiseModule",
		"image":"./images/NoiseModuleSetOctaves.png",
		"description":"Set Strength of a particleSystem's NoiseModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Octaves",
				"description":"The noise Strength"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Noise Module Set Scroll Speed",
		"category":"Shuriken/NoiseModule",
		"image":"./images/NoiseModuleSetScrollSpeed.png",
		"description":"Set Strength of a particleSystem's NoiseModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Scroll Speed",
				"description":"The noise Strength"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Noise Module Set Strength",
		"category":"Shuriken/NoiseModule",
		"image":"./images/NoiseModuleSetStrength.png",
		"description":"Set Strength of a particleSystem's NoiseModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Strength",
				"description":"The noise Strength"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Particle System Emit",
		"category":"particles",
		"image":"./images/ParticleSystemEmit.png",
		"description":"Emits a given number of particle from a Particles System. NOTE: You need to set the emit of this particle system to 0 at the editor, so it will not emit at all during play-mode by itself",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem to play."
			},
			{
				"name":"Count Particules",
				"description":"Emit that much particles"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frames"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Particle System Is Alive",
		"category":"Particles",
		"image":"./images/particleSystemIsAlive.png",
		"description":"Is my Particle Emitter on or off?",
		"params": [
			{
				"name":"Game Object",
				"description":"The particle system component owner."
			},
			{
				"name":"Is Alive",
				"description":"Set to True when turned on and False when turned off."
			},
			{
				"name":"Get Duration",
				"description":"How long is the particle duration?"
			},
			{
				"name":"True Event",
				"description":"TODO"
			},
			{
				"name":"False Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Will disable itself if events are used"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Particle System Is Alive Bridge",
		"category":"Particles",
		"image":"./images/particleSystemIsAliveBridge.png",
		"description":"Are all my Particle System on/playing?",
		"params": [
			{
				"name":"Is Playing",
				"description":"TODO"
			},
			{
				"name":"Is Stopped",
				"description":"TODO"
			},
			{
				"name":"Is Playing Event",
				"description":"TODO"
			},
			{
				"name":"Is Stopped Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Will disable itself if both events are used"
			},
			{
				"name":"Optimization",
				"description":"Set everyframe to every 15 frames - needed for when many particles are in scene"
			},
			{
				"name":"Late Update",
				"description":"Perform the method in LateUpdate"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Particle System Multi Is Alive",
		"category":"Particles",
		"image":"./images/particleSystemMultiIsAlive.png",
		"description":"Are my Particle Emitters on or off?",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Is Alive",
				"description":"Set to True when turned on and False when turned off."
			},
			{
				"name":"All True Event",
				"description":"TODO"
			},
			{
				"name":"All False Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Will disable itself if events are used"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Particle System Rewind",
		"category":"Particles",
		"image":"./images/particleSystemRewind.png",
		"description":"Rewind particle. Note: For smooth rewind do not use particles option 'Play on awake' or 'Loop'",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Rewind By",
				"description":"Set rewind time. 0 = rewind then restart. !!!Cannot change when active"
			},
			{
				"name":"Incl Children",
				"description":"TODO"
			},
			{
				"name":"Play Particle",
				"description":"TODO"
			},
			{
				"name":"Rewind",
				"description":"Rewind enable/disable"
			},
			{
				"name":"Speed",
				"description":"Set rewind Speed. You can change Float while rewinding for effect."
			},
			{
				"name":"Exit Clear",
				"description":"TODO"
			},
			{
				"name":"Reset On Exit",
				"description":"TODO"
			},
			{
				"name":"Exit",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Particle System Speed",
		"category":"Particles",
		"image":"./images/particleSystemSpeed.png",
		"description":"Control particle(s) speed",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Speed",
				"description":"Set Speed. Cannot be below 0"
			},
			{
				"name":"Every Frame",
				"description":"Will disable itself if events are used"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Closest Game Object In Sight",
		"category":"Array",
		"image":"./images/ArrayGetClosestGameObjectInSight.png",
		"description":"Return the closest GameObject within an array from a transform or position which does not have a 2d or 3d collider between itself and another GameObject",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Distance From",
				"description":"Compare the distance of the items in the list to the position of this gameObject"
			},
			{
				"name":"Or Distance From Vector 3",
				"description":"If DistanceFrom declared, use OrDistanceFromVector3 as an offset"
			},
			{
				"name":"Use Physics 2d",
				"description":"If true uses 2d physics colliders, else 3d physics colliders"
			},
			{
				"name":"Everyframe",
				"description":"TODO"
			},
			{
				"name":"From Game Object",
				"description":"The line start of the sweep."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Closest Game Object",
				"description":"TODO"
			},
			{
				"name":"Closest Index",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Circle Cast 2d",
		"category":"Physics2D",
		"image":"./images/CircleCast2d.png",
		"description":"TODO",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector2 world position or as an offset of the FromGameObject if space is Self. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector2 direction vector, if space is self, direction is based on FromGameObject reference"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space, position and direction are affected. Note if no Game Object is specified, the position and  direction is in world space."
			},
			{
				"name":"Radius",
				"description":"Radius of the circle being cast."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. leave to none for no effect"
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. leave to none"
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the 2d position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the 2d normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Fraction",
				"description":"Get the fraction along the ray to the hit point and store it in a variable. If the ray's direction vector is normalised then this value is simply the distance between the origin and the hit point. If the direction is not normalised then this distance is expressed as a 'fraction' (which could be greater than 1) of the vector's magnitude."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Collider 2D",
		"category":"Physics 2d",
		"image":"./images/EnableCollider2D.png",
		"description":"Enables/Disables a 2D Collider(or a Rigidbody) in a single GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Collider."
			},
			{
				"name":"Component",
				"description":"Optionally drag a 2D Collider directly into this field (Script name will be ignored)."
			},
			{
				"name":"Collider Select",
				"description":"TODO"
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Incl Children",
				"description":"Should the object Children be included?"
			},
			{
				"name":"All Collider",
				"description":"Set to True to enable/disable all 2D Collider in gameobject."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Collider 2D By Tag",
		"category":"Physics2D",
		"image":"./images/EnableCollider2DByTag.png",
		"description":"Enables/Disables a Collider2D(or a Rigidbody) by Tag (and Layer).",
		"params": [
			{
				"name":"Collider Select",
				"description":"TODO"
			},
			{
				"name":"All Collider 2D",
				"description":"Set to True to enable/disable all Collider2D."
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Incl Children",
				"description":"Should the object Children be included?"
			},
			{
				"name":"Tag",
				"description":"Activate this option?"
			},
			{
				"name":"Layer Filter On",
				"description":"Also filter by layer?"
			},
			{
				"name":"Incl Layer Filter On Child",
				"description":"Filter layer on child?"
			},
			{
				"name":"Layer",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Explosion 2D",
		"category":"Physics2D",
		"image":"./images/Explosion2D.png",
		"description":"2D explosion.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag."
			},
			{
				"name":"Explosion Timer",
				"description":"Set the timer for the explosion to explode."
			},
			{
				"name":"Explosion Rate",
				"description":"Set the rate in which the explosion will reach its max size."
			},
			{
				"name":"Explosion Size",
				"description":"Set the size of the explosion."
			},
			{
				"name":"Explosion Force",
				"description":"Set the power of the explosion."
			},
			{
				"name":"Explode X",
				"description":"Add Force on X."
			},
			{
				"name":"Explode Y",
				"description":"Add Force on Y."
			},
			{
				"name":"Current_radius",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the Timer is complete."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Box 2d Collider Offset",
		"category":"Physics2D",
		"image":"./images/GetBox2dColliderOffset.png",
		"description":"Get Box Collider2D Offset",
		"params": [
			{
				"name":"Game Object",
				"description":"Targeted BoxCollider2d GameObject"
			},
			{
				"name":"Offset",
				"description":"BoxCollider2d offset."
			},
			{
				"name":"Offset X",
				"description":"BoxCollider2d offset X."
			},
			{
				"name":"Offset Y",
				"description":"BoxCollider2d offset y."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Box 2d Collider Size",
		"category":"Physics2D",
		"image":"./images/GetBox2dColliderSize.png",
		"description":"Get Box Collider2D size",
		"params": [
			{
				"name":"Game Object",
				"description":"Targeted BoxCollider2d GameObject"
			},
			{
				"name":"Size",
				"description":"BoxCollider2d size."
			},
			{
				"name":"Size X",
				"description":"BoxCollider2d size X."
			},
			{
				"name":"Size Y",
				"description":"BoxCollider2d size y."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fixed Joint 2D Properties",
		"category":"Physics",
		"image":"./images/GetFixedJoint2DProperties.png",
		"description":"Gets the various properties of a FixedJoint2D component.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Enable Collision",
				"description":"TODO"
			},
			{
				"name":"Connected Body",
				"description":"TODO"
			},
			{
				"name":"Auto Configure Connected Anchor",
				"description":"TODO"
			},
			{
				"name":"Anchor",
				"description":"TODO"
			},
			{
				"name":"Connected Anchor",
				"description":"TODO"
			},
			{
				"name":"Damping Ratio",
				"description":"TODO"
			},
			{
				"name":"Frequency",
				"description":"TODO"
			},
			{
				"name":"Break Force",
				"description":"TODO"
			},
			{
				"name":"Break Torque",
				"description":"TODO"
			},
			{
				"name":"Reaction Force",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Gravity 2d",
		"category":"Physics2D",
		"image":"./images/GetGravity2d.png",
		"description":"Get the gravity as a Vector2 Variable, or store the XY channels in Float Variables.",
		"params": [
			{
				"name":"Store Vector",
				"description":"TODO"
			},
			{
				"name":"Store X",
				"description":"TODO"
			},
			{
				"name":"Store Y",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Gravity 2d Scale",
		"category":"Physics2D",
		"image":"./images/GetGravity2dScale.png",
		"description":"Gets The degree to which this object is affected by gravity.  NOTE: Game object must have a rigidbody 2D.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Rigidbody 2d attached"
			},
			{
				"name":"Result",
				"description":"The gravity scale effect"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Physics 2d Material Name",
		"category":"Physics",
		"image":"./images/GetPhysics2dMaterialName.png",
		"description":"Gets the name of game object's Physics2D material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the Physics material is applied to ( requires a Collider2D)."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Physics Material 2D instead of a GameObject and Index."
			},
			{
				"name":"Material Name",
				"description":"The name of the material."
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Rigid Body 2d Is Simulated",
		"category":"Physics",
		"image":"./images/GetRigidBody2dIsSimulated.png",
		"description":"Get the simulated property of the Rigidbody2D component",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Simulated",
				"description":"The simulated value of the Rigidbody2D"
			},
			{
				"name":"Every Frame",
				"description":"Get value Every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Inside Collider 2D Info",
		"category":"Physics 2d",
		"image":"./images/InsideCollider2DInfo.png",
		"description":"Send event if you are inside or outside a 2D collider",
		"params": [
			{
				"name":"Collider Target",
				"description":"TODO"
			},
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Inside Collider",
				"description":"TODO"
			},
			{
				"name":"Inside Event",
				"description":"TODO"
			},
			{
				"name":"Outside Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Move Rigid Body 2D",
		"category":"Physics2D",
		"image":"./images/MoveRigidBody2D.png",
		"description":"Move a rigidbody2d to another GameObject using easing properties. Collisions are respected during move.",
		"params": [
			{
				"name":"Object To Move",
				"description":"TODO"
			},
			{
				"name":"Destination",
				"description":"TODO"
			},
			{
				"name":"Time",
				"description":"How long the ease should take in seconds"
			},
			{
				"name":"Speed",
				"description":"Optionally, use speed instead of time."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds before starting to ease."
			},
			{
				"name":"Ease Type",
				"description":"The easing function to use."
			},
			{
				"name":"Reverse",
				"description":"Reverse the ease."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Overlap 2d",
		"category":"Physics2D",
		"image":"./images/Overlap2d.png",
		"description":"Bool check to see if the overlap is intersecting with other colliders. ",
		"params": [
			{
				"name":"Position",
				"description":"Position of the overlap shape. default position will be owner's transform."
			},
			{
				"name":"Offset",
				"description":"Offset position of shape."
			},
			{
				"name":"Shape",
				"description":"Type of overlap shape."
			},
			{
				"name":"Radius",
				"description":"Size of the circle."
			},
			{
				"name":"Box Size",
				"description":"Size of the box."
			},
			{
				"name":"Point A",
				"description":"One corner of the rectangle."
			},
			{
				"name":"Point B",
				"description":"Diagonally opposite the point A corner of the rectangle."
			},
			{
				"name":"Size",
				"description":"Size of the capsule."
			},
			{
				"name":"Direction",
				"description":"Direction of the capsule."
			},
			{
				"name":"Point",
				"description":"point in space."
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than or equal to this value."
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than or equal to this value."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Game Objects",
				"description":"Store all GameObjects in the overlap area."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Typically this would be set to True."
			},
			{
				"name":"Layer Mask",
				"description":"Detect only from these layers."
			},
			{
				"name":"Debug",
				"description":"Draw a debug shape. Note: Check Gizmos in the Game View to see it in game."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Ray Cast 2d 2",
		"category":"Physics2D",
		"image":"./images/RayCast2d2.png",
		"description":"Casts a Ray against all Colliders in the scene. A raycast is conceptually like a laser beam that is fired from a point in space along a particular direction. Any object making contact with the beam can be detected and reported. Use GetRaycastHit2dInfo to get more detailed info. This version also feature an no hit event.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector2 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector2 direction vector"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specified, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. leave to none for no effect"
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. leave to none"
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if the ray does not hit any object."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the 2d position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the 2d normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Fraction",
				"description":"Get the fraction along the ray to the hit point and store it in a variable. If the ray's direction vector is normalized then this value is simply the distance between the origin and the hit point. If the direction is not normalized then this distance is expressed as a 'fraction' (which could be greater than 1) of the vector's magnitude."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rigid Body 2d Move Position",
		"category":"Physics2D",
		"image":"./images/RigidBody2dMovePosition.png",
		"description":"Moves a RigidBody2d to a particular position. It's more efficient then accessing the transform of the gameObject and interacts properly with colliders and physics materials",
		"params": [
			{
				"name":"Game Object",
				"description":"The rigid body to move."
			},
			{
				"name":"Position",
				"description":"The position to move to."
			},
			{
				"name":"Or Vector 3position",
				"description":"The position to move to as vector3."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rigid Body 2d Move Rotation",
		"category":"Physics",
		"image":"./images/RigidBody2dMoveRotation.png",
		"description":"Rotates a RigidBody2d to a particular rotation. It's more efficient then accessing the transform of the gameObject and interacts properly with colliders and physics materials",
		"params": [
			{
				"name":"Game Object",
				"description":"The rigid body to rotate."
			},
			{
				"name":"Rotation",
				"description":"A angle rotation."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Angular Drag 2d",
		"category":"Physics2D",
		"image":"./images/SetAngularDrag2d.png",
		"description":"Sets the angular drag that applies to rotational movement and is set up separately from the linear drag that affects positional movement.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Drag",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Box 2d Collider Offset",
		"category":"Physics2D",
		"image":"./images/SetBox2dColliderOffset.png",
		"description":"Set Box Collider2D Offset",
		"params": [
			{
				"name":"Game Object",
				"description":"Targeted BoxCollider2d GameObject"
			},
			{
				"name":"Offset",
				"description":"BoxCollider2d offset. Leave to none for no effect"
			},
			{
				"name":"Offset X",
				"description":"BoxCollider2d offset X. Leave to none for no effect, else overrides the x value"
			},
			{
				"name":"Offset Y",
				"description":"BoxCollider2d offset y. Leave to none for no effect, else overrides the y value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Box 2d Collider Size",
		"category":"Physics2D",
		"image":"./images/SetBox2dColliderSize.png",
		"description":"Set Box Collider2D Size",
		"params": [
			{
				"name":"Game Object",
				"description":"Targeted BoxCollider2d GameObject"
			},
			{
				"name":"Size",
				"description":"BoxCollider2d size. Leave to none for no effect"
			},
			{
				"name":"Size X",
				"description":"BoxCollider2d size X. Leave to none for no effect, else overrides the x value"
			},
			{
				"name":"Size Y",
				"description":"BoxCollider2d size y. Leave to none for no effect, else overrides the y value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Capsule Collider 2d Properties",
		"category":"Physics",
		"image":"./images/SetCapsuleCollider2dProperties.png",
		"description":"Set the properties of a Capsule Collider 2D, Leave properties to none for no effect",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Capsule Collider 2D."
			},
			{
				"name":"Density",
				"description":"The density of the collider used to calculate its mass (when auto mass is enabled)."
			},
			{
				"name":"Is Trigger",
				"description":"Is this collider configured as a trigger?"
			},
			{
				"name":"Used By Effector",
				"description":"Whether the collider is used by an attached effector or not."
			},
			{
				"name":"Used By Composite",
				"description":"Sets whether the Collider will be used or not used by a CompositeCollider2D."
			},
			{
				"name":"Offset",
				"description":"The local offset of the collider geometry."
			},
			{
				"name":"Size",
				"description":"The width and height of the capsule area."
			},
			{
				"name":"Direction",
				"description":"The direction that the capsule sides can extend."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Circle Collider 2D Radius",
		"category":"Physics",
		"image":"./images/SetCircleCollider2DRadius.png",
		"description":"Set the size of a Circle Collider 2D",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the size to."
			},
			{
				"name":"Radius",
				"description":"Circle radius"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Collider 2d Physics Material 2d",
		"category":"Physics",
		"image":"./images/SetCollider2dPhysicsMaterial2d.png",
		"description":"Set the physicsMaterial2d of a Capsule Collider 2D",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Capsule Collider 2D."
			},
			{
				"name":"Material",
				"description":"The physicsMaterial2d"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fixed Joint 2D Properties",
		"category":"Physics",
		"image":"./images/SetFixedJoint2DProperties.png",
		"description":"Sets the various properties of a FixedJoint2D component.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Enable Collision",
				"description":"TODO"
			},
			{
				"name":"Connected Body",
				"description":"TODO"
			},
			{
				"name":"Auto Configure Connected Anchor",
				"description":"TODO"
			},
			{
				"name":"Anchor",
				"description":"TODO"
			},
			{
				"name":"Connected Anchor",
				"description":"TODO"
			},
			{
				"name":"Damping Ratio",
				"description":"TODO"
			},
			{
				"name":"Frequency",
				"description":"TODO"
			},
			{
				"name":"Break Force",
				"description":"TODO"
			},
			{
				"name":"Break Torque",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Linear Drag 2d",
		"category":"Physics2D",
		"image":"./images/SetLinearDrag2d.png",
		"description":"Sets the linear drag applies to positional movement.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Drag",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Platform Effector 2D Collider Mask",
		"category":"Physics2D",
		"image":"./images/SetPlatformEffector2DColliderMask.png",
		"description":"Adds a collider mask to a Platform Effector 2D",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the PlatformEffector2D attached"
			},
			{
				"name":"Collision Layer",
				"description":"The collision layer to add or remove"
			},
			{
				"name":"Operation",
				"description":"Add or Remove the collision layer"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Polygon Collider 2D Set Path",
		"category":"Physics",
		"image":"./images/SetPolygonCollider2DSetPath.png",
		"description":"Sets the path defining the polygon for a PolygonCollider2D",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Path Index",
				"description":"TODO"
			},
			{
				"name":"Path",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Polygon Collider 2D Set Path Count",
		"category":"Physics",
		"image":"./images/SetPolygonCollider2DSetPathCount.png",
		"description":"Sets the number of path path defining the polygon for a PolygonCollider2D",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Path Count",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rigid Body 2d Constraints",
		"category":"Physics",
		"image":"./images/SetRigidBody2dConstraints.png",
		"description":"Sets the constraints of a 2D rigidBody",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Freeze Position X",
				"description":"TODO"
			},
			{
				"name":"Freeze Position Y",
				"description":"TODO"
			},
			{
				"name":"Freeze Rotation Z",
				"description":"TODO"
			},
			{
				"name":"Freeze All",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rigid Body Type 2D",
		"category":"Physics2D",
		"image":"./images/SetRigidBodyType2D.png",
		"description":"Allows to change Body Type and Simulated parameters of Rigidbody.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Body Type",
				"description":"TODO"
			},
			{
				"name":"Simulated",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger2D Event Multi",
		"category":"Physics2D",
		"image":"./images/Trigger2dEventMulti.png",
		"description":"Detect 2D trigger collisions between Game Objects that have RigidBody2D/Collider2D components.",
		"params": [
			{
				"name":"Collide Tags",
				"description":"Filter by Tag."
			},
			{
				"name":"Send Events",
				"description":"Event to send if the trigger event is detected."
			},
			{
				"name":"Game Object",
				"description":"The GameObject to detect collisions on."
			},
			{
				"name":"Trigger",
				"description":"The type of trigger event to detect."
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Count 2d",
		"category":"Physics2D",
		"image":"./images/TriggerCount2d.png",
		"description":"Detect collisions with objects that have RigidBody2D components. \nNOTE: The system events, TRIGGER ENTER 2D, TRIGGER STAY 2D, and TRIGGER EXIT 2D are sent when any 2D object collides with the trigger. Use this action to filter collisions by Tag.",
		"params": [
			{
				"name":"Collide Tag",
				"description":"TODO"
			},
			{
				"name":"Collide Count",
				"description":"TODO"
			},
			{
				"name":"Collided Bool",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Knock Back Force",
		"category":"Physics",
		"image":"./images/AddKnockBackForce.png",
		"description":"Knocks back a rigidbody using the hit point of the projectile",
		"params": [
			{
				"name":"Npc",
				"description":"TODO"
			},
			{
				"name":"Hit Point",
				"description":"TODO"
			},
			{
				"name":"Knock Back Amount",
				"description":"TODO"
			},
			{
				"name":"Use Relative Force",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Torque Advanced",
		"category":"Physics",
		"image":"./images/AddTorqueAdvanced.png",
		"description":"Adds torque (rotational force) to a Game Object, with optional per seconds setting.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to add torque to."
			},
			{
				"name":"Vector",
				"description":"A Vector3 torque. Optionally override any axis with the X, Y, Z parameters."
			},
			{
				"name":"X",
				"description":"Torque around the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"Torque around the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Z",
				"description":"Torque around the Z axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Space",
				"description":"Apply the force in world or local space."
			},
			{
				"name":"Force Mode",
				"description":"The type of force to apply. See Unity Physics docs."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			},
			{
				"name":"Per Second",
				"description":"Translate over one second"
			},
			{
				"name":"In Realtime",
				"description":"makes the persecond option work with realtime instead of scaled time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Box Cast",
		"category":"Physics",
		"image":"./images/BoxCast.png",
		"description":"Fires a box at a direction. Like a Spherecast except with a Box. Returns hit/no hit + extras. Option to ignore colliders set to trigger.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start box at game object position."
			},
			{
				"name":"Half Extents",
				"description":"Half the size of the box in each dimension."
			},
			{
				"name":"Direction",
				"description":"The direction in which to cast the box."
			},
			{
				"name":"Orientation",
				"description":"Rotation of the box."
			},
			{
				"name":"Max Distance",
				"description":"The max length of the cast. set to none for infinite"
			},
			{
				"name":"Trigger Interaction",
				"description":"Select how to deal with colliders set to trigger."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if the ray does not hit any object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Check Sphere",
		"category":"Physics",
		"image":"./images/CheckSphere.png",
		"description":"Returns a hit event if a collider is inside of the sphere. Option to ignore colliders set to trigger.",
		"params": [
			{
				"name":"Position",
				"description":"Center of the sphere"
			},
			{
				"name":"Radius",
				"description":"Radius of the sphere."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Did Hit",
				"description":"TODO"
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if the ray does not hit any object."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Collider Set Is Trigger",
		"category":"Physics",
		"image":"./images/ColliderSetIsTrigger.png",
		"description":"Controls a collider isTrigger Flag",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with collider to control"
			},
			{
				"name":"Is Trigger",
				"description":"Is the collider a trigger or not"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the collider trigger flag on exit"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Collision 2D Event Plus",
		"category":"Physics",
		"image":"./images/Collision2DEventPlus.png",
		"description":"Detect collisions between the Owner of this FSM and other Game Objects that have RigidBody components.\nNOTE: The system events, COLLISION ENTER, COLLISION STAY, and COLLISION EXIT are sent automatically on collisions with any object. Use this action to filter collisions by Tag.",
		"params": [
			{
				"name":"Collision",
				"description":"The type of collision to detect."
			},
			{
				"name":"Options",
				"description":"Select to Chech Tag and/or Layer"
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag."
			},
			{
				"name":"Collide Layer",
				"description":"Filter by Layer."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Event to send if a collision is detected."
			},
			{
				"name":"Store Collide Object",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			},
			{
				"name":"Store Force",
				"description":"Store the force of the collision. NOTE: Use Get Collision Info to get more info about the collision."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Collision Event 2",
		"category":"Physics",
		"image":"./images/CollisionEvent2.png",
		"description":"Detect collisions between the Owner of this FSM and other Game Objects that have RigidBody components.\nNOTE: The system events, COLLISION ENTER, COLLISION STAY, and COLLISION EXIT are sent automatically on collisions with any object. Use this action to filter collisions by Tag.",
		"params": [
			{
				"name":"Collision",
				"description":"The type of collision to detect."
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag. Leave to 'none' if you want to catch all collisions"
			},
			{
				"name":"Send Event",
				"description":"Event to send if a collision is detected."
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			},
			{
				"name":"Store Force",
				"description":"Store the force of the collision. NOTE: Use Get Collision Info to get more info about the collision."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Collision Event Plus",
		"category":"Physics",
		"image":"./images/CollisionEventPlus.png",
		"description":"Detect collisions between the Owner of this FSM and other Game Objects that have RigidBody components.\nNOTE: The system events, COLLISION ENTER, COLLISION STAY, and COLLISION EXIT are sent automatically on collisions with any object. Use this action to filter collisions by Tag.",
		"params": [
			{
				"name":"Collision",
				"description":"The type of collision to detect."
			},
			{
				"name":"Options",
				"description":"Select to Chech Tag and/or Layer"
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag."
			},
			{
				"name":"Collide Layer",
				"description":"Filter by Layer."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Event to send if a collision is detected."
			},
			{
				"name":"Store Collide Object",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			},
			{
				"name":"Store Force",
				"description":"Store the force of the collision. NOTE: Use Get Collision Info to get more info about the collision."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Drag Rigid Body",
		"category":"Physics",
		"image":"./images/DragRigidBody.png",
		"description":"Drag a Rigid body with the mouse. If draggingPlaneTransform is defined, it will use the UP axis of this gameObject as the dragging plane normal \nThat is select the ground Plane, if you want to drag object on the ground instead of from the camera point of view.",
		"params": [
			{
				"name":"Spring",
				"description":"the springness of the drag"
			},
			{
				"name":"Damper",
				"description":"the damping of the drag"
			},
			{
				"name":"Drag",
				"description":"the drag during dragging"
			},
			{
				"name":"Angular Drag",
				"description":"the angular drag during dragging"
			},
			{
				"name":"Distance",
				"description":"The Max Distance between the dragging target and the RigidBody being dragged"
			},
			{
				"name":"Attach To Center Of Mass",
				"description":"If TRUE, dragging will have close to no effect on the Rigidbody rotation ( except if it hits other bodies as you drag it)"
			},
			{
				"name":"Dragging Plane Transform",
				"description":"If Defined. Use this transform Up axis as the dragging plane normal. Typically, set it to the ground plane if you want to drag objects around on the floor.."
			},
			{
				"name":"Layer Mask",
				"description":"If set, will only drag rigidBodies from one of the defined layer, tagging (if set) is taken in consideration as well."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you drag from all layers except those defined above."
			},
			{
				"name":"Drag Tagged Only",
				"description":"If set, will only drag rigidBodies with one of the defined tag, masking (if set) is taken in consideration as well."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Drag Rigid Body With Go",
		"category":"Physics",
		"image":"./images/DragRigidBodyWithGo.png",
		"description":"Drag a Rigid body with another GameObject.",
		"params": [
			{
				"name":"Dragging GO",
				"description":"The dragging target"
			},
			{
				"name":"Dragged RB",
				"description":"The RigidBody to drag"
			},
			{
				"name":"Spring",
				"description":"the springness of the drag"
			},
			{
				"name":"Damper",
				"description":"the damping of the drag"
			},
			{
				"name":"Drag",
				"description":"the drag during dragging"
			},
			{
				"name":"Angular Drag",
				"description":"the angular drag during dragging"
			},
			{
				"name":"Distance",
				"description":"The Distance between the dragging target and the RigidBody being dragged"
			},
			{
				"name":"Use Start Distance",
				"description":"Force the Distance between the dragging target and the RigidBody being dragged to be th eone when starting dragging"
			},
			{
				"name":"Drag Anchor",
				"description":"vector(0,0,0) would be the center of mass"
			},
			{
				"name":"Is Dragging",
				"description":"whether the go has to drag the rigidBody "
			},
			{
				"name":"Tension",
				"description":"feedback of the current distance and the wanted distance"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Collider",
		"category":"Physics",
		"image":"./images/EnableCollider.png",
		"description":"Enables/Disables a Collider(or a Rigidbody) in a single GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Collider."
			},
			{
				"name":"Component",
				"description":"Optionally drag a Collider directly into this field (Script name will be ignored)."
			},
			{
				"name":"Collider Select",
				"description":"TODO"
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Incl Children",
				"description":"Should the object Children be included?"
			},
			{
				"name":"All Collider",
				"description":"Set to True to enable/disable all Collider in gameobject."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Collider By Tag",
		"category":"Physics",
		"image":"./images/EnableColliderByTag.png",
		"description":"Enables/Disables a Collider(or a Rigidbody) by Tag (and Layer).",
		"params": [
			{
				"name":"Collider Select",
				"description":"TODO"
			},
			{
				"name":"All Collider",
				"description":"Set to True to enable/disable all Collider."
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Incl Children",
				"description":"Should the object Children be included?"
			},
			{
				"name":"Tag",
				"description":"Activate this option?"
			},
			{
				"name":"Layer Filter On",
				"description":"Also filter by layer?"
			},
			{
				"name":"Incl Layer Filter On Child",
				"description":"Filter layer on child?"
			},
			{
				"name":"Layer",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Collider Multi",
		"category":"Physics",
		"image":"./images/EnableColliderMulti.png",
		"description":"Enable or disable a Collider or Collider2D on several GamObject. Optionally set all colliders found on each GameObject.",
		"params": [
			{
				"name":"Game Objects",
				"description":"The GameObjects with the Colliders attached"
			},
			{
				"name":"Enable",
				"description":"The flag value"
			},
			{
				"name":"Apply To All Colliders",
				"description":"Set all Colliders on the GameObject target."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Angular Velocity",
		"category":"Physics",
		"image":"./images/GetAngularVelocity.png",
		"description":"Gets the Angular Velocity of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable. NOTE: The Game Object must have a Rigid Body.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Rigidbody GameObject with to get Angular Velocity from"
			},
			{
				"name":"Vector",
				"description":"The Angular Velocity"
			},
			{
				"name":"X",
				"description":"The Angular Velocity x axis value"
			},
			{
				"name":"Y",
				"description":"The Angular Velocity y axis value"
			},
			{
				"name":"Z",
				"description":"The Angular Velocity z axis value"
			},
			{
				"name":"Space",
				"description":"The Angular Velocity value referencing"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful to watch value evolve over time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Box Collider Size",
		"category":"Physics",
		"image":"./images/GetBoxColliderSize.png",
		"description":"Set the size of a Box Collider",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the size to."
			},
			{
				"name":"Size",
				"description":"TODO"
			},
			{
				"name":"X",
				"description":"size along the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"size along the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Z",
				"description":"size along the Z axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Capsule Collider Height",
		"category":"Physics",
		"image":"./images/GetCapsuleColliderHeight.png",
		"description":"Gets the height of a Game Object's capsule collider.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Collider"
			},
			{
				"name":"Store Result",
				"description":"Store the height in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Collider Bounds",
		"category":"Physics",
		"image":"./images/GetColliderBounds.png",
		"description":"Get the bound values of a gameObject collider. Can optionaly include children",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with to get bounds from"
			},
			{
				"name":"Include Children",
				"description":"Check to activate, uncheck to deactivate Game Object. Warning this may impact performances if ran everyframe"
			},
			{
				"name":"Center",
				"description":"The center of the bounding box."
			},
			{
				"name":"Extents",
				"description":"The extents of the box. This is always half of the size."
			},
			{
				"name":"Size",
				"description":"The total size of the box. This is always twice as large as the extents."
			},
			{
				"name":"Min",
				"description":"The minimal point of the box. This is always equal to center-extents."
			},
			{
				"name":"Max",
				"description":"The maximal point of the box. This is always equal to center+extents."
			},
			{
				"name":"Debug",
				"description":"Draw a debug box in the Scene View."
			},
			{
				"name":"Debug Color",
				"description":"Color to use for the debug Box."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Warning this may impact performances if includeChildren is enabled"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Collider Type",
		"category":"Physics",
		"image":"./images/GetColliderType.png",
		"description":"Gets the type of a Game Object's collider and stores it as a String var.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Collider"
			},
			{
				"name":"Store Result",
				"description":"Store the type in a string variable."
			},
			{
				"name":"Box Collider",
				"description":"TODO"
			},
			{
				"name":"Mesh Collider",
				"description":"TODO"
			},
			{
				"name":"Capsule Collider",
				"description":"TODO"
			},
			{
				"name":"Sphere Collider",
				"description":"TODO"
			},
			{
				"name":"Terrain Collider",
				"description":"TODO"
			},
			{
				"name":"Wheel Collider",
				"description":"TODO"
			},
			{
				"name":"Other Collider",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Collision Ray Cast Info",
		"category":"Physics",
		"image":"./images/GetCollisionRayCastInfo.png",
		"description":"Raycast using info on the last collision event and store raycast infos in variables. See Unity Physics docs.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"Get the GameObject hit."
			},
			{
				"name":"Relative Velocity",
				"description":"Get the relative velocity of the collision."
			},
			{
				"name":"Relative Speed",
				"description":"Get the relative speed of the collision. Useful for controlling reactions. E.g., selecting an appropriate sound fx."
			},
			{
				"name":"Contact Point",
				"description":"Get the world position of the collision contact. Useful for spawning effects etc."
			},
			{
				"name":"Contact Normal",
				"description":"Get the collision normal vector. Useful for aligning spawned effects etc."
			},
			{
				"name":"Physics Material Name",
				"description":"Get the name of the physics material of the colliding GameObject. Useful for triggering different effects. Audio, particles..."
			},
			{
				"name":"Hit",
				"description":"Did the raycast hit something"
			},
			{
				"name":"Game Object Raycast Hit",
				"description":"Get the GameObject hit by the raycast."
			},
			{
				"name":"Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Barycentric Coordinate",
				"description":"Get the barycentric coordinate of the triangle we hit."
			},
			{
				"name":"Triangle Index",
				"description":"Get the index of the triangle that was hit."
			},
			{
				"name":"Texture Coord",
				"description":"Get the uv texture coordinate at the impact point."
			},
			{
				"name":"Texture Coord 2",
				"description":"Get the secondary uv texture coordinate at the impact point."
			},
			{
				"name":"Lightmap Coord",
				"description":"Get the uv lightmap coordinate at the impact point."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Gravity",
		"category":"Physics",
		"image":"./images/GetGravity.png",
		"description":"Get the gravity as a Vector3 Variable, or store the XYZ channels in Float Variables.",
		"params": [
			{
				"name":"Store Vector",
				"description":"TODO"
			},
			{
				"name":"Store X",
				"description":"TODO"
			},
			{
				"name":"Store Y",
				"description":"TODO"
			},
			{
				"name":"Store Z",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Physics Overlap Sphere",
		"category":"Physics",
		"image":"./images/GetNextPhysicsOverlapSphere.png",
		"description":"Performs a OverlapSphere Each time this action is called it gets the next hit. This lets you quickly loop through all the hits to perform actions on them.",
		"params": [
			{
				"name":"From Game Object",
				"description":"The center of the sphere at the start of the sweep. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"The center of the sphere at the start of the sweep. \nOr use Game Object parameter."
			},
			{
				"name":"Radius",
				"description":"The radius of the shpere."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Overlaping Game Object",
				"description":"The overlaping GameObject for this iteration"
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"No Overlap Event",
				"description":"Event to send if there is no overlap at all"
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more hits to loop."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Ray Cast All Hit",
		"category":"Physics",
		"image":"./images/GetNextRayCastAllHit.png",
		"description":"Performs a rayCast hit and Each time this action is called it gets the next hit. This lets you quickly loop through all the hits to perform actions on them.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector3 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector3 direction vector"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specfied, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Reset Action",
				"description":"If set to true, will reset the loop and perform a new raycast, useful whne exiting the loop before the end"
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if there is no hit at all"
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more hits to loop."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Ray Cast All Hit From Screen",
		"category":"Physics",
		"image":"./images/GetNextRayCastAllHitFromScreen.png",
		"description":"Performs a rayCast hit and Each time this action is called it gets the next hit. This lets you quickly loop through all the hits to perform actions on them.",
		"params": [
			{
				"name":"Camera",
				"description":"The Camera GameObject. Leave to none to use the main camera"
			},
			{
				"name":"From Screen Position",
				"description":"Start ray at a vector3 screen position. Screenspace is defined in pixels. The bottom-left of the screen is (0,0); the right-top is (pixelWidth,pixelHeight). "
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Reset Action",
				"description":"If set to true, will reset the loop and perform a new raycast, useful whne exiting the loop before the end"
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if there is no hit at all"
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more hits to loop."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Sphere Cast All Hit",
		"category":"Physics",
		"image":"./images/GetNextSphereCastAllHit.png",
		"description":"Performs a sphereCast hit and Each time this action is called it gets the next hit. This lets you quickly loop through all the hits to perform actions on them.",
		"params": [
			{
				"name":"From Game Object",
				"description":"The center of the sphere at the start of the sweep. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"The center of the sphere at the start of the sweep. \nOr use Game Object parameter."
			},
			{
				"name":"Radius",
				"description":"The radius of the shpere."
			},
			{
				"name":"Direction",
				"description":"The direction into which to sweep the sphere."
			},
			{
				"name":"Space",
				"description":"Cast the sphere in world or local space. Note if no Game Object is specified, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if there is no hit at all"
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more hits to loop."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Overlap Box",
		"category":"Physics",
		"image":"./images/GetOverlapBox.png",
		"description":"Gets GameObject(s) using Physics.OverlapBox",
		"params": [
			{
				"name":"Box Size",
				"description":"TODO"
			},
			{
				"name":"Owner",
				"description":"Use gameObject position as Overlap origin"
			},
			{
				"name":"From Position",
				"description":"Use custom position as Overlap origin"
			},
			{
				"name":"Array",
				"description":"Array to store gameObject(s) overlaps, Array Type has to be GameObject"
			},
			{
				"name":"Include Owner",
				"description":"TODO"
			},
			{
				"name":"Layer Mask",
				"description":"Layermask name to filter the grabbed objects"
			},
			{
				"name":"On Found Game Object",
				"description":"TODO"
			},
			{
				"name":"Draw Gizmo",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Overlap Sphere",
		"category":"Physics",
		"image":"./images/GetOverlapSphere.png",
		"description":"Gets GameObject(s) using Physics.OverlapSphere",
		"params": [
			{
				"name":"Radius",
				"description":"TODO"
			},
			{
				"name":"Owner",
				"description":"Use gameObject position as Overlap origin"
			},
			{
				"name":"From Position",
				"description":"Use custom position as Overlap origin"
			},
			{
				"name":"Array",
				"description":"Array to store gameObject(s) overlaps, Array Type has to be GameObject"
			},
			{
				"name":"Include Owner",
				"description":"TODO"
			},
			{
				"name":"Layer Mask",
				"description":"Layermask name to filter the grabbed objects"
			},
			{
				"name":"On Found Game Object",
				"description":"TODO"
			},
			{
				"name":"Draw Gizmo",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Physics Material Name",
		"category":"Physics",
		"image":"./images/GetPhysicsMaterialName.png",
		"description":"Gets the name of game object's Physics material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the Physcismaterial is applied to ( requires a Collider)."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Physics Material instead of a GameObject and Index."
			},
			{
				"name":"Trim Name",
				"description":"If the pointer to the material is an instance, the name will be appended with ' (instance)'. If True, this will be removed, else the name will be as is"
			},
			{
				"name":"Material Name",
				"description":"The name of the material."
			},
			{
				"name":"Fail",
				"description":"Event sent if material was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Raycast Hit Info Extras",
		"category":"Physics",
		"image":"./images/GetRaycastHitInfoExtras.png",
		"description":"Gets extras info on the last Raycast and store in variables.",
		"params": [
			{
				"name":"Barycentric Coordinate",
				"description":"Get the barycentric coordinate of the triangle we hit."
			},
			{
				"name":"Triangle Index",
				"description":"Get the index of the triangle that was hit."
			},
			{
				"name":"Triangle Material",
				"description":"Get the material of the triangle that was hit."
			},
			{
				"name":"Texture Coord",
				"description":"Get the uv texture coordinate at the impact point."
			},
			{
				"name":"Texture Coord 2",
				"description":"Get the secondary uv texture coordinate at the impact point."
			},
			{
				"name":"Lightmap Coord",
				"description":"Get the uv lightmap coordinate at the impact point."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Raycast Hit Info Material",
		"category":"Physics",
		"image":"./images/GetRaycastHitInfoMaterial.png",
		"description":"Gets the material  on the last Raycast and store in variables.",
		"params": [
			{
				"name":"Material",
				"description":"Get the material of the triangle that was hit."
			},
			{
				"name":"Mesh Renderer",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Rigidbody Position",
		"category":"Physics",
		"image":"./images/GetRigidbodyPosition.png",
		"description":"Gets the Position of a Physics Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable. It's more efficient than getting the rotation of the gameobject",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Position",
				"description":"TODO"
			},
			{
				"name":"X",
				"description":"TODO"
			},
			{
				"name":"Y",
				"description":"TODO"
			},
			{
				"name":"Z",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Rigidbody Rotation",
		"category":"Physics",
		"image":"./images/GetRigidbodyRotation.png",
		"description":"Gets the Rotation of a Physics Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable. It's more efficient than getting the rotation of the gameobject",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Quaternion",
				"description":"TODO"
			},
			{
				"name":"Vector",
				"description":"TODO"
			},
			{
				"name":"X Angle",
				"description":"TODO"
			},
			{
				"name":"Y Angle",
				"description":"TODO"
			},
			{
				"name":"Z Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sphere Collider Radius",
		"category":"Physics",
		"image":"./images/GetSphereColliderRadius.png",
		"description":"Get the size of a Sphere Collider",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the size to."
			},
			{
				"name":"Radius",
				"description":"Sphere radius"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Surface Forward",
		"category":"Physics",
		"image":"./images/GetSurfaceForward.png",
		"description":"Gets the surface forward from a cast.",
		"params": [
			{
				"name":"Caster Game Object",
				"description":"Game Object that peforms the cast"
			},
			{
				"name":"Caster Direction",
				"description":"World direction of caster object 0,1,0 would mean its Y axis is pointing up"
			},
			{
				"name":"Hit Normal",
				"description":"Input the hit normal from a cast"
			},
			{
				"name":"Hit Point",
				"description":"Input the hit point from a cast"
			},
			{
				"name":"Surface Forward",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Wheel Collider Ground Hit Properties",
		"category":"Physics",
		"image":"./images/GetWheelColliderGroundHitProperties.png",
		"description":"Gets ground collision data for the wheel",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Collider",
				"description":"The other Collider the wheel is hitting."
			},
			{
				"name":"Point",
				"description":"The point of contact between the wheel and the ground."
			},
			{
				"name":"Normal",
				"description":"The normal at the point of contact."
			},
			{
				"name":"Forward Dir",
				"description":"The direction the wheel is pointing in."
			},
			{
				"name":"Force",
				"description":"The magnitude of the force being applied for the contact."
			},
			{
				"name":"Forward Slip",
				"description":"Tire slip in the rolling direction. Acceleration slip is negative, braking slip is positive."
			},
			{
				"name":"Sideways Slip",
				"description":"Tire slip in the sideways direction."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Wheel Collider Is Grounded",
		"category":"Physics",
		"image":"./images/GetWheelColliderIsGrounded.png",
		"description":"Tests if a wheel Collider is grounded.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Is Grounded Event",
				"description":"TODO"
			},
			{
				"name":"Is Not Grounded Event",
				"description":"TODO"
			},
			{
				"name":"Store",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Send Event Only If Change",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Wheel Collider Rpm",
		"category":"Physics",
		"image":"./images/GetWheelColliderRpm.png",
		"description":"Gets the wheelCollider rpm",
		"params": [
			{
				"name":"Game Object",
				"description":"The wheelCollider target"
			},
			{
				"name":"Rpm",
				"description":"The wheel Collider rpm"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, usefull if value changes overtime"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Has Rigid Body",
		"category":"GameObject",
		"image":"./images/HasRigidBody.png",
		"description":"Check if a GameObject has a RigidBody attached. Sends events based on result ( Found or not found).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to check."
			},
			{
				"name":"Found",
				"description":"True if a RigidBody was found"
			},
			{
				"name":"Found Event",
				"description":"TODO"
			},
			{
				"name":"Not Found Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Inside Collider Info",
		"category":"Physics",
		"image":"./images/InsideColliderInfo.png",
		"description":"Send event if you are inside or outside a collider",
		"params": [
			{
				"name":"Collider Target",
				"description":"TODO"
			},
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Inside Collider",
				"description":"TODO"
			},
			{
				"name":"Inside Event",
				"description":"TODO"
			},
			{
				"name":"Outside Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Knockback Action",
		"category":"Physics",
		"image":"./images/KnockbackAction.png",
		"description":"Applies knock to a game object using a Rigidbody, NavmeshAgent or Character Controller",
		"params": [
			{
				"name":"Knock This Back",
				"description":"The object to knockback"
			},
			{
				"name":"Type",
				"description":"TODO"
			},
			{
				"name":"Hit Point",
				"description":"The hitPoint from a cast"
			},
			{
				"name":"Knock Back Amount",
				"description":"How far to knock the object back"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Lead Target",
		"category":"Physics",
		"image":"./images/LeadTarget.png",
		"description":"Compute the intercept point for firing a projectile at a moving target.",
		"params": [
			{
				"name":"The Origin",
				"description":"The object firing the projectile."
			},
			{
				"name":"The Target",
				"description":"The target object to lead."
			},
			{
				"name":"Intercept Position",
				"description":"The resulting intercept position."
			},
			{
				"name":"Weapon Speed",
				"description":"The speed of the projectile being fired."
			},
			{
				"name":"Magic Number",
				"description":"A magic mulitplier number you probably don't need to change."
			},
			{
				"name":"Repeat Interval",
				"description":"How often to process. 0 = do once; 1 = every frame; 2 = every other frame. \nDo not change at runtime."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Multiply Velocity",
		"category":"Physics",
		"image":"./images/MultiplyVelocity.png",
		"description":"Multiplies the Velocity of a Game Object. To leave any axis unchanged, set variable to 'None'. NOTE: Game object must have a rigidbody.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Vector",
				"description":"TODO"
			},
			{
				"name":"X",
				"description":"TODO"
			},
			{
				"name":"Y",
				"description":"TODO"
			},
			{
				"name":"Z",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Physics Ignore Collision",
		"category":"Physics",
		"image":"./images/PhysicsIgnoreCollision.png",
		"description":"Makes the collision detection system ignore all collisions between collider1 and collider2.",
		"params": [
			{
				"name":"Collider 1",
				"description":"The first collider"
			},
			{
				"name":"Collider 2",
				"description":"The second collider"
			},
			{
				"name":"Ignore Collision",
				"description":"Wether to ignore or not the collisions between collider 1 and 2."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Physics Line Cast",
		"category":"Physics",
		"image":"./images/PhysicsLineCast.png",
		"description":"Performs a lineCast hit ",
		"params": [
			{
				"name":"From Game Object",
				"description":"The line start of the sweep. \nOr use FromPosition parameter."
			},
			{
				"name":"From Position",
				"description":"The line start of the sweep. \nOr use FromGameObject parameter."
			},
			{
				"name":"To Game Object",
				"description":"The end position of the linecast sweep. \nOr use ToPosition parameter."
			},
			{
				"name":"To Position",
				"description":"The end position of the linecast sweep. \nOr use ToGameObject parameter."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Hit",
				"description":"TODO"
			},
			{
				"name":"Hit Event",
				"description":"Event to send when there are no more hits to loop."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if there is no hit at all"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Physics Line Cast 2",
		"category":"Physics",
		"image":"./images/PhysicsLineCast2.png",
		"description":"Casts a line like a trip wire between the from and to position/gameObject. Option to ignore colliders set to trigger.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start line at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start line at a vector3 world position. \nOr use Game Object parameter."
			},
			{
				"name":"To Game Object",
				"description":"The end position of the linecast sweep. \nOr use ToPosition parameter."
			},
			{
				"name":"To Position",
				"description":"The end position of the linecast sweep. \nOr use ToGameObject parameter."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the line hits an object."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if the ray does not hit any object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the line hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the line to the hit point and store it in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a line. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Physics Shoot",
		"category":"Physics",
		"image":"./images/PhysicsShoot.png",
		"description":"Shoot a RigidBody. Optionnaly set a target gameObject to show the impact point",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Range",
				"description":"the range of the shoot in the forward direction"
			},
			{
				"name":"Angle",
				"description":"The shoot angle"
			},
			{
				"name":"Target",
				"description":"The optional target gameObject to show the impact point"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Raycast 2",
		"category":"Physics",
		"image":"./images/Raycast2.png",
		"description":"Casts a Ray against all Colliders in the scene. Use either a Game Object or Vector3 world position as the origin of the ray. Use GetRaycastInfo to get more detailed info.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector3 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector3 direction vector"
			},
			{
				"name":"End Object",
				"description":"A Target Object for the direction. Overrides Direction if used."
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specfied, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if the ray does not hit any object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Store Distance On Miss",
				"description":"If true the script will store hitDistance regardless of whether or not the ray hit something."
			},
			{
				"name":"Store Hit Point On Miss",
				"description":"If the ray doesn't hit anything, update hitPoint correctly."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Raycast 2 Ignore Triggers",
		"category":"Physics",
		"image":"./images/Raycast2IgnoreTriggers.png",
		"description":"Casts a Ray against all Colliders in the scene. Use either a Game Object or Vector3 world position as the origin of the ray. Use GetRaycastInfo to get more detailed info. Option to ignore colliders set to trigger",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector3 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector3 direction vector"
			},
			{
				"name":"End Object",
				"description":"A Target Object for the direction. Overrides Direction if used."
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specfied, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if the ray does not hit any object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Store Distance On Miss",
				"description":"If true the script will store hitDistance regardless of whether or not the ray hit something."
			},
			{
				"name":"Store Hit Point On Miss",
				"description":"If the ray doesn't hit anything, update hitPoint correctly."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Raycast Advanced",
		"category":"Physics",
		"image":"./images/RaycastAdvanced.png",
		"description":"Casts a Ray against all Colliders in the scene. Use either a Game Object or Vector3 world position as the origin of the ray. Use GetRaycastInfo to get more detailed info.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector3 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector3 direction vector"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specfied, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Raycast From Game Object",
		"category":"Physics",
		"image":"./images/RaycastFromGameObject.png",
		"description":"Casts a Ray from a GameObject against all Colliders in the scene. Use GetRaycastInfo to get more detailed info.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position"
			},
			{
				"name":"Direction",
				"description":"A direction: Forward (z), Backward (-z), up (y), Down (-y), Left (-x), Right (x) "
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Raycast From Screen",
		"category":"Physics",
		"image":"./images/RaycastFromScreen.png",
		"description":"Casts a Ray against all Colliders in the scene from the screenSpace. Use a Vector3 screen position as the origin of the ray. Use GetRaycastInfo to get more detailed info.",
		"params": [
			{
				"name":"Camera",
				"description":"The Camera GameObject. Leave to none to use the main camera"
			},
			{
				"name":"From Screen Position",
				"description":"Start ray at a vector3 screen position. Screenspace is defined in pixels. The bottom-left of the screen is (0,0); the right-top is (pixelWidth,pixelHeight). "
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Raycast Ignore Triggers",
		"category":"Physics",
		"image":"./images/RaycastIgnoreTriggers.png",
		"description":"Casts a Ray against all Colliders in the scene. Use either a Game Object or Vector3 world position as the origin of the ray. Use GetRaycastInfo to get more detailed info.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector3 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector3 direction vector"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specfied, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rigidbody Mass Calculator",
		"category":"Physics",
		"image":"./images/RigidbodyMassCalculator.png",
		"description":"Used to approximate a proper mass value from all the colliders in a given Rigidbody (m = d * v).",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Density",
				"description":"TODO"
			},
			{
				"name":"Is 2D",
				"description":"Only for 2D Box, Circle & Polygon collider"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rigid Body Move Position",
		"category":"Physics",
		"image":"./images/RigidBodyMovePosition.png",
		"description":"Moves a RigidBody to a particular position. It's more efficient then accessing the transform of the gameObject and interacts properly with colliders and physics materials",
		"params": [
			{
				"name":"Game Object",
				"description":"The rigid body to move."
			},
			{
				"name":"Position",
				"description":"The position to move to."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rigid Body Move Rotation",
		"category":"Physics",
		"image":"./images/RigidBodyMoveRotation.png",
		"description":"Rotates a RigidBody to a particular rotation. It's more efficient then accessing the transform of the gameObject and interacts properly with colliders and physics materials",
		"params": [
			{
				"name":"Game Object",
				"description":"The rigid body to rotate."
			},
			{
				"name":"Rotation",
				"description":"A rotation quaternion."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rigid Body Set Max Angular Velocity",
		"category":"Physics",
		"image":"./images/RigidBodySetMaxAngularVelocity.png",
		"description":"Set The maximimum angular velocity of the rigidbody. (Default 7) range { 0, infinity }.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to set the  maximimum angular velocity of."
			},
			{
				"name":"Max Angular Velocity",
				"description":"The maximimum angular velocity. (Default 7) range { 0, infinity }."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rigidbody Translate Position",
		"category":"Physics",
		"image":"./images/RigidbodyTranslatePosition.png",
		"description":"Moves the position of a Rigidbody, calcs and smoothing are NOT included.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to move."
			},
			{
				"name":"Input Vector",
				"description":"The vector input for the rigidbody. This is the distance in units that it will move from its current position per FixedUpdate."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rigidbody Translate Position Auto",
		"category":"Physics",
		"image":"./images/RigidbodyTranslatePositionAuto.png",
		"description":"Moves the position of a Rigidbody, calcs and smoothing are internal.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to move."
			},
			{
				"name":"Horizontal Axis",
				"description":"The horizontal axis name as defined in the input manager."
			},
			{
				"name":"Vertical Axis",
				"description":"The vertical axis name as defined in the input manager."
			},
			{
				"name":"Speed",
				"description":"The speed of the rigidbody."
			},
			{
				"name":"Store Vector",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rotate To Forward Direction",
		"category":"Physics",
		"image":"./images/RotateToForwardDirection.png",
		"description":"Rotates a game object so that its forward(z) axis faces the direction.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Direction",
				"description":"Input direction"
			},
			{
				"name":"Angles",
				"description":"Output Euler Angles"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rotate To Up Direction",
		"category":"Physics",
		"image":"./images/RotateToUpDirection.png",
		"description":"Rotates a game object so that its up(y) axis faces the direction.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Direction",
				"description":"Input direction"
			},
			{
				"name":"Angles",
				"description":"Output Euler Angles"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Angular Drag",
		"category":"Physics",
		"image":"./images/SetAngularDrag.png",
		"description":"Sets the angular drag that applies to rotational movement and is set up separately from the linear drag that affects positional movement.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Drag",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Typically this would be set to True."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Angular Velocity",
		"category":"Physics",
		"image":"./images/SetAngularVelocity.png",
		"description":"Sets the Angular Velocity of a Game Object. To leave any axis unchanged, set variable to 'None'. NOTE: Game object must have a rigidbody.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Rigidbody GameObject with to set Angular Velocity"
			},
			{
				"name":"Vector",
				"description":"The Angular Velocity"
			},
			{
				"name":"X",
				"description":"The x axis Angular Velocity"
			},
			{
				"name":"Y",
				"description":"The y axis Angular Velocity"
			},
			{
				"name":"Z",
				"description":"The z axis Angular Velocity"
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Box Collider Center",
		"category":"Physics",
		"image":"./images/SetBoxColliderCenter.png",
		"description":"Set the center of a Box Collider",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the center to."
			},
			{
				"name":"Vector",
				"description":"A Vector3 center to add. Optionally override any axis with the X, Y, Z parameters."
			},
			{
				"name":"X",
				"description":"center along the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"center along the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Z",
				"description":"center along the Z axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Box Collider Size",
		"category":"Physics",
		"image":"./images/SetBoxColliderSize.png",
		"description":"Set the size of a Box Collider",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the size to."
			},
			{
				"name":"Vector",
				"description":"A Vector3 size to add. Optionally override any axis with the X, Y, Z parameters."
			},
			{
				"name":"X",
				"description":"size along the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"size along the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Z",
				"description":"size along the Z axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Configurable Joint Drives",
		"category":"Physics",
		"image":"./images/SetConfigurableJointDrives.png",
		"description":"Sets the Drives on a Configurable Joint Component",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the ConfigurableJoint component"
			},
			{
				"name":"Or Component",
				"description":"The ConfigurableJoint component. Use this when multiple joints are on the same GameObject"
			},
			{
				"name":"Drive Type",
				"description":"How the joint's movement will behave along its local axis."
			},
			{
				"name":"Position Spring",
				"description":"Strength of a rubber-band pull toward the defined direction. Only used if mode includes Position."
			},
			{
				"name":"Position Damper",
				"description":"Resistance strength against the Position Spring. Only used if mode includes Position."
			},
			{
				"name":"Maximum Force",
				"description":"Amount of force applied to push the object toward the defined direction."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Configurable Joint Limits",
		"category":"Physics",
		"image":"./images/SetConfigurableJointLimits.png",
		"description":"Sets the Joint Limits on a Configurable Joint Component",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the ConfigurableJoint component"
			},
			{
				"name":"Or Component",
				"description":"The ConfigurableJoint component. Use this when multiple joints are on the same GameObject"
			},
			{
				"name":"Limit Type",
				"description":"Joint limits for each rotation axis and and linear degree of freedom."
			},
			{
				"name":"Spring",
				"description":"The stiffness of the spring limit. When stiffness is zero the limit is hard, otherwise soft."
			},
			{
				"name":"Damper",
				"description":"The damping of the spring limit. In effect when the stiffness of the sprint limit is not zero."
			},
			{
				"name":"Limit",
				"description":"The limit position/angle of the joint (in degrees)."
			},
			{
				"name":"Bounciness",
				"description":"When the joint hits the limit, it can be made to bounce off it."
			},
			{
				"name":"Contact Distance",
				"description":"Determines how far ahead in space the solver can \"see\" the joint limit."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Gameobject As Center Of Gravity",
		"category":"Physics",
		"image":"./images/SetGameobjectAsCenterOfGravity.png",
		"description":"Create your own fake gravity (F = GMm/r^2)",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Gravity",
				"description":"TODO"
			},
			{
				"name":"Force Multiplier Temp",
				"description":"TODO"
			},
			{
				"name":"Update Select",
				"description":"TODO"
			},
			{
				"name":"Use Overlap Sphere",
				"description":"TODO"
			},
			{
				"name":"Overlap Sphere Size",
				"description":"TODO"
			},
			{
				"name":"Usetag",
				"description":"TODO"
			},
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Layer Filter On",
				"description":"Also filter by layer?"
			},
			{
				"name":"Layer",
				"description":"TODO"
			},
			{
				"name":"Disable Gravity",
				"description":"TODO"
			},
			{
				"name":"Use Add Force At Position",
				"description":"TODO"
			},
			{
				"name":"Force Type",
				"description":"TODO"
			},
			{
				"name":"Use Add Torque",
				"description":"TODO"
			},
			{
				"name":"Torque Amount",
				"description":"TODO"
			},
			{
				"name":"Use Orbit",
				"description":"TODO"
			},
			{
				"name":"Orbit Type",
				"description":"TODO"
			},
			{
				"name":"Orbit Offset",
				"description":"TODO"
			},
			{
				"name":"Orbit Speed",
				"description":"TODO"
			},
			{
				"name":"Use Fx",
				"description":"TODO"
			},
			{
				"name":"Fx Type",
				"description":"TODO"
			},
			{
				"name":"Only Use Fx",
				"description":"TODO"
			},
			{
				"name":"Fx Speed",
				"description":"TODO"
			},
			{
				"name":"Use Speed Velocity",
				"description":"TODO"
			},
			{
				"name":"Set Speed Velocity",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Hinge Joint Properties",
		"category":"Physics",
		"image":"./images/SetHingeJointProperties.png",
		"description":"Set some hinge joints properties",
		"params": [
			{
				"name":"Game Object",
				"description":"JointSpring GameObject to control."
			},
			{
				"name":"Connected Body",
				"description":"TODO"
			},
			{
				"name":"Break Force",
				"description":"TODO"
			},
			{
				"name":"Break Torque",
				"description":"TODO"
			},
			{
				"name":"Anchor",
				"description":"TODO"
			},
			{
				"name":"Axis",
				"description":"TODO"
			},
			{
				"name":"Use Spring",
				"description":"TODO"
			},
			{
				"name":"Spring",
				"description":"TODO"
			},
			{
				"name":"Damper",
				"description":"TODO"
			},
			{
				"name":"Target Position",
				"description":"TODO"
			},
			{
				"name":"Use Motor",
				"description":"TODO"
			},
			{
				"name":"Target Velocity",
				"description":"TODO"
			},
			{
				"name":"Force",
				"description":"TODO"
			},
			{
				"name":"Free Spin",
				"description":"TODO"
			},
			{
				"name":"Use Limits",
				"description":"TODO"
			},
			{
				"name":"Min",
				"description":"TODO"
			},
			{
				"name":"Max",
				"description":"TODO"
			},
			{
				"name":"Bounce Min Velocity",
				"description":"TODO"
			},
			{
				"name":"Bounciness",
				"description":"TODO"
			},
			{
				"name":"Contact Distance",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rigid Body Constraints",
		"category":"Physics",
		"image":"./images/SetRigidBodyConstraints.png",
		"description":"Sets the constraints of a rigidBody",
		"params": [
			{
				"name":"Game Object",
				"description":"The Rigidbody GameObject"
			},
			{
				"name":"Freeze All",
				"description":"freezeAll option. Leave to none for no effect"
			},
			{
				"name":"Freeze Position",
				"description":"The all Positions constraint. Leave to none for no effect"
			},
			{
				"name":"Freeze Rotation",
				"description":"The all Rotations constraint. Leave to none for no effect"
			},
			{
				"name":"Freeze Position X",
				"description":"The X Position constraint. Leave to none for no effect"
			},
			{
				"name":"Freeze Position Y",
				"description":"The Y Position constraint. Leave to none for no effect"
			},
			{
				"name":"Freeze Position Z",
				"description":"The Z Position constraint. Leave to none for no effect"
			},
			{
				"name":"Freeze Rotation X",
				"description":"The X Rotation constraint. Leave to none for no effect"
			},
			{
				"name":"Freeze Rotation Y",
				"description":"The Y Rotation constraint. Leave to none for no effect"
			},
			{
				"name":"Freeze Rotation Z",
				"description":"The Z Rotation constraint. Leave to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rigidbody Position",
		"category":"Physics",
		"image":"./images/SetRigidbodyPosition.png",
		"description":"Set a Rigidbody position. It's more efficient then accessing the transform of the gameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The rigid body to rotate."
			},
			{
				"name":"Position",
				"description":"The position."
			},
			{
				"name":"X",
				"description":"TODO"
			},
			{
				"name":"Y",
				"description":"TODO"
			},
			{
				"name":"Z",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rigidbody Rotation",
		"category":"Physics",
		"image":"./images/SetRigidbodyRotation.png",
		"description":"Set a Rigidbody rotation. It's more efficient then accessing the transform of the gameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The rigid body to rotate."
			},
			{
				"name":"Rotation",
				"description":"The rotation."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sphere Collider Center",
		"category":"Physics",
		"image":"./images/SetSphereColliderCenter.png",
		"description":"Set the center of a Sphere Collider",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the center to."
			},
			{
				"name":"Vector",
				"description":"A Vector3 center to add. Optionally override any axis with the X, Y, Z parameters."
			},
			{
				"name":"X",
				"description":"center along the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"center along the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Z",
				"description":"center along the Z axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sphere Collider Radius",
		"category":"Physics",
		"image":"./images/SetSphereColliderRadius.png",
		"description":"Set the size of a Sphere Collider",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the size to."
			},
			{
				"name":"Radius",
				"description":"Sphere radius"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Velocity Constant Speed 2d",
		"category":"Physics 2d",
		"image":"./images/SetVelocityConstantSpeed2d.png",
		"description":"Sets fix/constant velocity of a 2d Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Speed",
				"description":"Velocity speed"
			},
			{
				"name":"Exit Action",
				"description":"Exit the action"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Velocity Constant Speed 3d",
		"category":"Physics",
		"image":"./images/SetVelocityConstantSpeed3d.png",
		"description":"Sets fix/constant velocity of a 3d Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Speed",
				"description":"Velocity speed"
			},
			{
				"name":"Exit Action",
				"description":"Exit the action"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Wheel Collider Brake Torque",
		"category":"Physics",
		"image":"./images/SetWheelColliderBrakeTorque.png",
		"description":"Sets the wheelCollider BrakeTorque",
		"params": [
			{
				"name":"Game Object",
				"description":"The wheelCollider target"
			},
			{
				"name":"Brake Torque",
				"description":"The Brake Torque"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, usefull if value changes overtime"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Wheel Collider Motor Torque",
		"category":"Physics",
		"image":"./images/SetWheelColliderMotorTorque.png",
		"description":"Sets the wheelCollider MotorTorque",
		"params": [
			{
				"name":"Game Object",
				"description":"The wheelCollider target"
			},
			{
				"name":"Motor Torque",
				"description":"The Motor Torque"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, usefull if value changes overtime"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Wheel Collider Properties",
		"category":"Physics",
		"image":"./images/SetWheelColliderProperties.png",
		"description":"Sets the suspension, forward and sideways properties, cause they are not accessible via SetProperty by design",
		"params": [
			{
				"name":"Game Object",
				"description":"The wheel target"
			},
			{
				"name":"Mass",
				"description":"TODO"
			},
			{
				"name":"Radius",
				"description":"TODO"
			},
			{
				"name":"Distance",
				"description":"TODO"
			},
			{
				"name":"Spring",
				"description":"TODO"
			},
			{
				"name":"Damper",
				"description":"TODO"
			},
			{
				"name":"Target Position",
				"description":"TODO"
			},
			{
				"name":"Forward Friction",
				"description":"TODO"
			},
			{
				"name":"Sideways Friction",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Wheel Collider Steer Angle",
		"category":"Physics",
		"image":"./images/SetWheelColliderSteerAngle.png",
		"description":"Sets the wheelCollider Steer Angle",
		"params": [
			{
				"name":"Game Object",
				"description":"The wheelCollider target"
			},
			{
				"name":"Steer Angle",
				"description":"The steer Angle"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, usefull if value changes overtime"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Simple Overlap Box",
		"category":"Physics",
		"image":"./images/SimpleOverlapBox.png",
		"description":"Returns hit if an object is hit, hit object also returns",
		"params": [
			{
				"name":"Scan Origin",
				"description":"TODO"
			},
			{
				"name":"Half Extents",
				"description":"The size of the overlap box."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Error Event",
				"description":"TODO"
			},
			{
				"name":"Hit Event",
				"description":"TODO"
			},
			{
				"name":"No Hit Event",
				"description":"TODO"
			},
			{
				"name":"Repeat Interval",
				"description":"TODO"
			},
			{
				"name":"Hit Object",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Simple Overlap Capsule Plus",
		"category":"Physics",
		"image":"./images/SimpleOverlapCapsulePlus.png",
		"description":"Returns hit if an object is hit, returns hitpoint and object- DOES NOT work with Mesh or Terrain colliders",
		"params": [
			{
				"name":"Scan Origin",
				"description":"TODO"
			},
			{
				"name":"Scan Origin V3",
				"description":"TODO"
			},
			{
				"name":"Capsule End",
				"description":"TODO"
			},
			{
				"name":"Capsule End V3",
				"description":"TODO"
			},
			{
				"name":"Scan Range",
				"description":"The size of the overlap sphere."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Error Event",
				"description":"TODO"
			},
			{
				"name":"Hit Event",
				"description":"TODO"
			},
			{
				"name":"No Hit Event",
				"description":"TODO"
			},
			{
				"name":"Repeat Interval",
				"description":"TODO"
			},
			{
				"name":"Hit Object",
				"description":"TODO"
			},
			{
				"name":"Hit Point",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Simple Overlap Sphere",
		"category":"Physics",
		"image":"./images/SimpleOverlapSphere.png",
		"description":"Returns hit if an object is hit, saves hit object.",
		"params": [
			{
				"name":"Scan Origin",
				"description":"TODO"
			},
			{
				"name":"Scan Origin V3",
				"description":"TODO"
			},
			{
				"name":"Scan Range",
				"description":"The size of the overlap sphere."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Error Event",
				"description":"TODO"
			},
			{
				"name":"Hit Event",
				"description":"TODO"
			},
			{
				"name":"No Hit Event",
				"description":"TODO"
			},
			{
				"name":"Repeat Interval",
				"description":"TODO"
			},
			{
				"name":"Hit Object",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Simple Overlap Sphere Plus",
		"category":"Physics",
		"image":"./images/SimpleOverlapSpherePlus.png",
		"description":"Returns hit if an object is hit, returns hitpoint and object- DOES NOT work with mesh or terrain colliders",
		"params": [
			{
				"name":"Scan Origin",
				"description":"TODO"
			},
			{
				"name":"Scan Origin V3",
				"description":"TODO"
			},
			{
				"name":"Scan Range",
				"description":"The size of the overlap sphere."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Ignore Trigger Colliders",
				"description":"Set to true to ignore colliders set to trigger."
			},
			{
				"name":"Error Event",
				"description":"TODO"
			},
			{
				"name":"Hit Event",
				"description":"TODO"
			},
			{
				"name":"No Hit Event",
				"description":"TODO"
			},
			{
				"name":"Repeat Interval",
				"description":"TODO"
			},
			{
				"name":"Hit Object",
				"description":"TODO"
			},
			{
				"name":"Hit Point",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sphere Cast",
		"category":"Physics",
		"image":"./images/SphereCast.png",
		"description":"Performs a sphereCast hit",
		"params": [
			{
				"name":"From Game Object",
				"description":"The center of the sphere at the start of the sweep. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"The center of the sphere at the start of the sweep. \nOr use Game Object parameter."
			},
			{
				"name":"Radius",
				"description":"The radius of the shpere."
			},
			{
				"name":"Direction",
				"description":"The direction into which to sweep the sphere."
			},
			{
				"name":"Space",
				"description":"Cast the sphere in world or local space. Note if no Game Object is specified, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Hit Event",
				"description":"Event to send when there is a hit."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if there is no hit at all"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sphere Cast 2",
		"category":"Physics",
		"image":"./images/SphereCast2.png",
		"description":"Performs a sphereCast hit",
		"params": [
			{
				"name":"From Game Object",
				"description":"The center of the sphere at the start of the sweep. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"The center of the sphere at the start of the sweep. \nOr use Game Object parameter."
			},
			{
				"name":"Radius",
				"description":"The radius of the shpere."
			},
			{
				"name":"Direction",
				"description":"The direction into which to sweep the sphere."
			},
			{
				"name":"Space",
				"description":"Cast the sphere in world or local space. Note if no Game Object is specified, the direction is in world space."
			},
			{
				"name":"Max Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Hit Event",
				"description":"Event to send when there is a hit."
			},
			{
				"name":"No Hit Event",
				"description":"Event to send if there is no hit at all"
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Sphere Cast Center",
				"description":"this can be used with the wiresphere tester"
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nSince raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Trigger Interaction",
				"description":"TODO"
			},
			{
				"name":"Debug Max Distance Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug Current Distance Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Torque Look Rotation",
		"category":"Physics",
		"image":"./images/TorqueLookRotation.png",
		"description":"Order a game object to look at a target by using Torque on its axi",
		"params": [
			{
				"name":"Game Object",
				"description":"The object to effect."
			},
			{
				"name":"Target Object",
				"description":"The target it should be looking at"
			},
			{
				"name":"Force Multiplier",
				"description":"The multiplier of torque to apply."
			},
			{
				"name":"Force Mode",
				"description":"The torque forceMode"
			},
			{
				"name":"Store Angle To",
				"description":"The multiplier of torque to apply."
			},
			{
				"name":"Max Speed",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Torque Rotate Towards",
		"category":"Physics",
		"image":"./images/TorqueRotateTowards.png",
		"description":"Make a game object rotate towards a rotation using Torque",
		"params": [
			{
				"name":"Game Object",
				"description":"The object to effect."
			},
			{
				"name":"Target Object",
				"description":"The target it should use as rotation target"
			},
			{
				"name":"Force Multiplier",
				"description":"The multiplier of torque to apply."
			},
			{
				"name":"Force Mode",
				"description":"The torque forceMode"
			},
			{
				"name":"Max Speed",
				"description":"TODO"
			},
			{
				"name":"Done",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Count",
		"category":"Physics",
		"image":"./images/TriggerCount.png",
		"description":"Detect collisions with objects that have RigidBody components. \nNOTE: The system events, TRIGGER ENTER, TRIGGER STAY, and TRIGGER EXIT are sent when any object collides with the trigger. Use this action to filter collisions by Tag.",
		"params": [
			{
				"name":"Collide Tag",
				"description":"TODO"
			},
			{
				"name":"Collide Count",
				"description":"TODO"
			},
			{
				"name":"Collided Bool",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Event 2",
		"category":"Physics",
		"image":"./images/TriggerEvent2.png",
		"description":"Detect collisions with objects that have RigidBody components. \nNOTE: The system events, TRIGGER ENTER, TRIGGER STAY, and TRIGGER EXIT are sent when any object collides with the trigger. Use this action to filter collisions by Tag.",
		"params": [
			{
				"name":"Trigger",
				"description":"The type of trigger event to detect."
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the trigger event is detected."
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Event By Layer",
		"category":"Physics",
		"image":"./images/TriggerEventByLayer.png",
		"description":"Detect collisions with objects that have RigidBody components. \nNOTE: The system events, TRIGGER ENTER, TRIGGER STAY, and TRIGGER EXIT are sent when any object collides with the trigger. Use this action to filter collisions by Layer.",
		"params": [
			{
				"name":"Trigger",
				"description":"TODO"
			},
			{
				"name":"Layer",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Store Collider",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Event Ignore Game Object",
		"category":"Physics",
		"image":"./images/TriggerEventIgnoreGameObject.png",
		"description":"The same functionality as Trigger Event except the game object set as 'ignoreThis' will be ignored. ",
		"params": [
			{
				"name":"Ignore This",
				"description":"The gameobject you want the trigger to ignore."
			},
			{
				"name":"Trigger",
				"description":"TODO"
			},
			{
				"name":"Collide Tag",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Store Collider",
				"description":"TODO"
			},
			{
				"name":"Game Object Hit",
				"description":"The gameobject that activated the trigger. Use this to debug or instead of an additional get trigger info action."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Event Multi",
		"category":"Physics",
		"image":"./images/TriggerEventMulti.png",
		"description":"Detect trigger collisions between GameObjects that have RigidBody/Collider components.",
		"params": [
			{
				"name":"Collide Tags",
				"description":"Filter by Tag."
			},
			{
				"name":"Send Events",
				"description":"Event to send if the trigger event is detected."
			},
			{
				"name":"Game Object",
				"description":"The GameObject to detect trigger events on."
			},
			{
				"name":"Trigger",
				"description":"The type of trigger event to detect."
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Event Once Per Object",
		"category":"Physics",
		"image":"./images/TriggerEventOncePerObject.png",
		"description":"The same functionality as Trigger Event except a specific game object will only register as a trigger event once. ",
		"params": [
			{
				"name":"Trigger",
				"description":"TODO"
			},
			{
				"name":"Collide Tag",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Store Collider",
				"description":"TODO"
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Game Object Hit",
				"description":"The gameobject that activated the trigger. Use this to debug or instead of an additional get trigger info action."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Event Store Hit Object",
		"category":"Physics",
		"image":"./images/TriggerEventStoreHitObject.png",
		"description":"Detect collisions with objects that have RigidBody components. \nNOTE: The system events, TRIGGER ENTER, TRIGGER STAY, and TRIGGER EXIT are sent when any object collides with the trigger. Use this action to filter collisions by Tag.",
		"params": [
			{
				"name":"Trigger",
				"description":"The type of trigger event to detect."
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the trigger event is detected."
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			},
			{
				"name":"Hit Object",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Event Toggle",
		"category":"Physics",
		"image":"./images/TriggerEventToggle.png",
		"description":"Detect trigger collisions between GameObjects that have RigidBody/Collider components and toggle a boolean when triggered.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to detect trigger events on."
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag."
			},
			{
				"name":"Trigger Enter Event",
				"description":"Event to send if the trigger event is detected."
			},
			{
				"name":"Trigger Exit Event",
				"description":"Event to send when the trigger has exited."
			},
			{
				"name":"Is Triggered",
				"description":"true while an collider is triggering"
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Wheel Collider Get World Pose",
		"category":"Physics",
		"image":"./images/WheelColliderGetWorldPose.png",
		"description":"Gets the world space pose of the wheel accounting for ground contact, suspension limits, steer angle, and rotation angle (angles in degrees).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the WheelCollider component."
			},
			{
				"name":"Position",
				"description":"The WheelCollider World Position"
			},
			{
				"name":"Rotation",
				"description":"The WheelCollider World rotation"
			},
			{
				"name":"Transform",
				"description":"Matches the wheel Collider world Position and Rotation"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Add Float",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsAddFloat.png",
		"description":"Adds a value to a playerprefs float identified by key. WARNING!! use PlayerPrefs only at key moments",
		"params": [
			{
				"name":"Key",
				"description":"Case sensitive key."
			},
			{
				"name":"Add",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Add Int",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsAddInt.png",
		"description":"Adds a value to a playerprefs int identified by key. WARNING!! use PlayerPrefs only at key moments",
		"params": [
			{
				"name":"Key",
				"description":"Case sensitive key."
			},
			{
				"name":"Add",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Bool Test",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsBoolTest.png",
		"description":"Sends event based on the value corresponding to key in the preference file.",
		"params": [
			{
				"name":"Key",
				"description":"Case sensitive key."
			},
			{
				"name":"Bool Variable",
				"description":"The bool value of this playerpref key."
			},
			{
				"name":"Is True",
				"description":"Event to send if the PlayerPref Boolvalue is True."
			},
			{
				"name":"Is False",
				"description":"Event to send if the PlayerPref Bool value is False."
			},
			{
				"name":"Key Not Found",
				"description":"Event to send if the PlayerPref Bool key was not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Get Bool",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsGetBool.png",
		"description":"Returns the value corresponding to key in the preference file if it exists. Uses ints to save bool value, as playerprefs doesn't have bool type built in.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Variables",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Save",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsSave.png",
		"description":"Saves the Player Prefs. You should only need this on some platform like PS4",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Set Bool",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsSetBool.png",
		"description":"Sets the value of the preference identified by key. Uses ints to save bool value, as playerprefs doesn't have bool type built in.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Values",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Numeric Spring",
		"category":"ProceduralAnimation",
		"image":"./images/NumericSpring.png",
		"description":"Numerical spring behavior. You can apply this technique to all sorts of numeric properties. Do not require physics, totally math driven. Runs every frame by default",
		"params": [
			{
				"name":"Target Position",
				"description":"The desired target position to reach"
			},
			{
				"name":"Damping Ratio",
				"description":"The damping ratio. A damping ratio of zero means there is no damping at all, and the oscillation just continues indefinitely.\nA damping ratio between zero and one means the spring system is underdamped; oscillation happens, and the magnitude of oscillation decreases exponentially over time.\nA damping ratio of 1 signifies a critically damped system, where this is the point the system stops showing oscillation, but only converging to the target value exponentially.\nAny damping ratio above 1 means the system is overdamped, and the effect of springing becomes more draggy as the damping ratio increases."
			},
			{
				"name":"Angular Frequency",
				"description":"The angular frequency of the oscillation ( will be multiplied by PI). An angular frequency of 2pi (radians per second) means the oscillation completes one full period over one second, i.e. 1Hz."
			},
			{
				"name":"Position",
				"description":"The Position of the spring"
			},
			{
				"name":"Velocity",
				"description":"The Velocity of the spring"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Prototype Create Game Object",
		"category":"Prototype",
		"image":"./images/PrototypeCreateGameObject.png",
		"description":"Creates a Game Object out of a Prototype",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to create. Must be a Prototype"
			},
			{
				"name":"Spawn Point",
				"description":"Optional Spawn Point."
			},
			{
				"name":"Position",
				"description":"Position. If a Spawn Point is defined, this is used as a local offset from the Spawn Point position."
			},
			{
				"name":"Rotation",
				"description":"Rotation. NOTE: Overrides the rotation of the Spawn Point."
			},
			{
				"name":"Store Object",
				"description":"Optionally store the created object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Prototype On Return To Pool Event",
		"category":"Prototype",
		"image":"./images/PrototypeOnReturnToPoolEvent.png",
		"description":"Watch OnReturntoPool Event. If on the instance itself, you'll have one frame before the instance is disabled",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to create. Must be a Prototype"
			},
			{
				"name":"On Return To Pool",
				"description":"Event Sent when gameobject is returned to pool"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Prototype On Return To Pool",
		"category":"Prototype",
		"image":"./images/PrototypeOnReturnToPool.png",
		"description":"Disable a Prototype Object, returning it to its pool. use OnReturntoPool Event action to get an event from a return call.",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to create. Must be a Prototype"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Quality Index From Name",
		"category":"QualitySettings",
		"image":"./images/GetQualityIndexFromName.png",
		"description":"Gets the name of a quality settings from an index.",
		"params": [
			{
				"name":"Quality Name",
				"description":"The name of the quality level to find"
			},
			{
				"name":"Quality Index",
				"description":"The index of this quality level name."
			},
			{
				"name":"Quality Found Event",
				"description":"Event sent if quality name was found in the quality settings list"
			},
			{
				"name":"Quality Not Found Event",
				"description":"Event sent if quality name was not found in the quality settings list"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Quality Level",
		"category":"QualitySettings",
		"image":"./images/GetQualityLevel.png",
		"description":"Sets a new graphics quality level.",
		"params": [
			{
				"name":"Quality Index",
				"description":"The index of the current quality level"
			},
			{
				"name":"Quality Name",
				"description":"The name of the current quality level"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Quality Name From Index",
		"category":"QualitySettings",
		"image":"./images/GetQualityNameFromIndex.png",
		"description":"Gets the index of a quality settings from its name.",
		"params": [
			{
				"name":"Quality Index",
				"description":"The index of the quality level to find"
			},
			{
				"name":"Quality Name",
				"description":"The name of this quality level index."
			},
			{
				"name":"Quality Found Event",
				"description":"Event sent if quality index was found in the quality settings list"
			},
			{
				"name":"Quality Not Found Event",
				"description":"Event sent if quality index was not found in the quality settings list"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quality Decrease Level",
		"category":"QualitySettings",
		"image":"./images/QualityDecreaseLevel.png",
		"description":"Decrease the graphics quality level.",
		"params": [
			{
				"name":"Apply Expensive Changes",
				"description":"Set to True to force expensive changes to be applied. Only apply anti-aliasing if applyExpensiveChanges is true."
			},
			{
				"name":"Quality Index",
				"description":"The index of the new quality level"
			},
			{
				"name":"Quality Name",
				"description":"The name of the new quality level"
			},
			{
				"name":"Limit Reached Event",
				"description":"Event fired when the level reached is the lowest level available"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quality Increase Level",
		"category":"QualitySettings",
		"image":"./images/QualityIncreaseLevel.png",
		"description":"Increase the graphics quality level.",
		"params": [
			{
				"name":"Apply Expensive Changes",
				"description":"Set to True to force expensive changes to be applied. Only apply anti-aliasing if applyExpensiveChanges is true."
			},
			{
				"name":"Quality Index",
				"description":"The index of the new quality level"
			},
			{
				"name":"Quality Name",
				"description":"The name of the new quality level"
			},
			{
				"name":"Limit Reached Event",
				"description":"Event fired when the level reached is the highest level available"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Anisotropic Filtering",
		"category":"QualitySettings",
		"image":"./images/SetAnisotropicFiltering.png",
		"description":"Global anisotropic filtering mode. 1 = Disable // 2 = Enable // 3 = ForceEnable",
		"params": [
			{
				"name":"Level",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Blend Weights",
		"category":"QualitySettings",
		"image":"./images/SetBlendWeights.png",
		"description":"The Blend weights can be set to either One Bone, Two Bones or Four Bones.",
		"params": [
			{
				"name":"Level",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Graphics Active Tier",
		"category":"QualitySettings",
		"image":"./images/SetGraphicsActiveTier.png",
		"description":"Shader hardware tier classification for current device.",
		"params": [
			{
				"name":"Tier",
				"description":"The torque forceMode"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Master Texture Limit",
		"category":"QualitySettings",
		"image":"./images/SetMasterTextureLimit.png",
		"description":"A texture size limit applied to all textures. Tip: 0 is Off - 1 is half - 2 is a quarter - etc.. ",
		"params": [
			{
				"name":"Level",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Quality Level",
		"category":"QualitySettings",
		"image":"./images/SetQualityLevel.png",
		"description":"Sets a new graphics quality level.",
		"params": [
			{
				"name":"Quality Name",
				"description":"The name of the quality level so to say. leave empty if using quality index"
			},
			{
				"name":"Quality Index",
				"description":"The index of the quality level so to say. 0 is the first quality level in the list. Leave to 'none' when using 'quality name'."
			},
			{
				"name":"Apply Expensive Changes",
				"description":"Set to True to force expensive changes to be applied when changing quality level"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set V Sync Count",
		"category":"QualitySettings",
		"image":"./images/SetVSyncCount.png",
		"description":"The number of VSyncs that should pass between each frame. Value must be 0, 1 2 3 o 4",
		"params": [
			{
				"name":"Level",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Direction To Rotation",
		"category":"Quaternion",
		"image":"./images/ConvertDirectionToRotation.png",
		"description":"Creates a rotation that looks along a direction",
		"params": [
			{
				"name":"Direction Start",
				"description":"The Direction starting GameObject"
			},
			{
				"name":"Direction End",
				"description":"The Direction ending GameObject"
			},
			{
				"name":"Or Direction Vector",
				"description":"Or The Direction as a vector"
			},
			{
				"name":"Invert Direction",
				"description":"Invert the Direction"
			},
			{
				"name":"Up Vector",
				"description":"The up direction"
			},
			{
				"name":"Result",
				"description":"Store the the rotation variable."
			},
			{
				"name":"Rotate Game Object",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Quaternion Angle",
		"category":"Quaternion",
		"image":"./images/GetQuaternionAngle.png",
		"description":"Gets the angle between two quaternions",
		"params": [
			{
				"name":"Game Object 1",
				"description":"First GameObject rotation"
			},
			{
				"name":"Or Quaternion 1",
				"description":"Or First Quaternion"
			},
			{
				"name":"Game Object 2",
				"description":"First GameObject rotation"
			},
			{
				"name":"Or Quaternion 2",
				"description":"Or Second Quaternion"
			},
			{
				"name":"Angle",
				"description":"the Angle between the two quaternion"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Rotation",
		"category":"Math",
		"image":"./images/RandomRotation.png",
		"description":"Sets a Quaternion Variable or vector3 variable to a random rotation.",
		"params": [
			{
				"name":"Store Result",
				"description":"Store the random rotation"
			},
			{
				"name":"Store Euler Result",
				"description":"Store the random rotation as euler angles"
			},
			{
				"name":"Uniform",
				"description":"Seems to be related to the randomization algorythm, could provide better results when checked to avoid similar rotations over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Characters",
		"category":"Random",
		"image":"./images/RandomCharacters.png",
		"description":"Returns a random set of characters in given range(s). Optionally includes further ranges or lets you define the range yourself. Useful for cryptography or all kinds of random behavior.",
		"params": [
			{
				"name":"Custom Range",
				"description":"Define a custom range of characters that should be picked from. Keep in mind that the following options are additive to the custom range (e.g. when 'Include Numbers' is enabled it adds all numbers to the custom range)."
			},
			{
				"name":"Include Upper Case Letters",
				"description":"Wheter to also include the lower-case variants."
			},
			{
				"name":"Include Lower Case Letters",
				"description":"Wheter to also include the lower-case variants."
			},
			{
				"name":"Include Numbers",
				"description":"Wheter to also include numbers (0-9)."
			},
			{
				"name":"Include Special Characters",
				"description":"Wheter to also include commonly used special characters ('$', '%', '#', '@', '!', '*', '?', ';', ',', ':', '.', '^', '&')."
			},
			{
				"name":"Include Umlauts",
				"description":"Wheter to also include umlauts (Ä, Ö, Ü and ß). Takes 'Inlude Lower Case' into account."
			},
			{
				"name":"Result Length",
				"description":"Defines how many random characters should be added to the resulting string."
			},
			{
				"name":"Result",
				"description":"Store the result in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to repeat this action on every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Float Around Range",
		"category":"Random",
		"image":"./images/RandomFloatAroundRange.png",
		"description":"Receive a random float value around a specified range. If the range is set to 1 and the starting float is 0.5, the result can be anything between -0.5 and 1.5. Useful to get variations from fixed values like attack damage, drop chances and combination success rates.",
		"params": [
			{
				"name":"Start Float",
				"description":"The float value the range wraps around."
			},
			{
				"name":"Range",
				"description":"The range to go up or down from the start value. Imagine a circle: The circumference is the range and any radius in between can be the result."
			},
			{
				"name":"Result",
				"description":"The random endresult inside the specified range."
			},
			{
				"name":"Unsigned",
				"description":"If true, goes only up from the start value, not below (In the example: between 0.5 - 1.5 instead of -0.5 - 1.5)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat this action every frame until state change."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Int Around Range",
		"category":"Random",
		"image":"./images/RandomIntAroundRange.png",
		"description":"Receive a random int value around a specified range. If the range is set to 5 and the starting float is 24, the result can be anything between 19 and 29. Useful to get variations from fixed values like attack damage, drop chances and combination success rates.",
		"params": [
			{
				"name":"Start Int",
				"description":"The int value the range wraps around."
			},
			{
				"name":"Range",
				"description":"The range to go up or down from the start value. Imagine a circle: The circumference is the range and any radius in between can be the result."
			},
			{
				"name":"Result",
				"description":"The random endresult inside the specified range."
			},
			{
				"name":"Unsigned",
				"description":"If true, goes only up from the start value, not below (In the example: between 24 - 29 instead of 19 - 29)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat this action every frame until state change."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Point Between Game Objects",
		"category":"Random",
		"image":"./images/RandomPointBetweenGameObjects.png",
		"description":"Returns a random point on the distance between two GameObjects.",
		"params": [
			{
				"name":"First Game Object",
				"description":"The starting point of the slope."
			},
			{
				"name":"Second Game Object",
				"description":"The last point on the imaginary slope."
			},
			{
				"name":"Space",
				"description":"Wheter to return the random point in local or world space."
			},
			{
				"name":"Store Point",
				"description":"A random result between the given points."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Point On Slope",
		"category":"Random",
		"image":"./images/RandomPointOnSlope.png",
		"description":"Returns a random point between two Vector3 variables. Useful for 2.5D games, e.g. if you want GameObjects to spawn further down the farther away they are or vice versa.",
		"params": [
			{
				"name":"Slope Start",
				"description":"The starting point of the slope."
			},
			{
				"name":"Slope End",
				"description":"The last point on the imaginary slope."
			},
			{
				"name":"Store Point",
				"description":"A random result between the given points."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Weighted Vector3",
		"category":"Random",
		"image":"./images/RandomWeightedVector3.png",
		"description":"Pick a random weighted Vector3 picked from an array of Vector3's.",
		"params": [
			{
				"name":"Amount",
				"description":"TODO"
			},
			{
				"name":"Weights",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Repeat",
				"description":"Can hit the same number twice in a row"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random Audio Clip",
		"category":"Random",
		"image":"./images/SelectRandomAudioClip.png",
		"description":"Selects a Random AudioClip from an array of AudioClip.",
		"params": [
			{
				"name":"Objects",
				"description":"TODO"
			},
			{
				"name":"Weights",
				"description":"TODO"
			},
			{
				"name":"Store Object",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random Object",
		"category":"Random",
		"image":"./images/SelectRandomObject.png",
		"description":"Selects a Random Object from an array of Objects.",
		"params": [
			{
				"name":"Objects",
				"description":"TODO"
			},
			{
				"name":"Weights",
				"description":"TODO"
			},
			{
				"name":"Store Object",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fix Rect Negative Size",
		"category":"Rect",
		"image":"./images/FixRectNegativeSize.png",
		"description":"Fixes negative sizes of a rect so that width and height are always positive, moving x and y values accordingly",
		"params": [
			{
				"name":"Rect",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Contains 2",
		"category":"Rect",
		"image":"./images/RectContains2.png",
		"description":"Tests if a point is inside a rectangle. It also takes in account negative width and height",
		"params": [
			{
				"name":"Rectangle",
				"description":"Rectangle to test."
			},
			{
				"name":"Point",
				"description":"Point to test."
			},
			{
				"name":"X",
				"description":"Specify/override X value."
			},
			{
				"name":"Y",
				"description":"Specify/override Y value."
			},
			{
				"name":"True Event",
				"description":"Event to send if the Point is inside the Rectangle."
			},
			{
				"name":"False Event",
				"description":"Event to send if the Point is outside the Rectangle."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Smooth Damp",
		"category":"Rect",
		"image":"./images/RectSmoothDamp.png",
		"description":"Gradually changes a rect towards a desired goal over time. The value is smoothed by some spring-damper like function, which will never overshoot. The function can be used to smooth any kind of value, positions, colors, scalars.",
		"params": [
			{
				"name":"Current",
				"description":"Start/Current rect"
			},
			{
				"name":"Target",
				"description":"Target rect"
			},
			{
				"name":"Current Velocity",
				"description":"The current velocity, this value is modified by the function every time you call it."
			},
			{
				"name":"Smooth Time",
				"description":"Approximately the time it will take to reach the target. A smaller value will reach the target faster."
			},
			{
				"name":"Max Speed",
				"description":"Optionally allows you to clamp the maximum speed."
			},
			{
				"name":"Done",
				"description":"Event sent when current value is almost equal to the target value"
			},
			{
				"name":"Is Done",
				"description":"true when current value is almost equal to the target value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Rect Value",
		"category":"Rect",
		"image":"./images/SetMultiRectValue.png",
		"description":"Sets the value of many Rect Variable.",
		"params": [
			{
				"name":"Rect Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Local Scale",
		"category":"RectTransform",
		"image":"./images/RectTransformSetLocalScale.png",
		"description":"Set the local scale of this RectTransform.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Scale",
				"description":"The scale. Set to none for no effect"
			},
			{
				"name":"X",
				"description":"The x component of the scale. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"The y component of the scale. Set to none for no effect"
			},
			{
				"name":"Z",
				"description":"The z component of the scale. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Mesh Renderer",
		"category":"Renderer",
		"image":"./images/enableMeshRenderer.png",
		"description":"TODO",
		"params": [
			{
				"name":"Owner",
				"description":"TODO"
			},
			{
				"name":"Enable",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Renderer Set Order In Layer",
		"category":"Renderer",
		"image":"./images/RendererSetOrderInLayer.png",
		"description":"TODO",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Renderer attached."
			},
			{
				"name":"Order In Layer",
				"description":"Provide Int to set Order in Layer."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Renderer Set Sorting Layer",
		"category":"Sprites",
		"image":"./images/RendererSetSortingLayer.png",
		"description":"TODO",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SortingGroup attached."
			},
			{
				"name":"Sorting Layer Name",
				"description":"The Layer Name to set as Sorting Layer."
			},
			{
				"name":"Or Sorting Layer ID",
				"description":"The Layer Id to set as Sorting Layer. If set, SortingLayerName is ignored"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Line Renderer Position",
		"category":"Renderer",
		"image":"./images/SetLineRendererPosition.png",
		"description":"Set a particular position of a lineRenderer",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the LineRenderer component."
			},
			{
				"name":"Index",
				"description":"The index"
			},
			{
				"name":"Position",
				"description":"The Position"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Line Renderer Positions Count",
		"category":"Renderer",
		"image":"./images/SetLineRendererPositionsCount.png",
		"description":"Set the number of positions of a lineRenderer",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the LineRenderer component."
			},
			{
				"name":"Count",
				"description":"The number of positions"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Line Renderer Set Colors",
		"category":"Renderer",
		"image":"./images/SetLineRendererSetColors.png",
		"description":"Set the start and end colors of a lineRenderer",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the LineRenderer component."
			},
			{
				"name":"Start Color",
				"description":"The start Color"
			},
			{
				"name":"End Color",
				"description":"The end Color"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Line Renderer Set Widths",
		"category":"Renderer",
		"image":"./images/SetLineRendererSetWidths.png",
		"description":"Set the start and end widths of a lineRenderer",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the LineRenderer component."
			},
			{
				"name":"Start Width",
				"description":"The start Width"
			},
			{
				"name":"End Width",
				"description":"The end Width"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sorting Renderer Layer",
		"category":"Renderer",
		"image":"./images/SetSortingRendererLayer.png",
		"description":"Set any renderer Sorting Layer (Sprite, Particle, Mesh, etc).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Renderer."
			},
			{
				"name":"Game Object Renderer",
				"description":"If more than one renderer on gameobject then select Renderer Object."
			},
			{
				"name":"Layer String",
				"description":"Select Sorting layer name."
			},
			{
				"name":"Layer Order",
				"description":"Edit Sorting Order in Layer"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sprite Renderer Get Sprite",
		"category":"Renderer",
		"image":"./images/SpriteRendererGetSprite.png",
		"description":"Gets the image sprite of a SpriteRenderer component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sprite",
				"description":"The source sprite of the SpriteRenderer component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Ambient Equator Color",
		"category":"RenderSettings",
		"image":"./images/GetAmbientEquatorColor.png",
		"description":"Gets the RenderSettings Ambient Equator Color.",
		"params": [
			{
				"name":"Ambient Equator Color",
				"description":"Store the Ambient Equator Color"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Ambient Ground Color",
		"category":"RenderSettings",
		"image":"./images/GetAmbientGroundColor.png",
		"description":"Gets the RenderSettings Ambient Ground Color.",
		"params": [
			{
				"name":"Ambient Ground Color",
				"description":"Store the Ambient Ground Color"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Ambient Intensity",
		"category":"RenderSettings",
		"image":"./images/GetAmbientIntensity.png",
		"description":"Gets the RenderSettings Ambient Intensity.",
		"params": [
			{
				"name":"Ambient Intensity",
				"description":"Store the Ambient Intensity"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Ambient Light",
		"category":"RenderSettings",
		"image":"./images/GetAmbientLight.png",
		"description":"Get the ambient light color",
		"params": [
			{
				"name":"Ambient Light",
				"description":"The ambient light color"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Ambient Mode",
		"category":"RenderSettings",
		"image":"./images/GetAmbientMode.png",
		"description":"Gets the RenderSettings Ambient mode.",
		"params": [
			{
				"name":"Ambient Mode",
				"description":"Store the Ambient mode"
			},
			{
				"name":"Ambient Mode As String",
				"description":"Store the Ambient mode as a string"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Ambient Sky Color",
		"category":"RenderSettings",
		"image":"./images/GetAmbientSkyColor.png",
		"description":"Gets the RenderSettings Ambient Sky Color.",
		"params": [
			{
				"name":"Ambient Sky Color",
				"description":"Store the Ambient Sky Color"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Flare Strength",
		"category":"RenderSettings",
		"image":"./images/GetFlareStrength.png",
		"description":"Get the intensity of all flares in the scene.",
		"params": [
			{
				"name":"Flare Strength",
				"description":"The intensity of all flares in the scene."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fog Color",
		"category":"RenderSettings",
		"image":"./images/GetFogColor.png",
		"description":"Get the color of the fog",
		"params": [
			{
				"name":"Color",
				"description":"The fog color"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Fog setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fog Density",
		"category":"RenderSettings",
		"image":"./images/GetFogDensity.png",
		"description":"Get the density of the fog",
		"params": [
			{
				"name":"Density",
				"description":"The fog start distance"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Fog setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fog End Distance",
		"category":"RenderSettings",
		"image":"./images/GetFogEndDistance.png",
		"description":"Get the end distance of the fog",
		"params": [
			{
				"name":"End Distance",
				"description":"The fog end distance"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Fog setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fog Start Distance",
		"category":"RenderSettings",
		"image":"./images/GetFogStartDistance.png",
		"description":"Get the start distance of the fog",
		"params": [
			{
				"name":"Start Distance",
				"description":"The fog start distance"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Fog setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Halo Strength",
		"category":"RenderSettings",
		"image":"./images/GetHaloStrength.png",
		"description":"Get the Size of the Light halos.",
		"params": [
			{
				"name":"Halo Strength",
				"description":"The size of the Light halos."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Fog Enabled",
		"category":"RenderSettings",
		"image":"./images/IsFogEnabled.png",
		"description":"Check if a the fog is enabled",
		"params": [
			{
				"name":"True Event",
				"description":"Event sent is Fog is enabled"
			},
			{
				"name":"False Event",
				"description":"Event sent is Fog is disabled"
			},
			{
				"name":"Store",
				"description":"True is fog is enabled."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Enable Fog setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Ambient Equator Color",
		"category":"RenderSettings",
		"image":"./images/SetAmbientEquatorColor.png",
		"description":"Sets the RenderSettings Ambient Equator Color.",
		"params": [
			{
				"name":"Ambient Equator Color",
				"description":"The Ambient Equator Color"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Ambient Ground Color",
		"category":"RenderSettings",
		"image":"./images/SetAmbientGroundColor.png",
		"description":"Sets the RenderSettings Ambient Ground Color.",
		"params": [
			{
				"name":"Ambient Ground Color",
				"description":"The Ambient Ground Color"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Ambient Intensity",
		"category":"RenderSettings",
		"image":"./images/SetAmbientIntensity.png",
		"description":"Sets the RenderSettings Ambient Intensity.",
		"params": [
			{
				"name":"Ambient Intensity",
				"description":"The Ambient Intensity"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Ambient Mode",
		"category":"RenderSettings",
		"image":"./images/SetAmbientMode.png",
		"description":"Sets the RenderSettings Ambient mode.",
		"params": [
			{
				"name":"Ambient Mode",
				"description":"The Ambient Mode"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Ambient Sky Color",
		"category":"RenderSettings",
		"image":"./images/SetAmbientSkyColor.png",
		"description":"Sets the RenderSettings Ambient Sky Color.",
		"params": [
			{
				"name":"Ambient Sky Color",
				"description":"The Ambient Sky Color"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fog End Distance",
		"category":"RenderSettings",
		"image":"./images/SetFogEndDistance.png",
		"description":"Set the end distance of the fog",
		"params": [
			{
				"name":"End Distance",
				"description":"The end distance"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Enable Fog setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fog Start Distance",
		"category":"RenderSettings",
		"image":"./images/SetFogStartDistance.png",
		"description":"Set the start distance of the fog",
		"params": [
			{
				"name":"Start Distance",
				"description":"The start distance"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Enable Fog setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Light Culling Mask",
		"category":"RenderSettings",
		"image":"./images/SetLightCullingMask.png",
		"description":"Sets the Culling Mask used by the light.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Culling Mask",
				"description":"Cull these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you cull all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Render Queue",
		"category":"RenderSettings",
		"image":"./images/SetRenderQueue.png",
		"description":"Sets the RenderQueue of an game object's materials. The default render queue for Transparent objects is 3000. If you want something to draw on top, choose a higher queue number",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Renderer."
			},
			{
				"name":"Queues",
				"description":"Render queue"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Game Objects Resources With Name Containing",
		"category":"GameObject",
		"image":"./images/FindGameObjectsResourcesWithNameContaining.png",
		"description":"Finds any GameObject(s) with a Name that contains a particular set of String and stores the count of them in an FSM Int.",
		"params": [
			{
				"name":"With Name Containing",
				"description":"Find any GameObject(s) with a Name containing this string and Count the number of them."
			},
			{
				"name":"Case Insensitive",
				"description":"If this bool is set to True then the String search is case insensitive."
			},
			{
				"name":"Store Count",
				"description":"Store the result in an FSM Int of the Count of the found GameObject(s)."
			},
			{
				"name":"Store Results",
				"description":"Store the result in a GameObject variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Resources Count",
		"category":"Resources",
		"image":"./images/GetResourcesCount.png",
		"description":"Get the number of files in a resource directory.",
		"params": [
			{
				"name":"Folder Name",
				"description":"The name of the folder."
			},
			{
				"name":"File Count",
				"description":"The number of files in the folder"
			},
			{
				"name":"No Resources Event",
				"description":"Event sent if no resources found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Resources Load",
		"category":"Resources",
		"image":"./images/ResourcesLoad.png",
		"description":"Loads an asset stored at path in a Resources folder. The path is relative to any Resources folder inside the Assets folder of your project, extensions must be omitted.",
		"params": [
			{
				"name":"Asset Path",
				"description":"The path is relative to any Resources folder inside the Assets folder of your project, extensions must be omitted."
			},
			{
				"name":"Store Asset",
				"description":"The stored asset"
			},
			{
				"name":"Do Not Spawn",
				"description":"TODO"
			},
			{
				"name":"Success Event",
				"description":"TODO"
			},
			{
				"name":"Failure Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Resources Load All",
		"category":"Resources",
		"image":"./images/ResourcesLoadAll.png",
		"description":"Loads all assets of a given type stored at path in a Resources folder. The path is relative to any Resources folder inside the Assets folder of your project, extensions must be omitted.",
		"params": [
			{
				"name":"Asset Path",
				"description":"The path is relative to any Resources folder inside the Assets folder of your project, extensions must be omitted."
			},
			{
				"name":"Store Assets",
				"description":"The stored assets"
			},
			{
				"name":"Success Event",
				"description":"TODO"
			},
			{
				"name":"Failure Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Resources Load Asynch",
		"category":"Resources",
		"image":"./images/ResourcesLoadAsynch.png",
		"description":"Asynchronously Loads an asset stored at path in a Resources folder. The path is relative to any Resources folder inside the Assets folder of your project, extensions must be omitted.",
		"params": [
			{
				"name":"Asset Path",
				"description":"The path is relative to any Resources folder inside the Assets folder of your project, extensions must be omitted."
			},
			{
				"name":"Store Asset",
				"description":"The stored asset"
			},
			{
				"name":"Do Not Spawn",
				"description":"if true, asset will not be spawned directly"
			},
			{
				"name":"Success",
				"description":"true if the loading succedded or not"
			},
			{
				"name":"Is Done",
				"description":"The isDone property of the asynch request"
			},
			{
				"name":"Progress",
				"description":"The progress of the asynch loading"
			},
			{
				"name":"Done Event",
				"description":"Event sent when loading is done"
			},
			{
				"name":"Failure Event",
				"description":"Event sent when loading failed"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Resources Un Load Unused Assets",
		"category":"Resources",
		"image":"./images/ResourcesUnLoadUnusedAssets.png",
		"description":"UnLoads unused Resources. Be careful to use it only once at a time as it crates hickups especially on mobile.",
		"params": [
			{
				"name":"Unload Done Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Check If Full Screen",
		"category":"Screen",
		"image":"./images/CheckIfFullScreen.png",
		"description":"Checks if screen is full screen",
		"params": [
			{
				"name":"Is Full Screen",
				"description":"True if Application is full screen"
			},
			{
				"name":"Is Full Screen Event",
				"description":"Event to send if application is full screen"
			},
			{
				"name":"Is Not Full Screen Event",
				"description":"Event to send if application is not full screen"
			},
			{
				"name":"Every Frame",
				"description":"Runs everyframe. Event are sent discretly, on action first execution, and then only when changes occur"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Screen Show Cursor",
		"category":"Screen",
		"image":"./images/ScreenShowCursor.png",
		"description":"Show or hide the mouse Cursor.",
		"params": [
			{
				"name":"Show Cursor",
				"description":"The flag to show or hide the cursor"
			},
			{
				"name":"Reset On Exit",
				"description":"Revert the cursor to its visibility before the action began"
			},
			{
				"name":"Every Frame",
				"description":"Use this to animate the cursor visibility over time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Cursor Lock State",
		"category":"Screen",
		"image":"./images/SetCursorLockState.png",
		"description":"set the lock mode of the mouse cursor",
		"params": [
			{
				"name":"Lock Mode",
				"description":"The LockMode to set the cursor at"
			},
			{
				"name":"Reset On Exit",
				"description":"If True will revert to the original value when exiting state"
			},
			{
				"name":"Everyframe",
				"description":"Run every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Cursor Visible",
		"category":"Screen",
		"image":"./images/SetCursorVisible.png",
		"description":"Set the visibility of the mouse cursor",
		"params": [
			{
				"name":"Visible",
				"description":"The visible value to set the cursor with"
			},
			{
				"name":"Reset On Exit",
				"description":"If True will revert to the original value when exiting state"
			},
			{
				"name":"Everyframe",
				"description":"Run every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Call Method Advanced",
		"category":"ScriptControl",
		"image":"./images/CallMethodAdvanced.png",
		"description":"Call a method in a behaviour.",
		"params": [
			{
				"name":"Behaviour",
				"description":"Store the component in an Object variable.\nNOTE: Set theObject variable's Object Type to get a component of that type. E.g., set Object Type to UnityEngine.AudioListener to get the AudioListener component on the camera."
			},
			{
				"name":"Method Name",
				"description":"Name of the method to call on the component"
			},
			{
				"name":"Parameters",
				"description":"Method paramters. NOTE: these must match the method's signature!"
			},
			{
				"name":"Store Result",
				"description":"Store the result of the method call."
			},
			{
				"name":"Manual UI",
				"description":"Use the old manual editor UI."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Behaviour",
		"category":"ScriptControl",
		"image":"./images/DestroyBehaviour.png",
		"description":"Destroy a Behaviour on a GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Behaviour."
			},
			{
				"name":"Behaviour",
				"description":"The name of the Behaviour to destroy."
			},
			{
				"name":"Component",
				"description":"Optionally drag a component directly into this field (behavior name will be ignored)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Script",
		"category":"ScriptControl",
		"image":"./images/EnableScript.png",
		"description":"Enables/Disables a Script in a single GameObject or a range by tag (with layer filter).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Behaviour."
			},
			{
				"name":"Component",
				"description":"Optionally drag a script directly into this field (Script name will be ignored)."
			},
			{
				"name":"Script",
				"description":"The name of the Script to enable/disable. Note: No space in script name. Name must be same as Project view name"
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Incl Children",
				"description":"Should the object Children be included?"
			},
			{
				"name":"All Scripts",
				"description":"Set to True to enable/disable all scripts in gameobject (Script name or component will be ignored)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Script By Tag",
		"category":"ScriptControl",
		"image":"./images/EnableScriptByTag.png",
		"description":"Enables/Disables a Script by Tag (with layer filter).",
		"params": [
			{
				"name":"Script",
				"description":"The name of the Script to enable/disable. Note: No space in script name. Name must be same as Project view name"
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Incl Children",
				"description":"Should the object Children be included?"
			},
			{
				"name":"All Scripts",
				"description":"Set to True to enable/disable all scripts in gameobject (Script name or component will be ignored)."
			},
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Layer Filter On",
				"description":"Also filter by layer?"
			},
			{
				"name":"Incl Layer Filter On Child",
				"description":"Filter layer on child?"
			},
			{
				"name":"Layer",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Static Property",
		"category":"ScriptControl",
		"image":"./images/GetStaticProperty.png",
		"description":"Get a public static property from a class.",
		"params": [
			{
				"name":"Class Name",
				"description":"Full path to the class that contains the static method."
			},
			{
				"name":"Property Name",
				"description":"The public static property to set."
			},
			{
				"name":"Property Value",
				"description":"Property Value. NOTE: must match the property's type"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Fsm Enabled",
		"category":"ScriptControl",
		"image":"./images/IsFsmEnabled.png",
		"description":"Gets the Enabled state of a Fsm Component.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Is Enabled",
				"description":"Store the enable state of the targeted fsm"
			},
			{
				"name":"Is Enabled Event",
				"description":"Event to send if Fsm is enabled"
			},
			{
				"name":"Is Disabled Event",
				"description":"Event to send if Fsm is disabled"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Message Vector3 Out",
		"category":"ScriptControl",
		"image":"./images/SendMessageVector3Out.png",
		"description":"Sends a Message to a Game Object with a specific variable holding reference to a fsmVector3. See Unity SendMessage docs.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Options",
				"description":"TODO"
			},
			{
				"name":"Function Name",
				"description":"TODO"
			},
			{
				"name":"Out Vector 3",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Static Property",
		"category":"ScriptControl",
		"image":"./images/SetStaticProperty.png",
		"description":"Set a public static property in a class.",
		"params": [
			{
				"name":"Class Name",
				"description":"Full path to the class that contains the static method."
			},
			{
				"name":"Property Name",
				"description":"The public static property to set."
			},
			{
				"name":"Property Value",
				"description":"Property Value. NOTE: must match the property's type"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Align To Direction",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetAlignToDirection.png",
		"description":"Set the align To Direction of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Align To Direction",
				"description":"The align to Direction flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Angle",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetAngle.png",
		"description":"Set the Angle of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Angle",
				"description":"The shape angle"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Arc Mode",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetArcMode.png",
		"description":"Set the arcMode of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Arc Mode",
				"description":"The shape radius"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Arc Speed",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetArcSpeed.png",
		"description":"Set Arc Speed of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Arc Speed",
				"description":"The shape arcSpeed"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Arc Speed Multiplier",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetArcSpeedMultiplier.png",
		"description":"Set Arc Speed Multiplier of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Arc Speed Multiplier",
				"description":"The shape arc Speed Multiplier"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Arc Spread",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetArcSpread.png",
		"description":"Set Arc Spread of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Arc Spread",
				"description":"The shape arcSpread"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Box",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetBox.png",
		"description":"Set the box of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Box",
				"description":"The shape box"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Enabled",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetEnabled.png",
		"description":"Set the enabled flag of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Enabled",
				"description":"The enabled flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Length",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetLength.png",
		"description":"Set the length of cone for a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Length",
				"description":"The shape length"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Mesh",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetMesh.png",
		"description":"Set the mesh of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Mesh",
				"description":"The shape box"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Mesh Material Index",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetMeshMaterialIndex.png",
		"description":"Set the Mesh Material Index for a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Mesh Material Index",
				"description":"The shape mesh Material Index"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Mesh Renderer",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetMeshRenderer.png",
		"description":"Set the MeshRenderer of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Mesh Renderer",
				"description":"The shape MeshRenderer"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Mesh Scale",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetMeshScale.png",
		"description":"Set the Mesh Scale of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Mesh Scale",
				"description":"The Mesh Scale "
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Mesh Shape Type",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetMeshShapeType.png",
		"description":"Set the Mesh Shape type of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Mesh Shape Type",
				"description":"The Mesh ShapeType"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Normal Offset",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetNormalOffset.png",
		"description":"Set the normal offset of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Normal Offset",
				"description":"The normal offset"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Radius",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetRadius.png",
		"description":"Set Radius of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Radius",
				"description":"The shape radius"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Radius Mode",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetRadiusMode.png",
		"description":"Set RadiusMode of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Radius Mode",
				"description":"The shape radius"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Radius Speed",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetRadiusSpeed.png",
		"description":"Set Radius Speed of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Radius Speed",
				"description":"The shape radius Speed"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Radius Speed Multiplier",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetRadiusSpeedMultiplier.png",
		"description":"Set Radius Speed Multiplier of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Radius Speed Multiplier",
				"description":"The shape arc Speed Multiplier"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Radius Spread",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetRadiusSpread.png",
		"description":"Set Radius Spread of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Radius Spread",
				"description":"The shape radiusSpread"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Random Direction Amount",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetRandomDirectionAmount.png",
		"description":"Set Random Direction Amount of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Random Direction Amount",
				"description":"The shape Randomize Direction Amount"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Shape Type",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetShapeType.png",
		"description":"Set the Shape type of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Shape Type",
				"description":"The shape radius"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Skinned Mesh Renderer",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetSkinnedMeshRenderer.png",
		"description":"Set the SkinnedMeshRenderer of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Skinned Mesh Renderer",
				"description":"The shape SkinnedMeshRenderer"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Spherical Direction Amount",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetSphericalDirectionAmount.png",
		"description":"Set Spherical Direction Amount of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Spherical Direction Amount",
				"description":"The shape Spherize Direction"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Use Mesh Colors",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetUseMeshColors.png",
		"description":"Set the Use Mesh Colors flag of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Use Mesh Colors",
				"description":"The use Mesh Colors flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Shape Module Set Use Mesh Material Index",
		"category":"Shuriken/ShapeModule",
		"image":"./images/ShapeModuleSetUseMeshMaterialIndex.png",
		"description":"Set the Use Mesh Material Index flag of a particleSystem's ShapeModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Use Mesh Material Index",
				"description":"The Use Mesh Material Index  flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Share App Android",
		"category":"Social",
		"image":"./images/ShareAppAndroid.png",
		"description":"Share msg via android available apps - DOES NOT WORK WITH FACEBOOK/TWITTER",
		"params": [
			{
				"name":"Title",
				"description":"TODO"
			},
			{
				"name":"Message",
				"description":"TODO"
			},
			{
				"name":"Android Chooser On",
				"description":"Does not set as default app after select"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sorting Group Properties",
		"category":"Sprites",
		"image":"./images/SetSortingGroupProperties.png",
		"description":"TODO",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SortingGroup attached."
			},
			{
				"name":"Sorting Layer Name",
				"description":"The Layer Name to set as Sorting Layer."
			},
			{
				"name":"Or Sorting Layer ID",
				"description":"The Layer Id to set as Sorting Layer. If set, SortingLayerName is ignored"
			},
			{
				"name":"Order In Layer",
				"description":"Provide Int to set Order in Layer."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Sorting Layer Name",
		"category":"Sprite",
		"image":"./images/SetSpriteSortingLayerName.png",
		"description":"Set the sorting layer name of a SpriteRendered. Optionally set all SpriteRendered found on the gameobject Target.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Sorting Layer Name",
				"description":"TODO"
			},
			{
				"name":"Set All Sprites In Children",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sprite Get Flip",
		"category":"sprite",
		"image":"./images/SpriteGetFlip.png",
		"description":"Gets the Flips values of a Sprite. Object must have a Sprite Renderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The SpriteRenderer to control."
			},
			{
				"name":"Flip X",
				"description":"The x flip value"
			},
			{
				"name":"Flip Y",
				"description":"The y flip value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sprite Get Name",
		"category":"Sprite",
		"image":"./images/SpriteGetName.png",
		"description":"Get the name of a Unity Sprite.",
		"params": [
			{
				"name":"Sprite",
				"description":"The sprite to get the name of."
			},
			{
				"name":"Result",
				"description":"Store the name of the sprite in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to repeat this action on every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sprite Get Size",
		"category":"sprite",
		"image":"./images/SpriteGetSize.png",
		"description":"Gets a Sprite size. Object must have a Sprite Renderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The SpriteRenderer to control."
			},
			{
				"name":"Size",
				"description":"The size"
			},
			{
				"name":"Size X",
				"description":"The size X value"
			},
			{
				"name":"Size Y",
				"description":"The size Y value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sprite Set Flip",
		"category":"sprite",
		"image":"./images/SpriteSetFlip.png",
		"description":"Flip a Sprite. Object must have a Sprite Renderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The SpriteRenderer to control."
			},
			{
				"name":"Flip X",
				"description":"The Flip X value"
			},
			{
				"name":"Flip Y",
				"description":"The Flip Y value"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset flip values when state exits"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sprite Set Size",
		"category":"sprite",
		"image":"./images/SpriteSetSize.png",
		"description":"Sets a Sprite size. Object must have a Sprite Renderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The SpriteRenderer to control."
			},
			{
				"name":"Size",
				"description":"The size"
			},
			{
				"name":"Size X",
				"description":"The size X value"
			},
			{
				"name":"Size Y",
				"description":"The size Y value"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset flip values when state exits"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Swap Sprite",
		"category":"sprite",
		"image":"./images/SwapSprite.png",
		"description":"Replaces a single Sprite on any GameObject. Object must have a Sprite Renderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Sprite To Swap",
				"description":"TODO"
			},
			{
				"name":"Reset On Exit",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Swap Sprite Random",
		"category":"sprite",
		"image":"./images/SwapSpriteRandom.png",
		"description":"Replaces a Random Sprite on any GameObject. Object must have a Sprite Renderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Sprites",
				"description":"TODO"
			},
			{
				"name":"Weights",
				"description":"TODO"
			},
			{
				"name":"Reset On Exit",
				"description":"TODO"
			},
			{
				"name":"Repeat",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"WWW Sprite",
		"category":"Sprite",
		"image":"./images/WWWSprite.png",
		"description":"Gets a Sprite from a url and store it in variables.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download Sprite from."
			},
			{
				"name":"Pivot",
				"description":"Pivot of the Sprite. Default is 0,0."
			},
			{
				"name":"Pixels To Unit",
				"description":"Pixels to Unit of the Sprite. Default is 1."
			},
			{
				"name":"Store Sprite",
				"description":"Gets a Sprite from the url."
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the sprite has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Fsm Float",
		"category":"StateMachine",
		"image":"./images/AddFsmFloat.png",
		"description":"Add the value of a Float Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Add Value",
				"description":"Add this from the target variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			},
			{
				"name":"Per Second",
				"description":"Use with Every Frame only to continue over time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Fsm Template",
		"category":"StateMachine",
		"image":"./images/AddFsmTemplate.png",
		"description":"TODO",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Template",
				"description":"TODO"
			},
			{
				"name":"Name",
				"description":"TODO"
			},
			{
				"name":"Active",
				"description":"TODO"
			},
			{
				"name":"Unique",
				"description":"TODO"
			},
			{
				"name":"Replace",
				"description":"TODO"
			},
			{
				"name":"Variable Names",
				"description":"TODO"
			},
			{
				"name":"Variables",
				"description":"TODO"
			},
			{
				"name":"Store Component",
				"description":"TODO"
			},
			{
				"name":"Exists Event Target",
				"description":"TODO"
			},
			{
				"name":"Exists Send Event",
				"description":"TODO"
			},
			{
				"name":"Do Not Destroy",
				"description":"TODO"
			},
			{
				"name":"Replace Event Target",
				"description":"TODO"
			},
			{
				"name":"Replace Send Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add To Fsm Int",
		"category":"StateMachine",
		"image":"./images/AddToFsmInt.png",
		"description":"Adds a value to an fsm Integer Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Add",
				"description":"Repeat every frame. Useful if the value is changing."
			},
			{
				"name":"Store Result",
				"description":"Optional storage of the result"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Disable This FSM",
		"category":"StateMachine",
		"image":"./images/DisableThisFSM.png",
		"description":"Deactivate the current FSM.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Fsms",
		"category":"StateMachine",
		"image":"./images/EnableFsms.png",
		"description":"Enables/Disables multiple FSM components on different GameObjects.",
		"params": [
			{
				"name":"Game Objects",
				"description":"The GameObject that owns the FSM component."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on GameObject. Useful if you have more than one FSM on a GameObject."
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the initial enabled state when exiting the state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Multiple FSM",
		"category":"StateMachine",
		"image":"./images/EnableMultipleFSM.png",
		"description":"Enable/Disable multiple FSM Components on GameObjects",
		"params": [
			{
				"name":"Fsm Component",
				"description":"TODO"
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the initial enabled state when exiting the state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Flip Fsm Bool",
		"category":"StateMachine",
		"image":"./images/FlipFsmBool.png",
		"description":"Flips the value of a Bool Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Add",
		"category":"StateMachine",
		"image":"./images/FsmArrayAdd.png",
		"description":"Add an item to the end of a FSM Array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Add Range",
		"category":"StateMachine",
		"image":"./images/FsmArrayAddRange.png",
		"description":"Add values to a FSM array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Variables",
				"description":"TODO"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Clear",
		"category":"StateMachine",
		"image":"./images/FsmArrayClear.png",
		"description":"Sets all items in a FSM Array to their default value: 0, empty string, false, or null depending on their type. Optionally defines a reset value to use.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Reset Value",
				"description":"Optional reset value. Leave as None for default value."
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Delete At",
		"category":"StateMachine",
		"image":"./images/FsmArrayDeleteAt.png",
		"description":"Delete the item at an index. Index must be between 0 and the number of items -1. First item is index 0.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Index",
				"description":"TODO"
			},
			{
				"name":"Index Out Of Range Event",
				"description":"TODO"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Get Next",
		"category":"StateMachine",
		"image":"./images/FsmArrayGetNext.png",
		"description":"Each time this action is called it gets the next item from a FSM Array. This version has a reset flag \nThis lets you quickly loop through all the items of an array to perform actions on them.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Start Index",
				"description":"TODO"
			},
			{
				"name":"End Index",
				"description":"TODO"
			},
			{
				"name":"Loop Event",
				"description":"TODO"
			},
			{
				"name":"Finished Event",
				"description":"TODO"
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"Current Index",
				"description":"TODO"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Get Random Index",
		"category":"StateMachine",
		"image":"./images/FsmArrayGetRandomIndex.png",
		"description":"Get a FSM Random item from an Array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Store Value",
				"description":"TODO"
			},
			{
				"name":"Index",
				"description":"TODO"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Length",
		"category":"StateMachine",
		"image":"./images/FsmArrayLength.png",
		"description":"Gets the number of items in a FSM Array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Length",
				"description":"Store the length in an Int Variable."
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Remove",
		"category":"StateMachine",
		"image":"./images/FsmArrayRemove.png",
		"description":"Remove an item from a Fsm array",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Remove All",
		"category":"StateMachine",
		"image":"./images/FsmArrayRemoveAll.png",
		"description":"Remove all items from an array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Resize",
		"category":"StateMachine",
		"image":"./images/FsmArrayResize.png",
		"description":"Resize an array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"New Size",
				"description":"TODO"
			},
			{
				"name":"Size Out Of Range Event",
				"description":"TODO"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Reverse",
		"category":"StateMachine",
		"image":"./images/FsmArrayReverse.png",
		"description":"Reverse the order of items in a FSM Array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Shuffle",
		"category":"StateMachine",
		"image":"./images/FsmArrayShuffle.png",
		"description":"Shuffle values in a FSM array. Optionally set a start index and range to shuffle only part of the array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Start Index",
				"description":"Optional start Index for the shuffling. Leave it to none or 0 for no effect"
			},
			{
				"name":"Shuffling Range",
				"description":"Optional range for the shuffling, starting at the start index if greater than 0. Leave it to none or 0 for no effect, it will shuffle the whole array"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Sort",
		"category":"StateMachine",
		"image":"./images/FsmArraySort.png",
		"description":"Sort a FSM Array.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Swap Items",
		"category":"StateMachine",
		"image":"./images/FsmArraySwapItems.png",
		"description":"Swap two items at a specified indexes of a FSM Array",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Index 1",
				"description":"The first index to swap"
			},
			{
				"name":"Index 2",
				"description":"The second index to swap"
			},
			{
				"name":"Failure Event",
				"description":"The event to trigger if the removeAt throw errors"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Transfer Value",
		"category":"StateMachine",
		"image":"./images/FsmArrayTransferValue.png",
		"description":"Transfer a value from a FSM array to another, basically a copy/cut paste action on steroids.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Array Target",
				"description":"The Array Variable target."
			},
			{
				"name":"Index To Transfer",
				"description":"The index to transfer."
			},
			{
				"name":"Invert",
				"description":"TODO"
			},
			{
				"name":"Copy Type",
				"description":"TODO"
			},
			{
				"name":"Paste Type",
				"description":"TODO"
			},
			{
				"name":"Index Out Of Range",
				"description":"Event sent if this if FSM array does not contains that element (described below)"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Bool Change",
		"category":"StateMachine",
		"image":"./images/FsmBoolChange.png",
		"description":"Tests if the value of a another FSM Bool Variable has changed.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Check Everyframe"
			},
			{
				"name":"Original Value",
				"description":"Set the expection that bool should be. Will not work if EveryFrame is on (will set to null)"
			},
			{
				"name":"Changed Event",
				"description":"Event to send if the variable changes."
			},
			{
				"name":"Not Changed Event",
				"description":"Event to send if the variable did not change. Will not work if EveryFrame is on (will set to null)"
			},
			{
				"name":"Store Value",
				"description":"Set to True if changed."
			},
			{
				"name":"Store Fsm Value",
				"description":"Get Fsm Bool Value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Enum Compare",
		"category":"StateMachine",
		"image":"./images/FsmEnumCompare.png",
		"description":"Compare the value of an Enum Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"TODO"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Compare To Enum",
				"description":"TODO"
			},
			{
				"name":"Store Fsm Enum",
				"description":"TODO"
			},
			{
				"name":"Equal Event",
				"description":"TODO"
			},
			{
				"name":"Not Equal Event",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"Store the true/false result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Float Changed",
		"category":"Logic",
		"image":"./images/FsmFloatChanged.png",
		"description":"Tests if the value of a FSM Float variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Changed Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Float Compare",
		"category":"StateMachine",
		"image":"./images/FsmFloatCompare.png",
		"description":"Compare the value of a Float Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Equal",
				"description":"TODO"
			},
			{
				"name":"Less Than",
				"description":"TODO"
			},
			{
				"name":"Greater Than",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Float Flip",
		"category":"Math",
		"image":"./images/FsmFloatFlip.png",
		"description":"Inverts the sign of an FSM float variable. If the given float is positive, it gets flipped and becomes negative and vice versa.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Flip Fsm Value",
				"description":"Flip FSM value,if true, that will change the FSM value"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Float Operator",
		"category":"StateMachine",
		"image":"./images/FsmFloatOperator.png",
		"description":"Performs math operations on FSM Floats: Add, Subtract, Multiply, Divide, Min, Max.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Operation",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Modify Fsm Value",
				"description":"Operation to original value,if true, that will change the FSM value"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Float Switch",
		"category":"StateMachine",
		"image":"./images/FsmFloatSwitch.png",
		"description":"Sends an Event based on the value of a FSM Float Variable. The float could represent distance, angle to a target, health left... The array sets up float ranges that correspond to Events.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Less Than",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Game Object Changed",
		"category":"Logic",
		"image":"./images/FsmGameObjectChanged.png",
		"description":"Tests if the value of a FSM GameObject variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"TODO"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Changed Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Game Object Compare",
		"category":"StateMachine",
		"image":"./images/FsmGameObjectCompare.png",
		"description":"Compares FSM Game Objects and sends Events based on the result.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Equal Event",
				"description":"TODO"
			},
			{
				"name":"Not Equal Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Game Object Compare Tag",
		"category":"StateMachine",
		"image":"./images/FsmGameObjectCompareTag.png",
		"description":"Compares FSM Game Objects and sends Events based on the result.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"True Event",
				"description":"TODO"
			},
			{
				"name":"False Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Game Object Is Null",
		"category":"StateMachine",
		"image":"./images/FsmGameObjectIsNull.png",
		"description":"Compares FSM Game Objects and sends Events based on the result.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Is Null",
				"description":"TODO"
			},
			{
				"name":"Is Not Null",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Int Changed",
		"category":"Logic",
		"image":"./images/FsmIntChanged.png",
		"description":"Tests if the value of a FSM Int variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Changed Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Int Compare",
		"category":"StateMachine",
		"image":"./images/FsmIntCompare.png",
		"description":"Compare the value of a Float Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Equal",
				"description":"TODO"
			},
			{
				"name":"Less Than",
				"description":"TODO"
			},
			{
				"name":"Greater Than",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Int Flip",
		"category":"StateMachine",
		"image":"./images/FsmIntFlip.png",
		"description":"Inverts the sign of an FSM int variable. If the given int is positive, it gets flipped and becomes negative and vice versa.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Flip Fsm Value",
				"description":"Flip FSM value,if true, that will change the FSM value"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Int Operator",
		"category":"Math",
		"image":"./images/FsmIntOperator.png",
		"description":"Performs math operations on FSM Ints: Add, Subtract, Multiply, Divide, Min, Max.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Operation",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Modify Fsm Value",
				"description":"Operation to original value,if true, that will change the FSM value"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Int Switch",
		"category":"StateMachine",
		"image":"./images/FsmIntSwitch.png",
		"description":"Sends an Event based on the value of a FSM Int Variable. The Int could represent distance, angle to a target, health left... The array sets up Int ranges that correspond to Events.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Less Than",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm String Changed",
		"category":"Logic",
		"image":"./images/FsmStringChanged.png",
		"description":"Tests if the value of a FSM String variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Changed Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm String Compare",
		"category":"StateMachine",
		"image":"./images/FsmStringCompare.png",
		"description":"Compare the value of a String Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"TODO"
			},
			{
				"name":"Value",
				"description":"TODO"
			},
			{
				"name":"Equal",
				"description":"TODO"
			},
			{
				"name":"Not Equal Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm String Is Null Or Empty",
		"category":"StateMachine",
		"image":"./images/FsmStringIsNullOrEmpty.png",
		"description":"Compare the value of a FSM String Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Is Null Or Empty Event",
				"description":"TODO"
			},
			{
				"name":"Is Not Null Or Empty Event",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm String Switch",
		"category":"StateMachine",
		"image":"./images/FsmStringSwitch.png",
		"description":"Sends an Event based on the FSM value of a String Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event Sender",
		"category":"StateMachine",
		"image":"./images/GetEventSender.png",
		"description":"Gets sender info on the last event that caused a state change.",
		"params": [
			{
				"name":"Sent By Game Object",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Component",
		"category":"StateMachine",
		"image":"./images/GetFsmComponent.png",
		"description":"Get the FSM component on the specified GameObject. Optionally send an event if the GameObject doesn't have any FSM component attached.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to get the FSM from."
			},
			{
				"name":"Fsm Name",
				"description":"Optionally search by FSM name."
			},
			{
				"name":"Result",
				"description":"The FSM component."
			},
			{
				"name":"None Found Event",
				"description":"If the GameObject doesn't have any FSM component with the given name or any at all."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Name",
		"category":"StateMachine",
		"image":"./images/GetFsmName.png",
		"description":"Get this FSM name.",
		"params": [
			{
				"name":"Full Label",
				"description":"Store the full label of the FSM."
			},
			{
				"name":"Name",
				"description":"Store the name of the FSM."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Game Object By Fsm Variable Value",
		"category":"StateMachine",
		"image":"./images/GetGameObjectByFsmVariableValue.png",
		"description":"Searches for a certain fsm variable in all FSMs and returns the GameObject of the first occurrence.",
		"params": [
			{
				"name":"Variable Name",
				"description":"The name of the variable to search for. Leave empty to search for the name of 'Variable Value'."
			},
			{
				"name":"Variable Value",
				"description":"The value of the variable to search for."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run every frame or only once."
			},
			{
				"name":"Result",
				"description":"TODO"
			},
			{
				"name":"None Found Event",
				"description":"If no FSM could be found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Host",
		"category":"GameObject",
		"image":"./images/GetHost.png",
		"description":"Gets the fsm name of the host  when runnin as a sub Fsm",
		"params": [
			{
				"name":"Host Name",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Host Info",
		"category":"StateMachine",
		"image":"./images/GetHostInfo.png",
		"description":"Gets information from the Host when a template is running as a Sub FSM.",
		"params": [
			{
				"name":"Host Fsm Name",
				"description":"TODO"
			},
			{
				"name":"Game Object Name",
				"description":"TODO"
			},
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Current State Name",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Is Sub Fsm",
		"category":"GameObject",
		"image":"./images/GetIsSubFsm.png",
		"description":"Gets if the fsm is a sub fsm.",
		"params": [
			{
				"name":"Is Sub Fsm",
				"description":"True if the fsm is a sub fsm."
			},
			{
				"name":"Is Sub Fsm Event",
				"description":"Event sent if the fsm is a sub fsm."
			},
			{
				"name":"Is Not Sub Fsm Event",
				"description":"Event sent if the fsm is a NOT sub fsm."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Go To State By Name",
		"category":"StateMachine",
		"image":"./images/GoToStateByName.png",
		"description":"Immediately switch to a state with the selected name.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM"
			},
			{
				"name":"Fsm Name",
				"description":"Name of FSM on Game Object. Leave to none to target this fsm"
			},
			{
				"name":"State Name",
				"description":"The name of the state to go to"
			},
			{
				"name":"State Found Event",
				"description":"Event Sent if the state was found"
			},
			{
				"name":"State Not Found Event",
				"description":"Event Sent if the state was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Iterate",
		"category":"StateMachine",
		"image":"./images/Iterate.png",
		"description":"Each time this action is called it iterate to the next value from Start to End. This lets you safely loop and process anything on each iteratation.",
		"params": [
			{
				"name":"Start Index",
				"description":"Start value"
			},
			{
				"name":"End Index",
				"description":"End value"
			},
			{
				"name":"Increment",
				"description":"increment value at each iteration, absolute value only, it will itself find if it needs to substract or add"
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Finished Event",
				"description":"Event to send when we reached the end."
			},
			{
				"name":"Current Index",
				"description":"The current value of the iteration process"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Next Frame Event Advance",
		"category":"StateMachine",
		"image":"./images/NextFrameEventAdvance.png",
		"description":"Sends an Event after x frame. Useful if you want to loop states every x frame.",
		"params": [
			{
				"name":"Frame Count",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Restart This FSM",
		"category":"StateMachine",
		"image":"./images/RestartThisFSM.png",
		"description":"Restarts the current FSM at the beginning (the Start State) after an optional delay. NOTE: Make sure to not cause any infinite loops by having a direct path from the Start State to this action without any delay in between or in this action.",
		"params": [
			{
				"name":"Delay",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Run Template FSM",
		"category":"StateMachine",
		"image":"./images/RunTemplateFSM.png",
		"description":"Creates an FSM from a saved FSM Template. Let's you define the template at run time via a FsmObject Variable. Unlike RunFSM, you can't assign variables, simply send event to this running fsm instead.",
		"params": [
			{
				"name":"Template",
				"description":"The Fsm Template."
			},
			{
				"name":"Store ID",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the FSM has finished (usually because it ran a Finish FSM action)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event By Tag",
		"category":"StateMachine",
		"image":"./images/SendEventByTag.png",
		"description":"Sends an Event to GameObject filtered by (1) Tag then by (2) layer (if layer option selected). NOTE: To send events between FSMs they must be marked as Global in the Events Browser.",
		"params": [
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Layer",
				"description":"TODO"
			},
			{
				"name":"Layer Filter On",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs. Or send by name"
			},
			{
				"name":"Send Event Name",
				"description":"TODO"
			},
			{
				"name":"Fsm Name",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Rarely needed."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event From State",
		"category":"StateMachine",
		"image":"./images/SendEventFromState.png",
		"description":"Sends an Event. If optional delay is set, WILL ONLY SEND THE DELAYED EVENT IF IT IS STILL IN THE STATE.\nNOTE: 'Send Event' will fire a delayed event even if the action is not running anymore as the state exited. \nNOTE: To send events between FSMs they must be marked as Global in the Events Browser.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds. NOTE: The event will not be fired if the state has exited before the delay"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event If Bool",
		"category":"StateMachine",
		"image":"./images/SendEventIfBool.png",
		"description":"Sends an Event after an optional delay based on a Bool variable. NOTE: To send events between FSMs they must be marked as Global in the Events Browser.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to test."
			},
			{
				"name":"Test Bool",
				"description":"Indicate to fire the event if the Bool variable is True or False."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Rarely needed. Doesn't work with Delayed Event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event Random Delay",
		"category":"StateMachine",
		"image":"./images/SendEventRandomDelay.png",
		"description":"Sends an Event after a random delay. NOTE: To send events between FSMs they must be marked as Global in the Events Browser.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay Min",
				"description":"Start delay in seconds."
			},
			{
				"name":"Delay Max",
				"description":"End delay in seconds."
			},
			{
				"name":"Real Time",
				"description":"Wheter the delay is game time independent."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Events",
		"category":"StateMachine",
		"image":"./images/SendEvents.png",
		"description":"Sends an Event to multiple targets.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the event to.\n\nSelf: only send the even to this FSM\n\nGameObject: Sends the event to every FSM on the referenced GameObjects (also to all of their children when selected)\n\nGameObjectFSM: Only send the event to specific FSMs on those GameObjects\n\nBroadcast All: Send the event to every FSM in the current scene\n\nHost FSM: When this is a SubFSM, send the event to the host that contains this FSM\n\nSub FSM: Send the event to a specific/every SubFSM in this FSM."
			},
			{
				"name":"Game Objects",
				"description":"The GameObject(s) to send the event to."
			},
			{
				"name":"Fsm Components",
				"description":"The PlayMakerFSM-Components to send the event to."
			},
			{
				"name":"Send To Children",
				"description":"Wheter you want to also include all children of the specified GameObject(s)."
			},
			{
				"name":"FSM Name",
				"description":"Optionally specify the name of the FSM to only send the event to any FSM with that name."
			},
			{
				"name":"Exclude Self",
				"description":"Wheter to exclude this FSM component from being targeted."
			},
			{
				"name":"Sub FSM Name",
				"description":"The name of the Sub-FSM to send the event to."
			},
			{
				"name":"Tmp Target",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event Set Multi",
		"category":"StateMachine",
		"image":"./images/SendEventSetMulti.png",
		"description":"Sets multiple values of the specified types in another FSM, then sends an Event to it after an optional delay (combines 'Send Event' and 'Set Fsm Variable' for convenience & efficiency).",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Variable Name",
				"description":"The name of the variable in the target FSM."
			},
			{
				"name":"Set Value",
				"description":"The new value for the specified variable."
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			},
			{
				"name":"Enable",
				"description":"Enables the GameObject and FSM if they are disabled before sending the event."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Rarely needed, but can be useful when sending events to other FSMs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event Set Value",
		"category":"StateMachine",
		"image":"./images/SendEventSetValue.png",
		"description":"Sets a value of the specified type in another FSM, then sends an Event to it after an optional delay (combines 'Send Event' and 'Set Fsm Variable' for convenience & efficiency).",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Variable Name",
				"description":"The name of the variable in the target FSM."
			},
			{
				"name":"Set Value",
				"description":"The new value for the specified variable."
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			},
			{
				"name":"Enable",
				"description":"Enables the GameObject and FSM if they are disabled before sending the event."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Rarely needed, but can be useful when sending events to other FSMs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event To Fsm Component",
		"category":"StateMachine",
		"image":"./images/SendEventToFsmComponent.png",
		"description":"Sends an Event after an optional delay to an FsmComponent",
		"params": [
			{
				"name":"Target",
				"description":"The Fsm component to send event to"
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Rarely needed, but can be useful when sending events to other FSMs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Keep Delayed Events On State Exit",
		"category":"StateMachine",
		"image":"./images/SetFsmKeepDelayedEventsOnStateExit.png",
		"description":"Raise the KeepDelayedEventsOnStateExit flag so that delayed event are kept even when state exited",
		"params": [
			{
				"name":"Keep Delayed Events",
				"description":"If True, delayed event will be kept if the state exits"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Loop",
		"category":"StateMachine",
		"image":"./images/SetFsmLoop.png",
		"description":"Set the value of loop in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Loop Override",
				"description":"Set the value of the loop."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Name",
		"category":"StateMachine",
		"image":"./images/SetFsmName.png",
		"description":"Set this FSM name.",
		"params": [
			{
				"name":"Name",
				"description":"New name for this FSM"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Start State",
		"category":"StateMachine",
		"image":"./images/SetFsmStartState.png",
		"description":"set a new start state on an fsm.",
		"params": [
			{
				"name":"Fsm Component",
				"description":"Drag a PlayMakerFSM component here."
			},
			{
				"name":"Game Object",
				"description":"If not specifyng the component above, specify the GameObject that owns the FSM"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of Fsm on Game Object. If left blank it will find the first PlayMakerFSM on the GameObject."
			},
			{
				"name":"State Name",
				"description":"Store the state name in a string variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Variable 2",
		"category":"StateMachine",
		"image":"./images/SetFsmVariable2.png",
		"description":"Set the value of a variable in another FSM. fixes a bug in SetFsmVar",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the variable in the target FSM."
			},
			{
				"name":"Set Value",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Subtract Fsm Float",
		"category":"StateMachine",
		"image":"./images/SubtractFsmFloat.png",
		"description":"Subtract the value of a Float Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Subtract Value",
				"description":"Subtract this from the target variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			},
			{
				"name":"Per Second",
				"description":"Use with Every Frame only to continue over time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Subtract Fsm Int",
		"category":"StateMachine",
		"image":"./images/SubtractFsmInt.png",
		"description":"Subtract the value of a Int Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Subtract Value",
				"description":"Subtract this from the target variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			},
			{
				"name":"Per Second",
				"description":"Use with Every Frame only to continue over time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Build String 2",
		"category":"String",
		"image":"./images/BuildString2.png",
		"description":"Builds a String from other Strings. Separator is optional and can be inserted before, after or in between parts.",
		"params": [
			{
				"name":"String Parts",
				"description":"Array of Strings to combine."
			},
			{
				"name":"Separator",
				"description":"Separator. E.g. space character."
			},
			{
				"name":"Separator Insert",
				"description":"Separator behavior."
			},
			{
				"name":"Store Result",
				"description":"Store the final String in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Build String Auto Convert",
		"category":"String",
		"image":"./images/BuildStringAutoConvert.png",
		"description":"Based on 'Build String Fast' with the added benefit of automatically converting any variable to String, rendering any pre-conversion obsolete.",
		"params": [
			{
				"name":"String Parts",
				"description":"Array of Strings to combine."
			},
			{
				"name":"Separator",
				"description":"Separator to insert between each String. E.g. space character."
			},
			{
				"name":"Add To End",
				"description":"Add Separator to end of built string."
			},
			{
				"name":"Store Result",
				"description":"Store the final String in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Build String Fast",
		"category":"String",
		"image":"./images/BuildStringFast.png",
		"description":"Builds a String from other Strings with less memory allocations.",
		"params": [
			{
				"name":"String Parts",
				"description":"Array of Strings to combine."
			},
			{
				"name":"Separator",
				"description":"Separator to insert between each String. E.g. space character."
			},
			{
				"name":"Add To End",
				"description":"Add Separator to end of built string."
			},
			{
				"name":"Store Result",
				"description":"Store the final String in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Clean Utf 8 String",
		"category":"String",
		"image":"./images/CleanUtf8String.png",
		"description":"Clean UTF - 8 non-ASCII characters",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"String Value",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Generate Guid",
		"category":"GameObject",
		"image":"./images/GenerateGuid.png",
		"description":"Generates a unique identification string",
		"params": [
			{
				"name":"Store Result",
				"description":"A unique identification string"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Generate Random Password",
		"category":"String",
		"image":"./images/GenerateRandomPassword.png",
		"description":"Generate a random password by length",
		"params": [
			{
				"name":"Password Size",
				"description":"Set length of password"
			},
			{
				"name":"Use L Case",
				"description":"TODO"
			},
			{
				"name":"Use U Case",
				"description":"TODO"
			},
			{
				"name":"Use Numeric",
				"description":"TODO"
			},
			{
				"name":"Use Special",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Filename From Path",
		"category":"String",
		"image":"./images/GetFilenameFromPath.png",
		"description":"Get the filename from a path string",
		"params": [
			{
				"name":"Path",
				"description":"TODO"
			},
			{
				"name":"Filename",
				"description":"TODO"
			},
			{
				"name":"Name",
				"description":"TODO"
			},
			{
				"name":"Extension",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get New Line Character",
		"category":"String",
		"image":"./images/GetNewLineCharacter.png",
		"description":"Gets the newline character, prevents having to copy paste from text editor. Use it in StringSplit action for example",
		"params": [
			{
				"name":"New Line",
				"description":"The newline string."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get String Numbers",
		"category":"String",
		"image":"./images/GetStringNumbers.png",
		"description":"Get all numbers in the given String.",
		"params": [
			{
				"name":"Start String",
				"description":"The String to get only the numbers from."
			},
			{
				"name":"Store Numbers As Int",
				"description":"Store the numbers in an int variable."
			},
			{
				"name":"Store Numbers As Float",
				"description":"Store the numbers in a float variable."
			},
			{
				"name":"Store Numbers As String",
				"description":"Store the numbers in a String variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get String Without BOM",
		"category":"String",
		"image":"./images/GetStringWithoutBOM.png",
		"description":"Gets a string without the Byte Order Mark. This can cause error for parsers like xml for example.",
		"params": [
			{
				"name":"Source",
				"description":"The string."
			},
			{
				"name":"Result",
				"description":"The string without the BOM"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Tab Character",
		"category":"String",
		"image":"./images/GetTabCharacter.png",
		"description":"Gets the tab character, prevents having to copy paste from text editor. Use it in StringSplit action for example",
		"params": [
			{
				"name":"Tab",
				"description":"The tab string."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Read Text Asset",
		"category":"String",
		"image":"./images/ReadTextAsset.png",
		"description":"Get the content of a text asset",
		"params": [
			{
				"name":"Text Asset",
				"description":"The text asset"
			},
			{
				"name":"Content",
				"description":"The content of the text asset"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Remove Accents On String",
		"category":"String",
		"image":"./images/RemoveAccentsOnString.png",
		"description":"TODO",
		"params": [
			{
				"name":"Accented Str",
				"description":"String to rip"
			},
			{
				"name":"Rip Accents",
				"description":"TODO"
			},
			{
				"name":"Rip Punctuation",
				"description":"TODO"
			},
			{
				"name":"Ignore Case",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"Finished string"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi String Value",
		"category":"String",
		"image":"./images/SetMultiStringValue.png",
		"description":"Sets the value of many String Variable.",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Split Text To Array",
		"category":"String",
		"image":"./images/SplitTextToArray.png",
		"description":"Split a text asset or string into an array or strings|ints|floats.",
		"params": [
			{
				"name":"Text Asset",
				"description":"Text asset source"
			},
			{
				"name":"Or This String",
				"description":"Text Asset is ignored if this is set."
			},
			{
				"name":"Start Index",
				"description":"From where to start parsing, leave to 0 to start from the beginning"
			},
			{
				"name":"Parse Range",
				"description":"the range of parsing"
			},
			{
				"name":"Split",
				"description":"Split"
			},
			{
				"name":"Or This Char",
				"description":"Split is ignored if this value is not empty. Each chars taken in account for split"
			},
			{
				"name":"Parse As Type",
				"description":"Parse the line as a specific type"
			},
			{
				"name":"Result",
				"description":"The result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Add New Line",
		"category":"String",
		"image":"./images/StringAddNewLine.png",
		"description":"Adds strings together separated by a line.",
		"params": [
			{
				"name":"String Parts",
				"description":"List of the strings to compose."
			},
			{
				"name":"Store Result",
				"description":"Store the result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Append 2",
		"category":"String",
		"image":"./images/StringAppend2.png",
		"description":"Concatenates two Strings with each other.",
		"params": [
			{
				"name":"String",
				"description":"The String to add to."
			},
			{
				"name":"String To Add",
				"description":"The String to add."
			},
			{
				"name":"Add To End",
				"description":"Add the String to the end of the first one instead of the beginning."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run this action on every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Compare Set Multi",
		"category":"String",
		"image":"./images/StringCompareSetMulti.png",
		"description":"Sets a String value based on the value of another String Variable. Optionally send a No-Match-Event.",
		"params": [
			{
				"name":"String To Compare",
				"description":"TODO"
			},
			{
				"name":"String To Set",
				"description":"TODO"
			},
			{
				"name":"Compare",
				"description":"TODO"
			},
			{
				"name":"Set",
				"description":"TODO"
			},
			{
				"name":"No Match Event",
				"description":"Event to raise if no matching Strings found."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Contains Switch",
		"category":"String",
		"image":"./images/StringContainsSwitch.png",
		"description":"Tests a String against Multiple to see if it is within one of them.",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Compare To",
				"description":"TODO"
			},
			{
				"name":"Send Event",
				"description":"TODO"
			},
			{
				"name":"No Match Event",
				"description":"Event to raise if no matches are found"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Delete Line",
		"category":"String",
		"image":"./images/StringDeleteLine.png",
		"description":"Delete a specificy line from a string. use -1 to delete the last line. else line 0 is the first line, etc",
		"params": [
			{
				"name":"The String",
				"description":"The string."
			},
			{
				"name":"Line Index",
				"description":"The line to delete."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Get Line Count",
		"category":"String",
		"image":"./images/StringGetLineCount.png",
		"description":"Get the number of lines of a string.",
		"params": [
			{
				"name":"The String",
				"description":"The string."
			},
			{
				"name":"Line Count",
				"description":"The number of lines"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Insert At Index",
		"category":"String",
		"image":"./images/StringInsertAtIndex.png",
		"description":"add a character into the string at index nr",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Character",
				"description":"The character to insert"
			},
			{
				"name":"Index",
				"description":"Index to place the character"
			},
			{
				"name":"String Result",
				"description":"The string result with the character included"
			},
			{
				"name":"Error",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Is Null Or Empty",
		"category":"Logic",
		"image":"./images/StringIsNullOrEmpty.png",
		"description":"Check if a String variable is null or empty and sends Events based on the result.",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Is Null Or Empty Event",
				"description":"TODO"
			},
			{
				"name":"Is Not Null Or Empty Event",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"Store the true/false result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any the string is changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Regex Is Match",
		"category":"String",
		"image":"./images/StringRegexIsMatch.png",
		"description":"Execute a Regex on a string and return whether a match was found. Use StringRegexMatch if you want to store the result",
		"params": [
			{
				"name":"String Variable",
				"description":"The string to execute the regex on"
			},
			{
				"name":"Regex",
				"description":"The regex expression."
			},
			{
				"name":"Options",
				"description":"The regex expression options."
			},
			{
				"name":"Store Is Match",
				"description":"True if the regex matched."
			},
			{
				"name":"True Event",
				"description":"Event sent if regex matches."
			},
			{
				"name":"False Event",
				"description":"Event sent if regex do not matches."
			},
			{
				"name":"Every Frame",
				"description":"Executes every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Regex Match",
		"category":"String",
		"image":"./images/StringRegexMatch.png",
		"description":"Execute a Regex on a string and return whether a match was found. ",
		"params": [
			{
				"name":"String Variable",
				"description":"The string to execute the regex on"
			},
			{
				"name":"Regex",
				"description":"The regex expression."
			},
			{
				"name":"Options",
				"description":"The regex expression options."
			},
			{
				"name":"Store Match",
				"description":"The regex Match Value. Check storeIsSuccess to make sure the regex did match."
			},
			{
				"name":"Store Is Success",
				"description":"True if the regex matched."
			},
			{
				"name":"True Event",
				"description":"Event sent if regex matches."
			},
			{
				"name":"False Event",
				"description":"Event sent if regex do not matches."
			},
			{
				"name":"Every Frame",
				"description":"Executes every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Regex Replace",
		"category":"String",
		"image":"./images/StringRegexReplace.png",
		"description":"Execute a Regex on a string and to replace match.",
		"params": [
			{
				"name":"String Variable",
				"description":"The string to execute the regex on"
			},
			{
				"name":"Regex",
				"description":"The regex expression."
			},
			{
				"name":"With",
				"description":"The string to replace matches with."
			},
			{
				"name":"Options",
				"description":"The regex expression options."
			},
			{
				"name":"Store Result",
				"description":"The new string with Match content replaced."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Remove",
		"category":"String",
		"image":"./images/StringRemove.png",
		"description":"Removes a Strings from another.",
		"params": [
			{
				"name":"String",
				"description":"The String to remove from."
			},
			{
				"name":"String To Remove",
				"description":"The String to remove."
			},
			{
				"name":"Remove From End",
				"description":"Remove the String to the end of the first one instead of the beginning."
			},
			{
				"name":"Every Frame",
				"description":"Wheter to run this action on every frame or only once."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Remove Chars",
		"category":"String",
		"image":"./images/StringRemoveChars.png",
		"description":"Removes any specified Characters from the given String.",
		"params": [
			{
				"name":"Start String",
				"description":"The String to replace each char of."
			},
			{
				"name":"Chars To Remove",
				"description":"Insert any char that should be removed from the Start String."
			},
			{
				"name":"Store Result",
				"description":"Store the final String in a variable. Can be the same as the Start String to override it or a new one to keep them separate and be able to revert these changes."
			},
			{
				"name":"Leave Empty",
				"description":"If set replaces chars with space instead of removing them."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Replace Each Char",
		"category":"String",
		"image":"./images/StringReplaceEachChar.png",
		"description":"Replace each char in a given String with the specified one. Useful to obfuscate confidential or not yet unlocked text. Optionally removes spaces.",
		"params": [
			{
				"name":"Start String",
				"description":"The String to replace each char of."
			},
			{
				"name":"Replace With",
				"description":"The String that should replace every char of the Start String"
			},
			{
				"name":"Store Result",
				"description":"Store the final String in a variable. Can be the same as the Start String to override it or a new one to keep them separate and be able to revert these changes."
			},
			{
				"name":"Remove Empty Space",
				"description":"If set gets rid of spaces if the string consists of several words."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Reverse",
		"category":"String",
		"image":"./images/StringReverse.png",
		"description":"Reverse a string",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Size",
		"category":"String",
		"image":"./images/StringSize.png",
		"description":"Size of String (b, kb, mb, etc)",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Float Mb",
				"description":"Always in mb"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Split To Strings",
		"category":"Math",
		"image":"./images/StringSplitToStrings.png",
		"description":"Split a string into a static number of segments at each indicated divider character. Default divider is '|' which is shift backslash.",
		"params": [
			{
				"name":"Input String",
				"description":"Input string with dividers. Example: \n Frank|Tony|Bill|Jorge \n ..Making 4 result string segments."
			},
			{
				"name":"Divider",
				"description":"Divider that identifies a break between strings. **One character only.**"
			},
			{
				"name":"Results",
				"description":"Result segments stored in individual string variables."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Trim",
		"category":"String",
		"image":"./images/StringTrim.png",
		"description":"Removes all leading and trailing white-space characters from a String",
		"params": [
			{
				"name":"String Input",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Typewriter",
		"category":"String",
		"image":"./images/StringTypewriter.png",
		"description":"Automatically types into a string.",
		"params": [
			{
				"name":"Base String",
				"description":"The string with the entire message to type out."
			},
			{
				"name":"Result String",
				"description":"The target result string (can be the same as the base string)."
			},
			{
				"name":"Pause",
				"description":"The time between letters appearing."
			},
			{
				"name":"Punctuation Multiplier",
				"description":"When punctuation is encountered then pause is multiplied by this.\n(period, exclamation, question, comma, semicolon, colon and ellipsis).\nIt also handles repeating characters and pauses only one time at their end."
			},
			{
				"name":"Realtime",
				"description":"True is realtime: continues typing while game is paused. False will subject time variable to the game's timeScale."
			},
			{
				"name":"Rich Text",
				"description":"Support <color><b><i><size> use. \n LIMITATION: Cannot stack formats together yet! eg <b><i>Text</i></b> won't work. \n Pause: <p=0.9> for a 0.9 second pause (mid sentance pause). \n Speed: <s=1.5> changes Pause to 1.5 (time between characters)."
			},
			{
				"name":"Finish Event",
				"description":"Send this event when finished typing."
			},
			{
				"name":"D1",
				"description":"TODO"
			},
			{
				"name":"Use Sounds",
				"description":"Check this to play sounds while typing."
			},
			{
				"name":"No Sound On Spaces",
				"description":"Check this to not play a sound when it is a spacebar character."
			},
			{
				"name":"Typing Sound",
				"description":"The sound to play for each letter typed."
			},
			{
				"name":"Audio Source Obj",
				"description":"The GameObject with an AudioSource component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Url Encode",
		"category":"String",
		"image":"./images/StringUrlEncode.png",
		"description":"Url encode",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Uri Decode",
		"category":"String",
		"image":"./images/UriDecode.png",
		"description":"Converts a string to its unescaped representation.",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Uri Encode",
		"category":"String",
		"image":"./images/UriEncode.png",
		"description":"Converts a string to its escaped representation.",
		"params": [
			{
				"name":"String Variable",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get File Extension",
		"category":"System",
		"image":"./images/GetFileExtension.png",
		"description":"Returns the file-extension of an Asset at the speficied path.",
		"params": [
			{
				"name":"Path",
				"description":"Set the path the file is at, starting after Assets (/Some/File/At/foo.extension)."
			},
			{
				"name":"Extension",
				"description":"The file-extension."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Terrain Sample Height",
		"category":"Terrain",
		"image":"./images/GetTerrainSampleHeight.png",
		"description":"Get Terrain Splat Texture Map Name over Game Object Position.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to sample height from"
			},
			{
				"name":"Position",
				"description":"Set GameObject to none and use this position. Else It will be on offset from GameObject world position"
			},
			{
				"name":"Terrain",
				"description":"The terrain. Leave to null to pick the active one"
			},
			{
				"name":"Height",
				"description":"The texture name"
			},
			{
				"name":"Everyframe",
				"description":"Repeat everyframe"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Terrain Texture Name",
		"category":"Terrain",
		"image":"./images/GetTerrainTextureName.png",
		"description":"Get Terrain Splat Texture Map Name over Game Object Position.",
		"params": [
			{
				"name":"Texture Position",
				"description":"The GameObject to look under"
			},
			{
				"name":"Terrain",
				"description":"The terrain"
			},
			{
				"name":"Main Texture",
				"description":"The texture name"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Build Noise Texture",
		"category":"Effects",
		"image":"./images/BuildNoiseTexture.png",
		"description":"Build a noisy texture",
		"params": [
			{
				"name":"Game Object",
				"description":"The GamObject used for spacial position of the noise"
			},
			{
				"name":"Resolution",
				"description":"The Resolution"
			},
			{
				"name":"Frequency",
				"description":"The Frequency"
			},
			{
				"name":"Octaves",
				"description":"The Octave"
			},
			{
				"name":"Lacunarity",
				"description":"The lacunarity"
			},
			{
				"name":"Persistence",
				"description":"The persistence"
			},
			{
				"name":"Dimensions",
				"description":"The dimensions"
			},
			{
				"name":"Type",
				"description":"The noise type"
			},
			{
				"name":"Coloring",
				"description":"TODO"
			},
			{
				"name":"Result",
				"description":"the resulting noise texture"
			},
			{
				"name":"Every Frame",
				"description":"If true, can be animated over time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Pixel Color",
		"category":"Texture",
		"image":"./images/GetPixelColor.png",
		"description":"The texture must have the Is Readable flag set in the import settings, otherwise this function will fail. ",
		"params": [
			{
				"name":"Texture",
				"description":"The texture needs to have the Is readable flag set to true in the import settings"
			},
			{
				"name":"X",
				"description":"TODO"
			},
			{
				"name":"Y",
				"description":"TODO"
			},
			{
				"name":"Color",
				"description":"The color at the position defined"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Texture Name",
		"category":"Texture",
		"image":"./images/GetTextureName.png",
		"description":"Get a texture's name ",
		"params": [
			{
				"name":"Texture",
				"description":"The texture"
			},
			{
				"name":"Texture Name",
				"description":"The texture name."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Texture Size",
		"category":"Texture",
		"image":"./images/GetTextureSize.png",
		"description":"Gets a texture height and width in pixels.",
		"params": [
			{
				"name":"Texture",
				"description":"The texture"
			},
			{
				"name":"Size",
				"description":"The texture size"
			},
			{
				"name":"Width",
				"description":"The texture width"
			},
			{
				"name":"Height",
				"description":"The texture height"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Texture Value",
		"category":"Texture",
		"image":"./images/SetMultiTextureValue.png",
		"description":"Sets the value of many Texture Variable.",
		"params": [
			{
				"name":"Texture Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Texture Draw Circle",
		"category":"Texture",
		"image":"./images/TextureDrawCircle.png",
		"description":"Draw a circle on a texture.",
		"params": [
			{
				"name":"Texture",
				"description":"TODO"
			},
			{
				"name":"Center",
				"description":"TODO"
			},
			{
				"name":"Radius",
				"description":"TODO"
			},
			{
				"name":"Color",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add To Date Time",
		"category":"Time",
		"image":"./images/AddToDateTime.png",
		"description":"Adds seconds to date and time and stores it in a string variable. An optional format string gives you a lot of control over the formatting (see online docs for format syntax).",
		"params": [
			{
				"name":"Start Date",
				"description":"The time and date to add seconds to, following the format described in 'dateFormat'"
			},
			{
				"name":"Date Format",
				"description":"format string. E.g., MM/dd/yyyy HH:mm:ss"
			},
			{
				"name":"Add",
				"description":"Integer seconds to add to date."
			},
			{
				"name":"Store String",
				"description":"Store result date and time as a string."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Countdown Timer",
		"category":"Time",
		"image":"./images/CountdownTimer.png",
		"description":"Countdown from a certain time to a certain time and possible to display time left",
		"params": [
			{
				"name":"Time",
				"description":"Time To Countdown from"
			},
			{
				"name":"Stop On",
				"description":"Stop timer when this time is reached. Value must be lower than time"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"TODO"
			},
			{
				"name":"Store Value",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Countup Timer",
		"category":"Time",
		"image":"./images/CountupTimer.png",
		"description":"Counts up as long as in current state and ends when leaving the current state.",
		"params": [
			{
				"name":"Store Time",
				"description":"Time since state start."
			},
			{
				"name":"Real Time",
				"description":"Count up TimeScale independent."
			},
			{
				"name":"Pause",
				"description":"Pauses the timer when true. Resumes when false again."
			},
			{
				"name":"Reset",
				"description":"Setting this to true sets the timer back to 0 while counting up. Will set itself back to false once it has reset."
			},
			{
				"name":"Restart On Enter",
				"description":"Sets the timer back to 0 when entering this state. Otherwise continues where left of."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Epoch",
		"category":"Time",
		"image":"./images/CreateEpoch.png",
		"description":"Create a epoch timestamp (Unix)",
		"params": [
			{
				"name":"Get Epoch",
				"description":"Result of Unix epoch/timestamp"
			},
			{
				"name":"Offset",
				"description":"Optional. Positive or Negative hours added"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fixed Delta Time",
		"category":"Time",
		"image":"./images/GetFixedDeltaTime.png",
		"description":"Get the fixedDeltaTime during the fixedUpdate call",
		"params": [
			{
				"name":"Fixed Delta Time",
				"description":"Get the fixed delta time"
			},
			{
				"name":"Every Fixed Frame",
				"description":"Repeat every fixed frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get FPS",
		"category":"Time",
		"image":"./images/GetFPS.png",
		"description":"It calculates frames/second over each updateInterval.It is also fairly accurate at very low FPS counts (<10).We do this not by simply counting frames per interval, butby accumulating FPS for each frame. This way we end up withcorrect overall FPS even if the interval renders something like 5.5 frames. credits: http://unifycommunity.com/wiki/index.php?title=FramesPerSecond",
		"params": [
			{
				"name":"Update Interval",
				"description":"Interval sampling"
			},
			{
				"name":"FPS",
				"description":"The current Frame per second"
			},
			{
				"name":"FPS_as String",
				"description":"The current Frame per second formated as string"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Time Info Advanced",
		"category":"Time",
		"image":"./images/GetTimeInfoAdvanced.png",
		"description":"Gets various useful Time measurements.",
		"params": [
			{
				"name":"Get Info",
				"description":"Time measurements properties."
			},
			{
				"name":"Store Value",
				"description":"Time Value for the choosen Time property."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Time Scale",
		"category":"Time",
		"image":"./images/GetTimeScale.png",
		"description":"Get the current TimeScale (the time at wich the game operates at).",
		"params": [
			{
				"name":"Current Time Scale",
				"description":"Store the current GameTime (1 by default)."
			},
			{
				"name":"Fixed Delta Time",
				"description":"Get the intervall (in s) at wich physics and other fixed frame rate operates."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Time Span Between Dates",
		"category":"Time",
		"image":"./images/GetTimeSpanBetweenDates.png",
		"description":"Gets various useful Time measurements between two dates. Use Totalx very likely, query for Minutes return the actual 'displayed' minutes of the time, not the total amount of the time span.",
		"params": [
			{
				"name":"Get Span Info",
				"description":"TODO"
			},
			{
				"name":"Start Date",
				"description":"The start date"
			},
			{
				"name":"End Date",
				"description":"The end date"
			},
			{
				"name":"Date Format",
				"description":"The date format startDate and endDate are expressed with"
			},
			{
				"name":"Store Value",
				"description":"The result"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Time Span Info",
		"category":"Time",
		"image":"./images/GetTimeSpanInfo.png",
		"description":"Gets various useful Time measurements for a timeSpane. Use Totalx very likely, query for Minutes return the actual 'displayed' minutes of the time, not the total amount of the time span.",
		"params": [
			{
				"name":"Time Span Create",
				"description":"The timespan creation type"
			},
			{
				"name":"Time Span",
				"description":"The TimeSpan. Make sure you set the timeSpanCreate propery to reflect the content of this string"
			},
			{
				"name":"Properties",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Wait Around Offset",
		"category":"Time",
		"image":"./images/RandomWaitAroundOffset.png",
		"description":"Like 'Random Wait' but also randomizes the min and max values by a random offset to make the result even more unpredictable.",
		"params": [
			{
				"name":"Min",
				"description":"Minimum amount of time to wait."
			},
			{
				"name":"Max",
				"description":"Maximum amount of time to wait."
			},
			{
				"name":"Offset",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"Event to send when timer is finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore time scale."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Read Epoch",
		"category":"Time",
		"image":"./images/ReadEpoch.png",
		"description":"Read a epoch timestamp (Unix)",
		"params": [
			{
				"name":"Get Epoch",
				"description":"Unix epoch/timestamp"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Date Time",
				"description":"Store epoch / timestamp as a string."
			},
			{
				"name":"Format",
				"description":"Optional format string. E.g., MM/dd/yyyy HH:mm"
			},
			{
				"name":"Local Time",
				"description":"Convert to local time"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fixed Time Step",
		"category":"Time",
		"image":"./images/SetFixedTimeStep.png",
		"description":"Scales time: 1 = normal, 0.5 = half speed, 2 = double speed.",
		"params": [
			{
				"name":"Time Step",
				"description":"Set the Timestep to a vaule"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when animating the value."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Time Scale",
		"category":"Time",
		"image":"./images/SetTimeScale.png",
		"description":"Scales time: 1 = normal, 0.5 = half speed, 2 = double speed.",
		"params": [
			{
				"name":"Time Scale",
				"description":"Scales time: 1 = normal, 0.5 = half speed, 2 = double speed."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when animating the value."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Wait Late Update",
		"category":"Time",
		"image":"./images/WaitLateUpdate.png",
		"description":"LateUpdate is called every frame. LateUpdate is called after all Update functions have been called. This is useful for order execution.",
		"params": [
			{
				"name":"Finish Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Timeline",
		"category":"Timeline",
		"image":"./images/enableTimeline.png",
		"description":"Enables the timeline component 'Playable Director'",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Enable",
				"description":"Set to true to enable the playable director. Set to false to disable it."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Timeline Current Time",
		"category":"Timeline",
		"image":"./images/getTimelineCurrentTime.png",
		"description":"Get the timeline's current time. This value is incremented according to the time update mode.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Current Time",
				"description":"Returns the current time of the timeline"
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Timeline Director Wrap Mode",
		"category":"Timeline",
		"image":"./images/getTimelineDirectorWrapMode.png",
		"description":"Get the current timelines director wrap mode. This controls how the time is incremented when it goes beyond the duration of the playable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Wrap Mode",
				"description":"Get the director wrap mode."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Timeline Duration",
		"category":"Timeline",
		"image":"./images/getTimelineDuration.png",
		"description":"Get the current timelines duration. This action requires Unity 2017.1 or above.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Duration",
				"description":"Returns the current timeline duration in seconds as a float."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Timeline Intial Time",
		"category":"Timeline",
		"image":"./images/getTimelineIntialTime.png",
		"description":"Get the current timeline's inital time. This is the time at which the timeline should start.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Time",
				"description":"Returns the current timeline intial time."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Timeline Playable Asset",
		"category":"Timeline",
		"image":"./images/getTimelinePlayableAsset.png",
		"description":"Get the playable asset used by Unity timeline and save as a variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Playable Object",
				"description":"Save the playable asset as a playmaker object."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Timeline State",
		"category":"Timeline",
		"image":"./images/getTimelineState.png",
		"description":"Get the current timeline's state as a bool. True for playing, false for paused.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Playing",
				"description":"Returns the current timeline state as a bool. True for playing, false for paused"
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Timeline Update Mode",
		"category":"Timeline",
		"image":"./images/getTimelineUpdateMode.png",
		"description":"Get the current timelines time update mode (method). This controls how time is incremented when playing back. This action requires Unity 2017.1 or above.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Update Mode",
				"description":"Set the time update mode."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Pause Timeline",
		"category":"Timeline",
		"image":"./images/pauseTimeline.png",
		"description":"Pause Unity timeline.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Timeline",
		"category":"Timeline",
		"image":"./images/playTimeline.png",
		"description":"Play Unity timeline.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Resume Timeline",
		"category":"Timeline",
		"image":"./images/resumeTimeline.png",
		"description":"Resume Unity timeline.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Playable Director Generic Binding",
		"category":"Timeline",
		"image":"./images/SetPlayableDirectorGenericBinding.png",
		"description":"Set Generic Binding for a PlayableDirector",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Track Index",
				"description":"The Track Index, leave to none to pick up the first or default"
			},
			{
				"name":"Track Name",
				"description":"The Track Name, leave to none to pick up the first or default"
			},
			{
				"name":"Binding Object",
				"description":"The game object To Bind to the PlayableDirector Timeline"
			},
			{
				"name":"Failure Event",
				"description":"EVent Sent if Track is not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Playable Director Generic Object Binding",
		"category":"Timeline",
		"image":"./images/SetPlayableDirectorGenericObjectBinding.png",
		"description":"Set Generic Binding for a PlayableDirector using an Object Variable, for example to use with Timeline's Cinemachine Shot binding",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Track Index",
				"description":"The Track Index, leave to none to pick up the first or default"
			},
			{
				"name":"Track Name",
				"description":"The Track Name, leave to none to pick up the first or default"
			},
			{
				"name":"Binding Object",
				"description":"The object To Bind to the PlayableDirector Timeline"
			},
			{
				"name":"Failure Event",
				"description":"EVent Sent if Track is not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Playable Speed",
		"category":"Timeline",
		"image":"./images/SetPlayableSpeed.png",
		"description":"Set a Playable  speed",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Track Index",
				"description":"The Track Index of the playbale"
			},
			{
				"name":"Speed",
				"description":"The  speed of the playable"
			},
			{
				"name":"Failure Event",
				"description":"Event Sent if Track is not found"
			},
			{
				"name":"Every Frame",
				"description":"repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Timeline Current Time",
		"category":"Timeline",
		"image":"./images/setTimelineCurrentTime.png",
		"description":"Set the timeline's current time.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Time",
				"description":"Sets the current time of the timeline"
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Timeline Director Wrap Mode",
		"category":"Timeline",
		"image":"./images/setTimelineDirectorWrapMode.png",
		"description":"Set the current timelines director wrap mode.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Wrap Mode",
				"description":"Set the director wrap mode."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Timeline Intial Time",
		"category":"Timeline",
		"image":"./images/setTimelineIntialTime.png",
		"description":"Set the current timeline's inital time. This is the time at which the timeline should start.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Time",
				"description":"Set the current timeline's intial time."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Timeline Playable Asset",
		"category":"Timeline",
		"image":"./images/setTimelinePlayableAsset.png",
		"description":"Set the playable asset used by Unity timeline and save as a variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Playable Object",
				"description":"Get the playable asset."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Timeline Update Mode",
		"category":"Timeline",
		"image":"./images/setTimelineUpdateMode.png",
		"description":"Set the current timelines time update mode (method). This controls how time is incremented when playing back.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Update Mode",
				"description":"Set the time update mode."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Stop Timeline",
		"category":"Timeline",
		"image":"./images/stopTimeline.png",
		"description":"Stop Unity timeline.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to hold the unity timeline components."
			},
			{
				"name":"Every Frame",
				"description":"Check this box to preform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trail Module Set Constant Lifetime",
		"category":"Shuriken/TrailModule",
		"image":"./images/TrailModuleSetConstantLifetime.png",
		"description":"Set the lifetime of a particleSystem's TrailModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Lifetime",
				"description":"The lifetime"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trail Module Set Die With Particles",
		"category":"Shuriken/TrailModule",
		"image":"./images/TrailModuleSetDieWithParticles.png",
		"description":"Set the dieWithParticles flag of a particleSystem's TrailModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Die With Particles",
				"description":"The dieWithParticles flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trail Module Set Enabled",
		"category":"Shuriken/TrailModule",
		"image":"./images/TrailModuleSetEnabled.png",
		"description":"Set the enabled flag of a particleSystem's TrailModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Enabled",
				"description":"The enabled flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trail Module Set Lifetime Multiplier",
		"category":"Shuriken/TrailModule",
		"image":"./images/TrailModuleSetLifetimeMultiplier.png",
		"description":"Set the LifetimeMultiplier of a particleSystem's TrailModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Lifetime Multiplier",
				"description":"The LifetimeMultiplier"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trail Module Set Min Vertex Distance",
		"category":"Shuriken/TrailModule",
		"image":"./images/TrailModuleSetMinVertexDistance.png",
		"description":"Set the MininumVertexDistance of a particleSystem's TrailModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Min Vertex Distance",
				"description":"The minVertexDistance"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trail Module Set Random Constant Lifetime",
		"category":"Shuriken/TrailModule",
		"image":"./images/TrailModuleSetRandomConstantLifetime.png",
		"description":"Set the random constant value lifetime of a particleSystem's TrailModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Min Lifetime",
				"description":"The minimum lifetime bound"
			},
			{
				"name":"Max Lifetime",
				"description":"The maximum lifetime bound"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trail Module Set Ratio",
		"category":"Shuriken/TrailModule",
		"image":"./images/TrailModuleSetRatio.png",
		"description":"Set the ratio of a particleSystem's TrailModule ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Ratio",
				"description":"The ratio"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trail Renderer Get Position",
		"category":"Shuriken/TrailRenderer",
		"image":"./images/TrailRendererGetPosition.png",
		"description":"Get the position of a vertex of a particleSystem's TrailRenderer ( Shuriken)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the particleSystem"
			},
			{
				"name":"Index",
				"description":"The index of the vertex"
			},
			{
				"name":"Position",
				"description":"The position at the given index"
			},
			{
				"name":"Out Of Range",
				"description":"false if index is not found"
			},
			{
				"name":"Out Of Range Event",
				"description":"event sent if index is not found"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Align Transform Using Proxy",
		"category":"Transform",
		"image":"./images/AlignTransformUsingProxy.png",
		"description":"Aligns a GameObject to another using a proxy( relative to that proxy basically)",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Target",
				"description":"TODO"
			},
			{
				"name":"Proxy",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Detect Movement",
		"category":"Transform",
		"image":"./images/DetectMovement.png",
		"description":"Transforms a Direction from a Game Object's local space to world space.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to watch movement"
			},
			{
				"name":"Distance Threshold",
				"description":"The distance threshold to fire the movementDetected event"
			},
			{
				"name":"Use Sqr Magnitude",
				"description":"Prefer SqrMagnitude over simple magnitude (real distance) for better performances"
			},
			{
				"name":"Movement Detected",
				"description":"Event Sent when the object moved passed the distance threshold"
			},
			{
				"name":"Current Distance",
				"description":"The current distance being recorded"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Direction Between Gameobjects",
		"category":"Transform",
		"image":"./images/DirectionBetweenGameobjects.png",
		"description":"Calculate the direction between two gameobjects with the option to normalize. This is also known as the heading.",
		"params": [
			{
				"name":"Game Object",
				"description":"Source Gameobject."
			},
			{
				"name":"Target",
				"description":"Target Gameobject."
			},
			{
				"name":"Direction",
				"description":"Direction between gameobjects."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Normalize",
				"description":"Normaize the direction between these two gameobjects using distance. Only enable when needed as this does an extra step of calculation."
			},
			{
				"name":"Distance",
				"description":"Distance between objects is only calculated when normalize is toggled."
			},
			{
				"name":"Direction Normalized",
				"description":"Direction between gameobjects normalized. Also known as heading"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Follow Mouse",
		"category":"Transform",
		"image":"./images/FollowMouse.png",
		"description":"Have an object follow the mouse.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to Follow the mouse"
			},
			{
				"name":"Offset X",
				"description":"Show the object a specific distance on the X axis, away from the mouse."
			},
			{
				"name":"Offset Y",
				"description":"Show the object a specific distance on the X axis, away from the mouse."
			},
			{
				"name":"Keep On Screen",
				"description":"Select this if you don't want the object to move off screen with the mouse."
			},
			{
				"name":"Screen Offset",
				"description":"This determines how close to the edge of the screen the object can get IF Keep On Screen is used."
			},
			{
				"name":"Distance To Camera",
				"description":"The distance to the camera"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Follow Mouse 2D",
		"category":"Transform",
		"image":"./images/FollowMouse2D.png",
		"description":"Moves a GameObject under the current mouse position in 2D space with optional smoothing to simulate a dragging-delay. (Currently) only supports orthographic cameras.",
		"params": [
			{
				"name":"Camera",
				"description":"The GameObject with the camera attached, that you want to capture the mouse position in."
			},
			{
				"name":"Attached Game Object",
				"description":"Move a GameObject with the mouse poisition. Can be None/null if you only want to store the current independent mouse position."
			},
			{
				"name":"Smoothing",
				"description":"How much delay is applied to the dragged GameObject. 1 = Object is directly under the mouse; the closer you get to 0, the more it lags behind (on 0 it stands still)."
			},
			{
				"name":"Offset",
				"description":"Determines an offset for the dragged GameObject from the current mouse position if it's not supposed to be directly under it."
			},
			{
				"name":"Store Mouse Position",
				"description":"Store the current mouse position."
			},
			{
				"name":"Keep On Screen",
				"description":"Select this if you don't want the object to move off screen with the mouse."
			},
			{
				"name":"Screen Offset",
				"description":"This determines how close to the edge of the screen the object can get IF Keep On Screen is used."
			},
			{
				"name":"Stop Dragging",
				"description":"Toggle this to let go of the GameObject while dragging."
			},
			{
				"name":"Reset Position",
				"description":"Wheter to move the GameObject back to the position before dragging"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Forward Direction",
		"category":"Transform",
		"image":"./images/GetForwardDirection.png",
		"description":"Transforms a Direction from a Game Object's local space to world space.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Forward Direction",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Game Object Screen Position",
		"category":"Transform",
		"image":"./images/GetGameObjectScreenPosition.png",
		"description":"Get the actual position on the screen of the given GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"<Insert variable description>"
			},
			{
				"name":"Camera",
				"description":"The camera that sees the GameObject. If not specified, uses the MainCamera."
			},
			{
				"name":"V2 Result",
				"description":"Store the position as a Vector2 variable."
			},
			{
				"name":"V3 Result",
				"description":"Or store the position as a Vector3 variable (z = 0, but you wont need to convert it to use it in other actions."
			},
			{
				"name":"Normalize",
				"description":"If true, X/Y coordinates are considered normalized (0-1), otherwise they are expected to be in pixels"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Local Rotation",
		"category":"Transform",
		"image":"./images/GetLocalRotation.png",
		"description":"Gets the local Rotation of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Quaternion",
				"description":"TODO"
			},
			{
				"name":"Vector",
				"description":"TODO"
			},
			{
				"name":"X Angle",
				"description":"TODO"
			},
			{
				"name":"Y Angle",
				"description":"TODO"
			},
			{
				"name":"Z Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Negative Rotation",
		"category":"Transform",
		"image":"./images/GetNegativeRotation.png",
		"description":"Gets the Rotation of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"X Angle",
				"description":"TODO"
			},
			{
				"name":"Y Angle",
				"description":"TODO"
			},
			{
				"name":"Z Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Position Add Offset",
		"category":"Transform",
		"image":"./images/GetPositionAddOffset.png",
		"description":"Get the position of a Game Object and add an offset to that Vector. Optionally applies that offset to another/the same GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to get the position off of."
			},
			{
				"name":"Vector 3 Offset",
				"description":"Use a Vector3 variable or specify each axis individually."
			},
			{
				"name":"X Offset",
				"description":"TODO"
			},
			{
				"name":"Y Offset",
				"description":"TODO"
			},
			{
				"name":"Z Offset",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"Wheter to use local or world space."
			},
			{
				"name":"Operation",
				"description":"TODO"
			},
			{
				"name":"Store Vector 3 Result",
				"description":"The starting position with offset."
			},
			{
				"name":"Apply Offset To GO",
				"description":"If the GameObject's position should be changed with the offset. (the Value of 'Store Vector3 Result' will be the new position)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Position Advanced",
		"category":"Transform",
		"image":"./images/GetPositionAdvanced.png",
		"description":"Gets the Position of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable.\n Advanced features allows selection of update type.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Vector",
				"description":"TODO"
			},
			{
				"name":"X",
				"description":"TODO"
			},
			{
				"name":"Y",
				"description":"TODO"
			},
			{
				"name":"Z",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Update Type",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Position Multiple",
		"category":"Transform",
		"image":"./images/GetPositionMultiple.png",
		"description":"Gets Vector3 positions of multiple GameObjects.",
		"params": [
			{
				"name":"Game Objects",
				"description":"TODO"
			},
			{
				"name":"Store Positions",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Relative Rotation",
		"category":"Transform",
		"image":"./images/GetRelativeRotation.png",
		"description":"Gets the relative Rotation of a Game Object compared to another",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Reference",
				"description":"TODO"
			},
			{
				"name":"Quaternion",
				"description":"TODO"
			},
			{
				"name":"Vector",
				"description":"TODO"
			},
			{
				"name":"X Angle",
				"description":"TODO"
			},
			{
				"name":"Y Angle",
				"description":"TODO"
			},
			{
				"name":"Z Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Rotation Add Offset",
		"category":"Transform",
		"image":"./images/GetRotationAddOffset.png",
		"description":"Get the rotation of a Game Object and add an offset to that Quaternion. Optionally applies that offset to another/the same GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to get the rotation off of."
			},
			{
				"name":"Vector 3 Offset",
				"description":"Use a Vector3 variable or specify each axis individually."
			},
			{
				"name":"X Offset",
				"description":"TODO"
			},
			{
				"name":"Y Offset",
				"description":"TODO"
			},
			{
				"name":"Z Offset",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"Wheter to use local or world space."
			},
			{
				"name":"Operation",
				"description":"TODO"
			},
			{
				"name":"Store Vector 3 Result",
				"description":"The starting rotation with offset."
			},
			{
				"name":"Apply Offset To GO",
				"description":"If the GameObject's rotation should be changed with the offset. (the Value of 'Store Vector3 Result' will be the new rotation)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Rotation Advanced",
		"category":"Transform",
		"image":"./images/GetRotationAdvanced.png",
		"description":"Gets the Rotation of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable. Advanced option let you define when to execute the action, on update, fixedupdate or lateupdate",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Quaternion",
				"description":"TODO"
			},
			{
				"name":"QX Angle",
				"description":"TODO"
			},
			{
				"name":"QY Angle",
				"description":"TODO"
			},
			{
				"name":"QZ Angle",
				"description":"TODO"
			},
			{
				"name":"Vector",
				"description":"TODO"
			},
			{
				"name":"X Angle",
				"description":"TODO"
			},
			{
				"name":"Y Angle",
				"description":"TODO"
			},
			{
				"name":"Z Angle",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scale Add Offset",
		"category":"Transform",
		"image":"./images/GetScaleAddOffset.png",
		"description":"Get the scale of a Game Object and add an offset to that Vector. Optionally applies that offset to another/the same GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to get the scale off of."
			},
			{
				"name":"Vector 3 Offset",
				"description":"Use a Vector3 variable or specify each axis individually."
			},
			{
				"name":"X Offset",
				"description":"TODO"
			},
			{
				"name":"Y Offset",
				"description":"TODO"
			},
			{
				"name":"Z Offset",
				"description":"TODO"
			},
			{
				"name":"Operation",
				"description":"TODO"
			},
			{
				"name":"Store Vector 3 Result",
				"description":"The starting scale with Offset."
			},
			{
				"name":"Apply Offset To GO",
				"description":"If the GameObject's scale should be changed with the offset. (the Value of 'Store Vector3 Result' will be the new scale)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Transform Distance",
		"category":"Transform",
		"image":"./images/GetTransformDistance.png",
		"description":"Gets the distance based on the Transform Values.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Target",
				"description":"TODO"
			},
			{
				"name":"Select Distance Type",
				"description":"TODO"
			},
			{
				"name":"Get Negative",
				"description":"Gets a negative and positive values depending on the transform position."
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Transform Parts",
		"category":"GameObject",
		"image":"./images/GetTransformParts.png",
		"description":"Gets a Game Object's Transform as either a Transform or individual Pos/Rot/Sca Vector3's.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Store Transform",
				"description":"The entire transform object."
			},
			{
				"name":"Store Position",
				"description":"The position Vector3."
			},
			{
				"name":"Store Rotation",
				"description":"The rotation EulerAngles."
			},
			{
				"name":"Store Quaternion",
				"description":"The rotation Quaternion."
			},
			{
				"name":"Store Scale",
				"description":"The scale Vector3."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Transform Point Side",
		"category":"GameObject",
		"image":"./images/GetTransformPointSide.png",
		"description":"Gets the side of a point compared to a transform",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject transform acting as the center for check which side the point it"
			},
			{
				"name":"Point Game Object",
				"description":"The point position. Leave to none if you are setting 'point' "
			},
			{
				"name":"Point",
				"description":"The position. Leave to none for no effect, else overrides pointTransform"
			},
			{
				"name":"Space",
				"description":"This is used for point to define its reference"
			},
			{
				"name":"Threshold",
				"description":"Threshold value, a value of 1 means that the point must be perfectly perpendicular to side face. If you get unknown results, lower the threshold"
			},
			{
				"name":"Side",
				"description":"The side"
			},
			{
				"name":"Side As String",
				"description":"The side as string"
			},
			{
				"name":"Front Event",
				"description":"Event sent side is front"
			},
			{
				"name":"Back Event",
				"description":"Event sent side is back"
			},
			{
				"name":"Top Event",
				"description":"Event sent side is top"
			},
			{
				"name":"Bottom Event",
				"description":"Event sent side is bottom"
			},
			{
				"name":"Left Event",
				"description":"Event sent side is left"
			},
			{
				"name":"Right Event",
				"description":"Event sent side is right"
			},
			{
				"name":"Unknown Event",
				"description":"Event sent side is unknown, likely because center and point are the same"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Note: Events will be sent only when side has changed"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Transform Rotation Inspector Euler",
		"category":"Transform",
		"image":"./images/GetTransformRotationInspectorEuler.png",
		"description":"Gets the rotation euler angles from a gameobject, in the same way as the Unity inspector",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Vector",
				"description":"TODO"
			},
			{
				"name":"X Angle",
				"description":"TODO"
			},
			{
				"name":"Y Angle",
				"description":"TODO"
			},
			{
				"name":"Z Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Transform Sibling Index",
		"category":"Transform",
		"image":"./images/GetTransformSiblingIndex.png",
		"description":"Gets the transform sibling index in the parent transform list of children.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to get its transform sibling index."
			},
			{
				"name":"Index",
				"description":"The index in the local transform list to move the transform to. Value will be clamped between 0 and the last child"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Transform Velocity",
		"category":"Transform",
		"image":"./images/GetTransformVelocity.png",
		"description":"Gets the world transform velocity and direction of a GameObject",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Store Direction",
				"description":"Store the direction / velocity"
			},
			{
				"name":"Space",
				"description":"Store local direction or world?"
			},
			{
				"name":"Store Magnitude",
				"description":"Store the magnitude / speed"
			},
			{
				"name":"Store Square Magnitude",
				"description":"Store the square magnitude / speed. Takes less performances"
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Inverse Transform Vector",
		"category":"Transform",
		"image":"./images/InverseTransformVector.png",
		"description":"Inverse transforms a Vector from a Game Object's world space to local space.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Direction",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Look At 2",
		"category":"Transform",
		"image":"./images/LookAt2.png",
		"description":"Rotates a Game Object so its forward vector points at a Target. The Target can be specified as a GameObject or a world Position. If you specify both, then Position specifies a local offset from the target object's Position. Optionnaly let you define the look in local space, so that 'keep vertical' works locally",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Target Object",
				"description":"The GameObject to Look At."
			},
			{
				"name":"Target Position",
				"description":"World position to look at, or local offset from Target Object if specified."
			},
			{
				"name":"Up Vector",
				"description":"Rotate the GameObject to point its up direction vector in the direction hinted at by the Up Vector. See Unity Look At docs for more details."
			},
			{
				"name":"Keep Vertical",
				"description":"Don't rotate vertically."
			},
			{
				"name":"Constraint Locally",
				"description":"If Keep vertical is true, constraintLocally will use the local vertical axis, not the world vertical axis."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line from the GameObject to the Target."
			},
			{
				"name":"Debug Line Color",
				"description":"Color to use for the debug line."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Look At 2d Clamped",
		"category":"Transform",
		"image":"./images/LookAt2dClamped.png",
		"description":"Rotates a 2d Game Object on it's z axis so its forward vector points at a 2d or 3d position. Optional clamp between angles",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Vector 2 Target",
				"description":"The 2d position to Look At."
			},
			{
				"name":"Vector 3 Target",
				"description":"The 3d position to Look At. If not set to none, will be added to the 2d target"
			},
			{
				"name":"Rotation Offset",
				"description":"Set the GameObject starting offset. In degrees. 0 if your object is facing right, 180 if facing left etc..."
			},
			{
				"name":"Min Angle Limit",
				"description":"The minimum angle limit (the limit being -180 degrees). Leave to none for no effect "
			},
			{
				"name":"Max Angle Limit",
				"description":"The maximum angle limit (the limit being 180 degrees). Leave to none for no effect "
			},
			{
				"name":"Debug",
				"description":"Draw a debug line from the GameObject to the Target."
			},
			{
				"name":"Debug Line Color",
				"description":"Color to use for the debug line."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Look At 2d Game Object Clamped",
		"category":"Transform",
		"image":"./images/LookAt2dGameObjectClamped.png",
		"description":"Rotates a 2d Game Object on it's z axis so its forward vector points at a Target. Optional clamp between angles",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Target Object",
				"description":"The GameObject to Look At."
			},
			{
				"name":"Rotation Offset",
				"description":"Set the GameObject starting offset. In degrees. 0 if your object is facing right, 180 if facing left etc..."
			},
			{
				"name":"Min Angle Limit",
				"description":"The minimum angle limit (the limit being -180 degrees). Leave to none for no effect "
			},
			{
				"name":"Max Angle Limit",
				"description":"The maximum angle limit (the limit being 180 degrees). Leave to none for no effect "
			},
			{
				"name":"Debug",
				"description":"Draw a debug line from the GameObject to the Target."
			},
			{
				"name":"Debug Line Color",
				"description":"Color to use for the debug line."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Match Transform",
		"category":"Transform",
		"image":"./images/MatchTransform.png",
		"description":"Sets GameObject's transform to match TargetObject's.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that will be set."
			},
			{
				"name":"Target Object",
				"description":"The TargetObject to be matched."
			},
			{
				"name":"Match Position",
				"description":"TODO"
			},
			{
				"name":"Match Rotation",
				"description":"TODO"
			},
			{
				"name":"Match Scale",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"Use local or world space."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Move Towards Advanced",
		"category":"Transform",
		"image":"./images/MoveTowardsAdvanced.png",
		"description":"Moves a Game Object towards a Target. Optionally sends an event when successful. The Target can be specified as a Game Object or a world Position. If you specify both, then the Position is used as a local offset from the Object's Position.\n Advanced features allows selection of update type.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to Move"
			},
			{
				"name":"Target Object",
				"description":"A target GameObject to move towards. Or use a world Target Position below."
			},
			{
				"name":"Target Position",
				"description":"A world position if no Target Object. Otherwise used as a local offset from the Target Object."
			},
			{
				"name":"Ignore Vertical",
				"description":"Ignore any height difference in the target."
			},
			{
				"name":"Max Speed",
				"description":"The maximum movement speed. HINT: You can make this a variable to change it over time."
			},
			{
				"name":"Finish Distance",
				"description":"Distance at which the move is considered finished, and the Finish Event is sent."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the Finish Distance is reached."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Projectile To Target Arc Animation",
		"category":"Custom",
		"image":"./images/ProjectileToTargetArcAnimation.png",
		"description":"TODO",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Start Pos",
				"description":"TODO"
			},
			{
				"name":"Target Pos",
				"description":"Position we want to hit"
			},
			{
				"name":"Speed",
				"description":"Horizontal speed, in units/sec"
			},
			{
				"name":"Arc Height",
				"description":"How high the arc should be, in units"
			},
			{
				"name":"Next Pos",
				"description":"TODO"
			},
			{
				"name":"Archfloat",
				"description":"TODO"
			},
			{
				"name":"Target Reached",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Reset Transforms",
		"category":"Transform",
		"image":"./images/ResetTransforms.png",
		"description":"Resets each Transform of the given GameObjects to their inital value (Position(0, 0, 0), Rotation(0, 0, 0) and Scale(1, 1, 1)).",
		"params": [
			{
				"name":"Game Objects",
				"description":"The GameObject to reset the Transform of."
			},
			{
				"name":"Reset Position",
				"description":"Include Position."
			},
			{
				"name":"Reset Rotation",
				"description":"Include Rotation."
			},
			{
				"name":"Reset Scale",
				"description":"Include Scale."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rotate Around",
		"category":"Transform",
		"image":"./images/RotateAround.png",
		"description":"Rotates Around a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Around Game Object",
				"description":"Rotate around this GameObject."
			},
			{
				"name":"Rotation Point",
				"description":"Rotate around this point. If 'aroundGameObject' defined, will offset by 'rotationPoint'"
			},
			{
				"name":"Rotation Axis",
				"description":"Rotate around this axis."
			},
			{
				"name":"Use Around Game Object Axis Space",
				"description":"If 'aroundGameObject' defined and 'useAroundGameObjectAxisSpace' TRUE, 'rotationAxis' will be defined in 'aroundGameObject' local space."
			},
			{
				"name":"Angle",
				"description":"Amount to rotate in degrees."
			},
			{
				"name":"Per Second",
				"description":"Rotate over one second"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Stop Angle",
				"description":"Amount to rotate in degrees before stopping animation. Zero rotates forever."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rotate Around Target",
		"category":"Transform",
		"image":"./images/RotateAroundTarget.png",
		"description":"Rotates a Game Object around a target position. You can use this to do targeting like the Dark Souls games.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to rotate. Usually your player character."
			},
			{
				"name":"Target Position",
				"description":"Vector3 for the target object to rotate around. This is your target object you want to rotate around."
			},
			{
				"name":"Rotation Direction",
				"description":"Movement on the X axis while targeting. Use the vector from a Get Axis action here."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Position Advanced",
		"category":"Transform",
		"image":"./images/SetPositionAdvanced.png",
		"description":"Sets the Position of a Game Object. To leave any axis unchanged, set variable to 'None'.\n Advanced features allows selection of update type.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to position."
			},
			{
				"name":"Vector",
				"description":"Use a stored Vector3 position, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"TODO"
			},
			{
				"name":"Y",
				"description":"TODO"
			},
			{
				"name":"Z",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"Use local or world space."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Position And Rotation",
		"category":"Transform",
		"image":"./images/SetPositionAndRotation.png",
		"description":"Sets the Position and rotation of a Game Object. To leave any axis unchanged, set variable to 'None'.\n Advanced features allows selection of update type.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to position."
			},
			{
				"name":"Position",
				"description":"Use a stored Vector3 position, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"TODO"
			},
			{
				"name":"Y",
				"description":"TODO"
			},
			{
				"name":"Z",
				"description":"TODO"
			},
			{
				"name":"Quaternion",
				"description":"Use a stored quaternion, or vector angles below."
			},
			{
				"name":"Euler",
				"description":"Use euler angles stored in a Vector3 variable, and/or set each axis below."
			},
			{
				"name":"X Angle",
				"description":"TODO"
			},
			{
				"name":"Y Angle",
				"description":"TODO"
			},
			{
				"name":"Z Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Positions",
		"category":"Transform",
		"image":"./images/SetPositions.png",
		"description":"Sets the Position of multiple Game Object to one Vector3 or each one individually.",
		"params": [
			{
				"name":"Game Objects",
				"description":"The GameObject to position."
			},
			{
				"name":"Positions",
				"description":"The individual position to apply to the current GameObject if 'Apply To All' isn't 'None'."
			},
			{
				"name":"Apply To All",
				"description":"Use a stored Vector3 variable or specify each axis individually. Gets ignores if 'None'."
			},
			{
				"name":"Space",
				"description":"Use local or world space."
			},
			{
				"name":"Ignore Z Axis",
				"description":"Ignores the Z-Axis on each Vector3 to effectively use them as Vector2's. Useful if you only want to change the position in a 2D manner."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rotation Advanced",
		"category":"Transform",
		"image":"./images/SetRotationAdvanced.png",
		"description":"Sets the Rotation of a Game Object. To leave any axis unchanged, set variable to 'None'.\n Advanced features allows selection of update type.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Quaternion",
				"description":"Use a stored quaternion, or vector angles below."
			},
			{
				"name":"Vector",
				"description":"Use euler angles stored in a Vector3 variable, and/or set each axis below."
			},
			{
				"name":"X Angle",
				"description":"TODO"
			},
			{
				"name":"Y Angle",
				"description":"TODO"
			},
			{
				"name":"Z Angle",
				"description":"TODO"
			},
			{
				"name":"Space",
				"description":"Use local or world space."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rotation Velocity Direction 2d",
		"category":"Transform",
		"image":"./images/SetRotationVelocityDirection2d.png",
		"description":"Sets the Rotation of a Game Object to the force / velocity direction 2D - NOTE: sprite at 0.0.0 should face right",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Update Type Select",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Scale By Percentage",
		"category":"Transform",
		"image":"./images/SetScaleByPercentage.png",
		"description":"Sets the Scale of a Game Object by percentage (%)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to scale."
			},
			{
				"name":"Global",
				"description":"Increase or reduce by %"
			},
			{
				"name":"X",
				"description":"TODO"
			},
			{
				"name":"Y",
				"description":"TODO"
			},
			{
				"name":"Z",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This is useful if you want to override the position of objects that are animated or otherwise positioned in Update."
			},
			{
				"name":"Vector",
				"description":"Use stored Vector3 value, and/or set each axis below."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Transform As First Sibling",
		"category":"Transform",
		"image":"./images/SetTransformAsFirstSibling.png",
		"description":"Move the transform to the start of the local transform list.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to move as first sibling."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Transform As Last Sibling",
		"category":"Transform",
		"image":"./images/SetTransformAsLastSibling.png",
		"description":"Move the transform to the end of the local transform list.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to move as the last sibling."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Transform Parent",
		"category":"Transform",
		"image":"./images/SetTransformParent.png",
		"description":"Sets the Parent of a Game Object. It uses the Transform.SetParent method",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to parent."
			},
			{
				"name":"Parent",
				"description":"The new parent for the Game Object."
			},
			{
				"name":"World Position Stays",
				"description":"If true, the parent-relative position, scale and rotation is modified such that the object keeps the same world space position, rotation and scale as before."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Transform Sibling Index",
		"category":"Transform",
		"image":"./images/SetTransformSiblingIndex.png",
		"description":"Move the transform to a given index in the local transform list.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to set its sibling index"
			},
			{
				"name":"Index",
				"description":"The index in the local parent transform list to move the transform to. Value will be clamped between 0 and the last child"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Smooth Follow Action No Look At",
		"category":"Transform",
		"image":"./images/SmoothFollowActionNoLookAt.png",
		"description":"Action version of Unity's Smooth Follow script. Does not look at the target so that it allows you to use a separate look at action.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to control. E.g. The camera."
			},
			{
				"name":"Target Object",
				"description":"The GameObject to follow usually the Player."
			},
			{
				"name":"Distance",
				"description":"The distance in the x-z plane to the target."
			},
			{
				"name":"Height",
				"description":"The height we want the camera to be above the target"
			},
			{
				"name":"Height Damping",
				"description":"How much to dampen height movement. More = tighter following."
			},
			{
				"name":"Rotation Damping",
				"description":"How much to dampen rotation changes. More = less choppiness."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Smooth Look At Direction 2",
		"category":"Transform",
		"image":"./images/SmoothLookAtDirection2.png",
		"description":"Smoothly Rotates a Game Object so its forward vector points in the specified Direction. Lets you fire an event when minmagnitude is reached",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Target Direction",
				"description":"The direction to smoothly rotate towards."
			},
			{
				"name":"Min Magnitude",
				"description":"Only rotate if Target Direction Vector length is greater than this threshold."
			},
			{
				"name":"Up Vector",
				"description":"Keep this vector pointing up as the GameObject rotates."
			},
			{
				"name":"Keep Vertical",
				"description":"Eliminate any tilt up/down as the GameObject rotates."
			},
			{
				"name":"Speed",
				"description":"How quickly to rotate."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This can help eliminate jitters in some situations."
			},
			{
				"name":"Finish Event",
				"description":"Event to send if the direction difference is less than the min Tolerance."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Smooth Point At Y",
		"category":"Quaternion",
		"image":"./images/SmoothPointAtY.png",
		"description":"Smoothly Rotates the local y axis of a gameObject to a target, rotating around the local Z axis.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate to face a target."
			},
			{
				"name":"Target Object",
				"description":"the target"
			},
			{
				"name":"Angle Speed",
				"description":"The degrees per seconds to point at the target"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Transform Direction Advanced",
		"category":"Transform",
		"image":"./images/TransformDirectionAdvanced.png",
		"description":"Transforms a Direction from a Game Object's local space to world space. This operation is not affected by scale or position of the transform. The returned vector has the same length as direction.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject"
			},
			{
				"name":"Local Direction",
				"description":"The local direction"
			},
			{
				"name":"Store Result",
				"description":"The local direction from gameObject expressed in world space"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Transform Has Changed",
		"category":"Transform",
		"image":"./images/TransformHasChanged.png",
		"description":"Sets a bool to true if Transform has changed.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to check if transform has changed."
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Changed Event",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Transform Vector",
		"category":"Transform",
		"image":"./images/TransformVector.png",
		"description":"Transforms a Vector from a Game Object's local space to world space.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Local Direction",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Translate Advanced",
		"category":"Transform",
		"image":"./images/TranslateAdvanced.png",
		"description":"Translates a Game Object. Use a Vector3 and/or Vector2 variable and/or XYZ components. To leave any axis unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to translate."
			},
			{
				"name":"Vector",
				"description":"A translation vector3. NOTE: You can override individual axis below."
			},
			{
				"name":"Vector 2",
				"description":"A translation vector2. NOTE: You can override individual axis below."
			},
			{
				"name":"X",
				"description":"Translation along x axis."
			},
			{
				"name":"Y",
				"description":"Translation along y axis."
			},
			{
				"name":"Z",
				"description":"Translation along z axis."
			},
			{
				"name":"Space",
				"description":"Translate in local or world space."
			},
			{
				"name":"Per Second",
				"description":"Translate over one second"
			},
			{
				"name":"Realtime",
				"description":"is translation per seconds, uses realtime ( unaffected by time scale)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Degrees To Radians",
		"category":"Trigonometry",
		"image":"./images/ConvertDegreesToRadians.png",
		"description":"Convert Degrees to Radians. This is using a constant: (PI * 2) / 360.",
		"params": [
			{
				"name":"Angle In Degrees",
				"description":"The angle in degrees"
			},
			{
				"name":"Angle In Radians",
				"description":"The angle expressed in radians"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Radians To Degrees",
		"category":"Trigonometry",
		"image":"./images/ConvertRadiansToDegrees.png",
		"description":"Convert Radians to Degrees. This is using a constant: 360 / (PI * 2).",
		"params": [
			{
				"name":"Angle In Radians",
				"description":"The angle expressed in radians"
			},
			{
				"name":"Angle In Degrees",
				"description":"The angle in degrees"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get 360 Angle To Target",
		"category":"Trigonometry",
		"image":"./images/Get360AngleToTarget.png",
		"description":"Gets the Angle (in degreees, 0 to 360 ) between a Game Object's given axis and a Target. The Target can be defined as a Game Object or a world Position. If you specify both, then the Position will be used as a local offset from the Object's position.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Target Object",
				"description":"TODO"
			},
			{
				"name":"Target Position",
				"description":"TODO"
			},
			{
				"name":"Direction",
				"description":"TODO"
			},
			{
				"name":"Invert Direction",
				"description":"TODO"
			},
			{
				"name":"Store Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Delta Angle",
		"category":"Trigonometry",
		"image":"./images/GetDeltaAngle.png",
		"description":"Gets the Delta-angle between to rotations.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Target Object",
				"description":"TODO"
			},
			{
				"name":"Direction",
				"description":"TODO"
			},
			{
				"name":"Store Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Signed Angle To Target",
		"category":"Trigonometry",
		"image":"./images/GetSignedAngleToTarget.png",
		"description":"Gets the signed Angle (in degrees, clockwise, -180 to 180) between a Game Object's given axis and a Target. The Target can be defined as a Game Object or a world Position. If you specify both, then the Position will be used as a local offset from the Object's position.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Target Object",
				"description":"TODO"
			},
			{
				"name":"Target Position",
				"description":"TODO"
			},
			{
				"name":"Direction",
				"description":"TODO"
			},
			{
				"name":"Invert Sign",
				"description":"TODO"
			},
			{
				"name":"Store Angle",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Twitter_Api",
		"category":"Twitter",
		"image":"./images/Twitter_Api.png",
		"description":"Twitter API 1.1 - GET / POST - open help url for more info",
		"params": [
			{
				"name":"Oauth Consumer Key",
				"description":"TODO"
			},
			{
				"name":"Oauth Consumer Secret",
				"description":"TODO"
			},
			{
				"name":"Oauth Token",
				"description":"TODO"
			},
			{
				"name":"Oauth Token Secret",
				"description":"TODO"
			},
			{
				"name":"Query",
				"description":"Build a query string in this format twitter '(Parameters=Value)' For example: (q=Playmaker)(count=100)(result_type=popular)"
			},
			{
				"name":"Set Twitter Url",
				"description":"The main Api Url - Leave blank for default"
			},
			{
				"name":"Set Twitter Url Type",
				"description":"The api url extension - Leave blank for default(search/tweets.json) "
			},
			{
				"name":"Debug On",
				"description":"See data in unity console"
			},
			{
				"name":"Json Search Result",
				"description":"Raw Json data from Twitter"
			},
			{
				"name":"Oauth Time Stamp",
				"description":"Your query timestamp"
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Button Auto Scroll For Game Pad",
		"category":"uGui",
		"image":"./images/ButtonAutoScrollForGamePad.png",
		"description":"Makes a scroll rect filled with buttons autoscroll when they are selected. Put this on the GameObject with the Scroll Rect. ",
		"params": [
			{
				"name":"Game Object",
				"description":"Game Object with the Scroll Rect component."
			},
			{
				"name":"Up Adjust",
				"description":"Use this to add padding when upper buttons are selected. If using a Grid Layout group on your content also use top padding."
			},
			{
				"name":"Nested Button",
				"description":"Try setting this to true if nested buttons are not working."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Event System",
		"category":"uGui",
		"image":"./images/EnableEventSystem.png",
		"description":"Enables an Event System ",
		"params": [
			{
				"name":"Enable ES",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play U Gui Image Animation",
		"category":"uGui",
		"image":"./images/PlayUGuiImageAnimation.png",
		"description":"Plays a series of sprites at a given framerate on a GameObject with an image sprite of a UGui Image component.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Frames Per Second",
				"description":"The framerate to animate the sprites"
			},
			{
				"name":"Loop",
				"description":"-1 or 0 for infinite loop, animation done will never be called. More than 0 to define the number of times to play."
			},
			{
				"name":"Animation Done Event",
				"description":"TODO"
			},
			{
				"name":"Image",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"U Gui Drag",
		"category":"uGui",
		"image":"./images/uGuiDrag.png",
		"description":"Drag uGui element in game",
		"params": [
			{
				"name":"Is Mobile",
				"description":"use touch"
			},
			{
				"name":"Tag",
				"description":"TODO"
			},
			{
				"name":"Update Type Select",
				"description":"TODO"
			},
			{
				"name":"Pause",
				"description":"TODO"
			},
			{
				"name":"Force Quit",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"U Gui Set Image Alpha Test Threshold",
		"category":"uGui",
		"image":"./images/uGuiSetImageAlphaTestThreshold.png",
		"description":"Set The alpha test minimum threshold on a uGui image",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Image ui component."
			},
			{
				"name":"Alpha Threshold",
				"description":"The alpha threshold specifies the minimum alpha a pixel must have for the event to considered a \"hit\" on the Image."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"U Gui Raw Image Get Texture",
		"category":"uGui",
		"image":"./images/uGuiRawImageGetTexture.png",
		"description":"Get the texture of a UGui RawImage component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the RawImage ui component."
			},
			{
				"name":"Texture",
				"description":"The texture of the UGui RawImage component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"U Gui Set First Selected Game Object",
		"category":"uGui",
		"image":"./images/UGuiSetFirstSelectedGameObject.png",
		"description":"Sets a game object as first selected AND selected game object. ",
		"params": [
			{
				"name":"First Selected",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Button Array Index",
		"category":"UI",
		"image":"./images/UiButtonArrayIndex.png",
		"description":"Set up multiple button events in a single action.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the events."
			},
			{
				"name":"Game Objects",
				"description":"The GameObject with the UI button component."
			},
			{
				"name":"Click Events",
				"description":"Send this event when the button is Clicked."
			},
			{
				"name":"Click Index",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Button From Array Index",
		"category":"UI",
		"image":"./images/UiButtonFromArrayIndex.png",
		"description":"Set up multiple button events in a single action.",
		"params": [
			{
				"name":"Button Array",
				"description":"The Array Variable to use. This need to be the gameobjects with the Button component"
			},
			{
				"name":"Event Target",
				"description":"Where to send the events."
			},
			{
				"name":"Click Event",
				"description":"Send an  event when a button is Clicked."
			},
			{
				"name":"Click Index",
				"description":"Get the index number from the pressed button. (1st button is index 0, 2nd button is index 1, and so on"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Canvas Group Get Alpha",
		"category":"UI",
		"image":"./images/UiCanvasGroupGetAlpha.png",
		"description":"Get CanvasGroup Alpha.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a UI CanvasGroup component."
			},
			{
				"name":"Alpha",
				"description":"The alpha of the UI CanvasGroup."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI To World Point",
		"category":"UI",
		"image":"./images/UiToWorldPoint.png",
		"description":"Sets the Main Camera.",
		"params": [
			{
				"name":"Game Object Camera",
				"description":"The GameObject to set as the main camera (should have a Camera component)."
			},
			{
				"name":"Ui Element",
				"description":"this should be a ui element else you will get strange behaviour"
			},
			{
				"name":"Target Position",
				"description":"TODO"
			},
			{
				"name":"Target",
				"description":"TODO"
			},
			{
				"name":"Offset",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Get Debug Mode",
		"category":"UnityAds",
		"image":"./images/UnityAdsGetDebugMode.png",
		"description":"Gets the debug mode of UnityAds.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Initialize",
		"category":"UnityAds",
		"image":"./images/UnityAdsInitialize.png",
		"description":"Manually Initializes UnityAds.\nNormally, this is done from Editor and you should only call this method if you have disabled UnityAds from the Editor Settings in the Connect Window ",
		"params": [
			{
				"name":"Ios Game Id",
				"description":"TODO"
			},
			{
				"name":"Android Game Id",
				"description":"TODO"
			},
			{
				"name":"Test Mode",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Is Ready",
		"category":"UnityAds",
		"image":"./images/UnityAdsIsReady.png",
		"description":"Get the current status of UnityAds.",
		"params": [
			{
				"name":"Zone Id",
				"description":"ZoneId can be defined in the ads editor setup. Leave to none for default behavior"
			},
			{
				"name":"Is Ready",
				"description":"The current ready of UnityAds."
			},
			{
				"name":"Is Ready Event",
				"description":"Event sent if and when ready"
			},
			{
				"name":"Is Not Ready Event",
				"description":"Event sent if and when not ready"
			},
			{
				"name":"Every Frame",
				"description":"useful if you want to catch when UnityAds will become ready"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Is Showing",
		"category":"UnityAds",
		"image":"./images/UnityAdsIsShowing.png",
		"description":"Get the current showing status of UnityAds.",
		"params": [
			{
				"name":"Is Showing",
				"description":"The current ready of UnityAds."
			},
			{
				"name":"Is Showing Event",
				"description":"Event sent if and when showing"
			},
			{
				"name":"Is Not Showing Event",
				"description":"Event sent if and when not showing"
			},
			{
				"name":"Every Frame",
				"description":"useful if you want to catch state changes"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Is Supported",
		"category":"UnityAds",
		"image":"./images/UnityAdsIsSupported.png",
		"description":"Get the supported status of UnityAds for the current platform.",
		"params": [
			{
				"name":"Is Supported",
				"description":"The suppported statux of UnityAds."
			},
			{
				"name":"Is Supported Event",
				"description":"Event sent if and when supported"
			},
			{
				"name":"Is Not Suppored Event",
				"description":"Event sent if and when not supported"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Set Campaign Data URL",
		"category":"UnityAds",
		"image":"./images/UnityAdsSetCampaignDataURL.png",
		"description":"Get the current status of UnityAds.",
		"params": [
			{
				"name":"Url",
				"description":"The Campaign data Url"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Set Debug Level",
		"category":"UnityAds",
		"image":"./images/UnityAdsSetDebugLevel.png",
		"description":"Sets the debug level of UnityAds.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Set Debug Mode",
		"category":"UnityAds",
		"image":"./images/UnityAdsSetDebugMode.png",
		"description":"Sets the debug mode of UnityAds.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unity Ads Show Ad",
		"category":"UnityAds",
		"image":"./images/UnityAdsShowAd.png",
		"description":"Show a UnityAds Advert. Can get feedback on result to reward user for example if ad was watched.",
		"params": [
			{
				"name":"Zone Id",
				"description":"ZoneId can be defined in the ads editor setup. LEave to none for default behavior"
			},
			{
				"name":"Gamer Sid",
				"description":"Using this property, you can pass an user identifier for server-to-server item redeem callbacks."
			},
			{
				"name":"Is Ready",
				"description":"The current status of UnityAds."
			},
			{
				"name":"Is Not Ready Event",
				"description":"If set, you'll get this event fired if not ready. Else, the action will wait when ready and show the ad"
			},
			{
				"name":"Success Event",
				"description":"Event Sent if ad was properly watched"
			},
			{
				"name":"Skipped Event",
				"description":"Event Sent if ad was skipped by the user"
			},
			{
				"name":"Failed Event",
				"description":"Event Sent if ad failed showing to the user"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Components",
		"category":"UnityObject",
		"image":"./images/ActivateComponents.png",
		"description":"Enable/Disable multiple Components at once.",
		"params": [
			{
				"name":"Components",
				"description":"The current component to enable/disable."
			},
			{
				"name":"Enable",
				"description":"Wheter to enable/disable the current component."
			},
			{
				"name":"Apply To All",
				"description":"If not 'None', sets all 'Enable' bools to true or false."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the game objects when exiting this state. Useful if you want an object to be active only while this state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Component Is Active",
		"category":"UnityObject",
		"image":"./images/ComponentIsActive.png",
		"description":"Check if  a Component is active. WARNING! COLLIDERS DO NOT WORK WITH THIS ACTION and Some Components Might not work!",
		"params": [
			{
				"name":"Component",
				"description":"Place Component Object here n/WARNING COLLIDERS DO NOT WORK!!"
			},
			{
				"name":"Is Active",
				"description":"Is componenet active n/WARNING COLLIDERS DO NOT WORK!!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Component Owner",
		"category":"UnityObject",
		"image":"./images/GetComponentOwner.png",
		"description":"Gets the owner gameobject of a component",
		"params": [
			{
				"name":"Component To Use",
				"description":"The Object referencing your component"
			},
			{
				"name":"Store Game Object",
				"description":"The gameobject of that component"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Component In Children",
		"category":"UnityObject",
		"image":"./images/GetComponentInChildren.png",
		"description":"Gets a Component attached to a GameObject or its children and stores it in an Object variable. NOTE: Set the Object variable's Object Type to get a component of that type. E.g., set Object Type to UnityEngine.AudioListener to get the AudioListener component on the camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the component."
			},
			{
				"name":"Store Component",
				"description":"Store the component in an Object variable.\nNOTE: Set theObject variable's Object Type to get a component of that type. E.g., set Object Type to UnityEngine.AudioListener to get the AudioListener component on the camera."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Object Id",
		"category":"UnityObject",
		"image":"./images/GetObjectId.png",
		"description":"Get Object ID. The instance id of an object is always guaranteed to be unique.",
		"params": [
			{
				"name":"Object Value",
				"description":"The object that needs to identified"
			},
			{
				"name":"Object Variable",
				"description":"The object unique ID"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Object Name",
		"category":"GameObject",
		"image":"./images/GetObjectName.png",
		"description":"Gets the name of an Object and stores it in a String Variable.",
		"params": [
			{
				"name":"Specify Object",
				"description":"The Object to get the name of."
			},
			{
				"name":"Store Name",
				"description":"The Name of the specified Object."
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Object Changed",
		"category":"Logic",
		"image":"./images/ObjectChanged.png",
		"description":"Tests if the value of a Object variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Object Variable",
				"description":"The Object variable to watch for a change."
			},
			{
				"name":"Changed Event",
				"description":"Event to send if the variable changes."
			},
			{
				"name":"Store Result",
				"description":"Set to True if the variable changes."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Object Value Advance",
		"category":"UnityObject",
		"image":"./images/SetObjectValueAdvance.png",
		"description":"Sets the value from a script/behaviour/component/etc as an Object Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Object Name",
				"description":"The name of the script/behaviour/component/etc to set as an object. Note: No space in script name."
			},
			{
				"name":"Object Variable",
				"description":"TODO"
			},
			{
				"name":"Debug Type",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Vector2",
		"category":"Vector2",
		"image":"./images/RandomVector2.png",
		"description":"Creates a random Vector2. The unitCircleRadius represents the magnitude of the randomized vector. Result can be set fo be on the circle perimeter or inside the circle.",
		"params": [
			{
				"name":"Seed",
				"description":"Seed for the random number generator. Leave to none for true randomness. Only set to a number if you want predictability and repeatability"
			},
			{
				"name":"Unit Circle Radius",
				"description":"Radius of imaginary circle"
			},
			{
				"name":"Option",
				"description":"Define where the randomize occurs"
			},
			{
				"name":"Store Result",
				"description":"The randomized vector 2"
			},
			{
				"name":"Every Frame",
				"description":"Update every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Vector2 Value",
		"category":"Vector2",
		"image":"./images/SetMultiVector2Value.png",
		"description":"Sets the value of many Vector2 Variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Lerp Delta",
		"category":"Vector2",
		"image":"./images/Vector2LerpDelta.png",
		"description":"Linearly interpolates between 2 vectors. Allows selection of update type and lerp against deltaTime for the amount, allowing framerate indepedant animations.",
		"params": [
			{
				"name":"From Vector",
				"description":"First Vector."
			},
			{
				"name":"To Vector",
				"description":"Second Vector."
			},
			{
				"name":"Amount",
				"description":"Interpolate between From Vector and ToVector by this amount. Value is clamped to 0-1 range. 0 = From Vector; 1 = To Vector; 0.5 = half way between."
			},
			{
				"name":"Lerp Against Delta Time",
				"description":"Amount is multiplied by the deltatime"
			},
			{
				"name":"Store Result",
				"description":"Store the result in this vector variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Operator Advanced",
		"category":"Vector2",
		"image":"./images/Vector2OperatorAdvanced.png",
		"description":"Performs most possible operations on 2 Vector2: Dot product, Distance, Angle, Add, Subtract, Multiply, Divide, Min, Max. Advanced version lets you choose the Update type (when to perform the action).",
		"params": [
			{
				"name":"Vector 1",
				"description":"The first vector"
			},
			{
				"name":"Vector 2",
				"description":"The second vector"
			},
			{
				"name":"Operation",
				"description":"The operation"
			},
			{
				"name":"Store Vector 2 Result",
				"description":"The Vector2 result when it applies."
			},
			{
				"name":"Store Float Result",
				"description":"The float result when it applies"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Smooth Damp",
		"category":"Vector2",
		"image":"./images/Vector2SmoothDamp.png",
		"description":"Gradually changes a vector3 towards a desired goal over time. The value is smoothed by some spring-damper like function, which will never overshoot. The function can be used to smooth any kind of value, positions, colors, scalars.",
		"params": [
			{
				"name":"Current",
				"description":"Start/Current vector"
			},
			{
				"name":"Target",
				"description":"Target vector"
			},
			{
				"name":"Current Velocity",
				"description":"The current velocity, this value is modified by the function every time you call it."
			},
			{
				"name":"Smooth Time",
				"description":"Approximately the time it will take to reach the target. A smaller value will reach the target faster."
			},
			{
				"name":"Max Speed",
				"description":"Optionally allows you to clamp the maximum speed."
			},
			{
				"name":"Done",
				"description":"Event sent when current value is almost equal to the target value"
			},
			{
				"name":"Is Done",
				"description":"true when current value is almost equal to the target value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 To Vector2",
		"category":"Vector2",
		"image":"./images/Vector3ToVector2.png",
		"description":"Store a Vector3 XY component into a Vector2 XY component. Drops the Vector3 z component, you can optionally save it to a float.",
		"params": [
			{
				"name":"Vector 3",
				"description":"The vector3"
			},
			{
				"name":"Vector 2",
				"description":"The vector2"
			},
			{
				"name":"Z Value",
				"description":"Optional z value stored as float"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Front Back Side To Side",
		"category":"Vector3",
		"image":"./images/FrontBackSideToSide.png",
		"description":"Gets a position relative to a target object or position.",
		"params": [
			{
				"name":"Target",
				"description":"TODO"
			},
			{
				"name":"Target V3",
				"description":"TODO"
			},
			{
				"name":"The Location",
				"description":"TODO"
			},
			{
				"name":"Random",
				"description":"TODO"
			},
			{
				"name":"Distance Multiplier",
				"description":"TODO"
			},
			{
				"name":"Location",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Vector3 Length",
		"category":"Vector3",
		"image":"./images/GetVector3Length.png",
		"description":"Get Vector3 Length.",
		"params": [
			{
				"name":"Vector 3",
				"description":"TODO"
			},
			{
				"name":"Store Length",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Knock Back Position Finder",
		"category":"Vector3",
		"image":"./images/KnockBackPositionFinder.png",
		"description":"Gets the position to knock an object back to on impact. Input a hitPosition and hitNormal from a cast on the projectile that hits the object. The Y axis is ignored. You can easily add it back.",
		"params": [
			{
				"name":"Hit Point",
				"description":"TODO"
			},
			{
				"name":"Hit Normal",
				"description":"TODO"
			},
			{
				"name":"Knock Back Distance",
				"description":"TODO"
			},
			{
				"name":"Knock Back Position",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Position In Camera Center",
		"category":"Vector3",
		"image":"./images/PositionInCameraCenter.png",
		"description":"Get Vector 3 of center of camera",
		"params": [
			{
				"name":"Use Main Camera",
				"description":"Select main camera"
			},
			{
				"name":"Other Camera",
				"description":"Or use another camera than the Main Camera"
			},
			{
				"name":"Position",
				"description":"TODO"
			},
			{
				"name":"Z Position",
				"description":"Setup Z position of object"
			},
			{
				"name":"Use Near Clip Plane",
				"description":"TODO"
			},
			{
				"name":"Use Far Clip Plane",
				"description":"TODO"
			},
			{
				"name":"Update Select",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Vector3",
		"category":"Vector3",
		"image":"./images/RandomVector3.png",
		"description":"Creates a random Vector3. The unitSphereRadius represents the magnitude of the randomized vector. Result can be set fo be on the Sphere Surface or inside the sphere.",
		"params": [
			{
				"name":"Seed",
				"description":"Seed for the random number generator. Leave to none for true randomness. Only set to a number if you want predictability and repeatability"
			},
			{
				"name":"Unit Sphere Radius",
				"description":"Radius of imaginary sphere"
			},
			{
				"name":"Option",
				"description":"Define where the randomize occurs"
			},
			{
				"name":"Store Result",
				"description":"The randomized vector 3"
			},
			{
				"name":"Every Frame",
				"description":"Update every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Vector3 Inside Sphere",
		"category":"Vector3",
		"image":"./images/RandomVector3InsideSphere.png",
		"description":"Get Random Vector3 inside a sphere",
		"params": [
			{
				"name":"Sphere Center",
				"description":"Leave to none for position as 0,0,0."
			},
			{
				"name":"Sphere Radius",
				"description":"Leave to none for a radius of 1"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Vector3 On Sphere",
		"category":"Vector3",
		"image":"./images/RandomVector3OnSphere.png",
		"description":"Get Random Vector3 from a sphere",
		"params": [
			{
				"name":"Sphere Center",
				"description":"Leave to none for position as 0,0,0."
			},
			{
				"name":"Sphere Radius",
				"description":"Leave to none for a radius of 1, which results into a Unit Vector"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Multi Vector3 Value",
		"category":"Vector3",
		"image":"./images/SetMultiVector3Value.png",
		"description":"Sets the value of many Vector3 Variable.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"TODO"
			},
			{
				"name":"Values",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Vector3 Direction",
		"category":"Vector3",
		"image":"./images/SetVector3Direction.png",
		"description":"Sets the value of a Vector3 Variable using direction presets.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The vector3 to store direction"
			},
			{
				"name":"Direction",
				"description":"The direction preset"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Add Advanced",
		"category":"Vector3",
		"image":"./images/Vector3AddAdvanced.png",
		"description":"Adds a value to Vector3 Variable.\n Advanced features allows selection of update type.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"TODO"
			},
			{
				"name":"Add Vector",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Update Type",
				"description":"TODO"
			},
			{
				"name":"Per Second",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Average",
		"category":"Vector3",
		"image":"./images/Vector3Average.png",
		"description":"Gets the average of all listed Vector3 variables.",
		"params": [
			{
				"name":"Vector Array",
				"description":"TODO"
			},
			{
				"name":"Store Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Clamp Magnitude Advanced",
		"category":"Vector3",
		"image":"./images/Vector3ClampMagnitudeAdvanced.png",
		"description":"Clamps the Magnitude of Vector3 Variable.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"TODO"
			},
			{
				"name":"Max Length",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Equal Check Action",
		"category":"Vector3",
		"image":"./images/Vector3EqualCheckAction.png",
		"description":"Sends an Event if two Vector3 are equal (in wanted magnitude)",
		"params": [
			{
				"name":"First",
				"description":"First Vector3 to test."
			},
			{
				"name":"Second",
				"description":"Second Vector3 to test."
			},
			{
				"name":"Magnitude For Equality",
				"description":"Wanted magnitude for check."
			},
			{
				"name":"Equals Event",
				"description":"Event that will be sent if they are equal."
			},
			{
				"name":"Not Equals Event",
				"description":"Event that will be sent if they are NOT equal."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Lerp Advanced",
		"category":"Vector3",
		"image":"./images/Vector3LerpAdvanced.png",
		"description":"Linearly interpolates between 2 vectors.\n Advanced features allows selection of update type and lerp against deltaTime for the amount, allowing framerate indepedant animations.",
		"params": [
			{
				"name":"From Vector",
				"description":"First Vector."
			},
			{
				"name":"To Vector",
				"description":"Second Vector."
			},
			{
				"name":"Amount",
				"description":"Interpolate between From Vector and ToVector by this amount. Value is clamped to 0-1 range. 0 = From Vector; 1 = To Vector; 0.5 = half way between."
			},
			{
				"name":"Lerp Against Delta Time",
				"description":"Amount is multiplied by the deltatime"
			},
			{
				"name":"Store Result",
				"description":"Store the result in this vector variable."
			},
			{
				"name":"Update Type",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Operator Advanced",
		"category":"Vector3",
		"image":"./images/Vector3OperatorAdvanced.png",
		"description":"Performs most possible operations on 2 Vector3: Dot product, Cross product, Distance, Angle, Project, Reflect, Add, Subtract, Multiply, Divide, Min, Max, SqrMagnitude.\n Advanced features allows selection of update type.",
		"params": [
			{
				"name":"Vector 1",
				"description":"TODO"
			},
			{
				"name":"Vector 2",
				"description":"TODO"
			},
			{
				"name":"Operation",
				"description":"TODO"
			},
			{
				"name":"Store Vector 3 Result",
				"description":"TODO"
			},
			{
				"name":"Store Float Result",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Update Type",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Project On Plane",
		"category":"Vector3",
		"image":"./images/Vector3ProjectOnPlane.png",
		"description":"Performs projection of a vector on a plane using its normal.",
		"params": [
			{
				"name":"Vector",
				"description":"The Vector to project"
			},
			{
				"name":"Plane Normal",
				"description":"the Plane normal"
			},
			{
				"name":"Store Vector 3 Result",
				"description":"the resulting projection"
			},
			{
				"name":"Every Frame",
				"description":"Runs every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Set Magnitude",
		"category":"Vector3",
		"image":"./images/Vector3SetMagnitude.png",
		"description":"Sets the magnitude ( length ) a Vector3. \n Advanced features allows selection of update type.",
		"params": [
			{
				"name":"Vector",
				"description":"The Vector3 variable."
			},
			{
				"name":"Magnitude",
				"description":"The new magnitude or length of that vector3"
			},
			{
				"name":"Failure Event",
				"description":"Event sent if the vector is 0,0,0 which makes it impossible to set magnitude because the direction information is lost"
			},
			{
				"name":"Update Type",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Smooth Damp",
		"category":"Vector3",
		"image":"./images/Vector3SmoothDamp.png",
		"description":"Gradually changes a vector3 towards a desired goal over time. The value is smoothed by some spring-damper like function, which will never overshoot. The function can be used to smooth any kind of value, positions, colors, scalars.",
		"params": [
			{
				"name":"Current",
				"description":"Start/Current vector"
			},
			{
				"name":"Target",
				"description":"Target vector"
			},
			{
				"name":"Current Velocity",
				"description":"The current velocity, this value is modified by the function every time you call it."
			},
			{
				"name":"Smooth Time",
				"description":"Approximately the time it will take to reach the target. A smaller value will reach the target faster."
			},
			{
				"name":"Max Speed",
				"description":"Optionally allows you to clamp the maximum speed."
			},
			{
				"name":"Done",
				"description":"Event sent when current value is almost equal to the target value"
			},
			{
				"name":"Is Done",
				"description":"true when current value is almost equal to the target value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Sub XYZ",
		"category":"Vector3",
		"image":"./images/Vector3SubXYZ.png",
		"description":"Subtracts XYZ values from Vector3 Variable.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"TODO"
			},
			{
				"name":"Sub X",
				"description":"TODO"
			},
			{
				"name":"Sub Y",
				"description":"TODO"
			},
			{
				"name":"Sub Z",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			},
			{
				"name":"Per Second",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"WWW Escape Url",
		"category":"String",
		"image":"./images/WWWEscapeUrl.png",
		"description":"Escape a Url String to be used. don't escape the whole url, only the portion for the getter values.",
		"params": [
			{
				"name":"String Source",
				"description":"TODO"
			},
			{
				"name":"Escaped String",
				"description":"TODO"
			},
			{
				"name":"Every Frame",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"WWW Object Relative",
		"category":"Web Player",
		"image":"./images/WWWObjectRelative.png",
		"description":"Gets data from a url and store it in variables. See Unity WWW docs for more details.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download data from."
			},
			{
				"name":"Path Is Relative",
				"description":"If path is relative to Application datapath folder."
			},
			{
				"name":"Store Text",
				"description":"Gets text from the url."
			},
			{
				"name":"Store Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Store Audio",
				"description":"Gets Audio from the url."
			},
			{
				"name":"Store Movie Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"WWWPOST",
		"category":"Web",
		"image":"./images/WWWPOST.png",
		"description":"Gets data from a url and store it in variables, Accept Post variables. See Unity WWW docs for more details.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download data from."
			},
			{
				"name":"Post Keys",
				"description":"TODO"
			},
			{
				"name":"Post Values",
				"description":"TODO"
			},
			{
				"name":"Store Text",
				"description":"Gets text from the url."
			},
			{
				"name":"Store Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Store Movie Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Store Audio",
				"description":"Gets a audio from the url."
			},
			{
				"name":"Audio 3d",
				"description":"Audio setting: Is it 3d"
			},
			{
				"name":"Audio Stream",
				"description":"Audio setting: Is it a stream"
			},
			{
				"name":"Audio Type",
				"description":"Audio setting: type"
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"WWW Post Headers",
		"category":"Web",
		"image":"./images/WWWPostHeaders.png",
		"description":"Gets data from a url and store it in variables, Accept Post variables and headers setup. See Unity WWW docs for more details.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download data from."
			},
			{
				"name":"Header Keys",
				"description":"TODO"
			},
			{
				"name":"Header Values",
				"description":"TODO"
			},
			{
				"name":"Post Keys",
				"description":"TODO"
			},
			{
				"name":"Post Values",
				"description":"TODO"
			},
			{
				"name":"Store Text",
				"description":"Gets text from the url."
			},
			{
				"name":"Store Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Store Movie Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Store Audio",
				"description":"Gets a audio from the url."
			},
			{
				"name":"Audio 3d",
				"description":"Audio setting: Is it 3d"
			},
			{
				"name":"Audio Stream",
				"description":"Audio setting: Is it a stream"
			},
			{
				"name":"Audio Type",
				"description":"Audio setting: type"
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"WWWPOST Mobile",
		"category":"Web",
		"image":"./images/WWWPOSTMobile.png",
		"description":"Gets data from a url and store it in variables, Accept Post variables. See Unity WWW docs for more details.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download data from."
			},
			{
				"name":"Post Keys",
				"description":"TODO"
			},
			{
				"name":"Post Values",
				"description":"TODO"
			},
			{
				"name":"Store Text",
				"description":"Gets text from the url."
			},
			{
				"name":"Store Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Store Audio",
				"description":"Gets a audio from the url."
			},
			{
				"name":"Audio 3d",
				"description":"Audio setting: Is it 3d"
			},
			{
				"name":"Audio Stream",
				"description":"Audio setting: Is it a stream"
			},
			{
				"name":"Audio Type",
				"description":"Audio setting: type"
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Check For Webcam",
		"category":"WebCam",
		"image":"./images/CheckForWebcam.png",
		"description":"Checks system for a webcam.",
		"params": [
			{
				"name":"Webcam Found",
				"description":"Event to send if a webcam was found."
			},
			{
				"name":"Webcam Not Found",
				"description":"Event to send if a webcam was not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Webcam Name",
		"category":"WebCam",
		"image":"./images/GetWebcamName.png",
		"description":"Find webcam and store name as string",
		"params": [
			{
				"name":"Store Webcam Name",
				"description":"TODO"
			},
			{
				"name":"Store Webcam Count",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Webcam Material",
		"category":"WebCam",
		"image":"./images/SetWebcamMaterial.png",
		"description":"Stream a webcam video to selected material.",
		"params": [
			{
				"name":"Webcam Name",
				"description":"TODO"
			},
			{
				"name":"Webcam Material",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Webcam Controller",
		"category":"WebCam",
		"image":"./images/WebcamController.png",
		"description":"Controls for webcam",
		"params": [
			{
				"name":"Play",
				"description":"TODO"
			},
			{
				"name":"Pause",
				"description":"TODO"
			},
			{
				"name":"Stop",
				"description":"TODO"
			},
			{
				"name":"Webcam Material",
				"description":"TODO"
			},
			{
				"name":"Use Custom",
				"description":"TODO"
			},
			{
				"name":"Web Texture Height",
				"description":"TODO"
			},
			{
				"name":"Web Texture Width",
				"description":"TODO"
			},
			{
				"name":"Set Fps",
				"description":"TODO"
			},
			{
				"name":"Device",
				"description":"TODO"
			},
			{
				"name":"Webcam Name",
				"description":"TODO"
			},
			{
				"name":"Auto Adjust Rotation",
				"description":"autoAdjust rotation for UI raw image only"
			},
			{
				"name":"Ui Raw Image",
				"description":"GameObject with UI raw image"
			},
			{
				"name":"Use Aspect Ratio",
				"description":"TODO"
			},
			{
				"name":"Safe Mode",
				"description":"TODO"
			},
			{
				"name":"Filter Modeselect",
				"description":"TODO"
			},
			{
				"name":"Take Picture",
				"description":"TODO"
			},
			{
				"name":"Webcam Texture",
				"description":"TODO"
			},
			{
				"name":"Use Crop",
				"description":"TODO"
			},
			{
				"name":"Crop Size",
				"description":"TODO"
			},
			{
				"name":"Offset X",
				"description":"TODO"
			},
			{
				"name":"Offset Y",
				"description":"TODO"
			},
			{
				"name":"Texture Format",
				"description":"TODO"
			},
			{
				"name":"Is Playing",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Webcam Count",
		"category":"WebCam",
		"image":"./images/WebcamCount.png",
		"description":"Count the amount of connected camera",
		"params": [
			{
				"name":"Count",
				"description":"Name of front facing camera"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Webcam Is Front Facing",
		"category":"WebCam",
		"image":"./images/WebcamIsFrontFacing.png",
		"description":"Checks if camera faces the same direction as screen.",
		"params": [
			{
				"name":"Webcam Name",
				"description":"Name of front facing camera"
			},
			{
				"name":"Webcam Is Front Facing",
				"description":"Event to send if a webcam is front facing was found."
			},
			{
				"name":"Is Front Facing",
				"description":"True if front facing webcam was found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Web Download Request",
		"category":"WWW",
		"image":"./images/WebDownloadRequest.png",
		"description":"Gets data from a url and store it as text or texture or in a file.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download data from."
			},
			{
				"name":"Store Text",
				"description":"Gets text from the url."
			},
			{
				"name":"Store Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Save In File",
				"description":"Saves the content into a file as is"
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Web Request",
		"category":"WWW",
		"image":"./images/WebRequest.png",
		"description":"Gets data from a url and store it as text or texture or in a file.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download data from."
			},
			{
				"name":"Request",
				"description":"The type of request to make"
			},
			{
				"name":"Redirect Limit",
				"description":"The redirect limit for this request, leave to none for default"
			},
			{
				"name":"Header Keys",
				"description":"The headers data"
			},
			{
				"name":"Header Values",
				"description":"TODO"
			},
			{
				"name":"Post Keys",
				"description":"The post data, only use if request is set to POST or PUT"
			},
			{
				"name":"Post Values",
				"description":"TODO"
			},
			{
				"name":"Response Code",
				"description":"The response status code"
			},
			{
				"name":"Store Text",
				"description":"Gets text from the url."
			},
			{
				"name":"Store Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Stored Texture As Readable",
				"description":"TODO"
			},
			{
				"name":"Save In File",
				"description":"Saves the content into a file as is"
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Cancel",
				"description":"If this flag is set to true it is canceled."
			},
			{
				"name":"Cancel On Exit",
				"description":"TODO"
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"WWW Object 2",
		"category":"WWW",
		"image":"./images/WWWObject2.png",
		"description":"Gets data from a url and store it in variables. See Unity WWW docs for more details. Works On IOS",
		"params": [
			{
				"name":"Url",
				"description":"Url to download data from."
			},
			{
				"name":"Store Text",
				"description":"Gets text from the url."
			},
			{
				"name":"Store Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Save In File",
				"description":"Save the content in a file"
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"XR Input Tracking Recenter",
		"category":"XR",
		"image":"./images/XRInputTrackingRecenter.png",
		"description":"Center tracking on the current pose.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"XR Settings Get Eye Texture Resolution Scale",
		"category":"XR",
		"image":"./images/XRSettingsGetEyeTextureResolutionScale.png",
		"description":"Controls the actual size of eye textures as a multiplier of the device's default resolution.A value of 1.0 will use the default eye texture resolution specified by the XR device. Values less than 1.0 will use lower resolution eye textures, which may improve performance at the expense of a less sharp image. Values greater than 1.0 will use higher resolution eye textures, resulting in a potentially sharper image at a cost to performance and increased memory usage.",
		"params": [
			{
				"name":"Eye Texture Resolution Scale",
				"description":"The actual size of eye textures as a multiplier of the device's default resolution"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"XR Settings Getloaded Device Name",
		"category":"XR",
		"image":"./images/XRSettingsGetloadedDeviceName.png",
		"description":"Get Type of VR device that is currently in use.",
		"params": [
			{
				"name":"Device Name",
				"description":"Type of VR device currently in use"
			},
			{
				"name":"No Device",
				"description":"No VR Device Event"
			},
			{
				"name":"Is Device Active",
				"description":"Is the device is Active"
			},
			{
				"name":"Is Not Active Event",
				"description":"Event sent if not active"
			},
			{
				"name":"Stereo Rendering Mode",
				"description":"Stereo rendering mode"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"XR Settings Load Device By Name",
		"category":"XR",
		"image":"./images/XRSettingsLoadDeviceByName.png",
		"description":"Set Type of VR to the desired VR device and it will be loaded. Note that if a VR device was already loaded, a restart may be forced.",
		"params": [
			{
				"name":"Device Type",
				"description":"Type of VR device to load"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"VR Settings Set Render Scale",
		"category":"VR",
		"image":"./images/VRSettingsSetRenderScale.png",
		"description":"Alter the render scale. This controls the texel : pixel ratio before lens correction, meaning that we trade performance for sharpness. Higher numbers = better quality, but trades performance",
		"params": [
			{
				"name":"Render Scale",
				"description":"The RenderScale of the VR. The render scale. Higher numbers = better quality, but trades performance"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"VR Settings Show Device View",
		"category":"VR",
		"image":"./images/VRSettingsShowDeviceView.png",
		"description":"Mirror what is shown on the device to the main display, if possible.",
		"params": [
			{
				"name":"Show Device View",
				"description":"If True, will show on the device to the main display, if possible."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event Properties",
		"category":"StateMachine",
		"image":"./images/GetEventProperties.png",
		"description":"Gets properties on the last event that caused a state change. Use Set Event Properties to define these values when sending events",
		"params": [
			{
				"name":"Keys",
				"description":"TODO"
			},
			{
				"name":"Datas",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Event Properties",
		"category":"StateMachine",
		"image":"./images/SetEventProperties.png",
		"description":"Sets Event Data before sending an event. Get the Event Data, Get Event Properties action.",
		"params": [
			{
				"name":"Keys",
				"description":"TODO"
			},
			{
				"name":"Datas",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animate Color",
		"category":"AnimateVariables",
		"image":"./images/AnimateColor.png",
		"description":"Animates the value of a Color Variable using an Animation Curve.",
		"params": [
			{
				"name":"Color Variable",
				"description":"The Color Variable to animate."
			},
			{
				"name":"Curve R",
				"description":"The curve used to animate the red value."
			},
			{
				"name":"Calculation R",
				"description":"Calculation lets you set a type of curve deformation that will be applied to the red channel."
			},
			{
				"name":"Curve G",
				"description":"The curve used to animate the green value."
			},
			{
				"name":"Calculation G",
				"description":"Calculation lets you set a type of curve deformation that will be applied to the green channel."
			},
			{
				"name":"Curve B",
				"description":"The curve used to animate the blue value."
			},
			{
				"name":"Calculation B",
				"description":"Calculation lets you set a type of curve deformation that will be applied to the blue channel."
			},
			{
				"name":"Curve A",
				"description":"The curve used to animate the alpha value."
			},
			{
				"name":"Calculation A",
				"description":"Calculation lets you set a type of curve deformation that will be applied to the alpha channel."
			},
			{
				"name":"Time",
				"description":"Define animation time, scaling the curve to fit."
			},
			{
				"name":"Speed",
				"description":"If you define speed, your animation will speed up or slow down."
			},
			{
				"name":"Delay",
				"description":"Delayed animation start."
			},
			{
				"name":"Ignore Curve Offset",
				"description":"Animation curve start from any time. If IgnoreCurveOffset is true the animation starts right after the state become entered."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animate Float",
		"category":"AnimateVariables",
		"image":"./images/AnimateFloat.png",
		"description":"Animates the value of a Float Variable using an Animation Curve.",
		"params": [
			{
				"name":"Anim Curve",
				"description":"The animation curve to use."
			},
			{
				"name":"Float Variable",
				"description":"The float variable to set."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animate Float V2",
		"category":"AnimateVariables",
		"image":"./images/AnimateFloatV2.png",
		"description":"Animates the value of a Float Variable using an Animation Curve.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to animate."
			},
			{
				"name":"Anim Curve",
				"description":"The animation curve to use."
			},
			{
				"name":"Calculation",
				"description":"Calculation lets you set a type of curve deformation that will be applied to floatVariable"
			},
			{
				"name":"Time",
				"description":"Define animation time, scaling the curve to fit."
			},
			{
				"name":"Speed",
				"description":"If you define speed, your animation will speed up or slow down."
			},
			{
				"name":"Delay",
				"description":"Delayed animation start."
			},
			{
				"name":"Ignore Curve Offset",
				"description":"Animation curve start from any time. If IgnoreCurveOffset is true the animation starts right after the state become entered."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animate Rect",
		"category":"AnimateVariables",
		"image":"./images/AnimateRect.png",
		"description":"Animates the value of a Rect Variable using an Animation Curve.",
		"params": [
			{
				"name":"Rect Variable",
				"description":"The Rect Variable to animate."
			},
			{
				"name":"Curve X",
				"description":"Curve to use for the X value."
			},
			{
				"name":"Calculation X",
				"description":"Calculation lets you set a type of curve deformation that will be applied to rectVariable.x."
			},
			{
				"name":"Curve Y",
				"description":"Curve to use for the Y value."
			},
			{
				"name":"Calculation Y",
				"description":"Calculation lets you set a type of curve deformation that will be applied to rectVariable.y."
			},
			{
				"name":"Curve W",
				"description":"Curve to use for the Width."
			},
			{
				"name":"Calculation W",
				"description":"Calculation lets you set a type of curve deformation that will be applied to rectVariable.width."
			},
			{
				"name":"Curve H",
				"description":"Curve to use for the Height."
			},
			{
				"name":"Calculation H",
				"description":"Calculation lets you set a type of curve deformation that will be applied to rectVariable.height."
			},
			{
				"name":"Time",
				"description":"Define animation time, scaling the curve to fit."
			},
			{
				"name":"Speed",
				"description":"If you define speed, your animation will speed up or slow down."
			},
			{
				"name":"Delay",
				"description":"Delayed animation start."
			},
			{
				"name":"Ignore Curve Offset",
				"description":"Animation curve start from any time. If IgnoreCurveOffset is true the animation starts right after the state become entered."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animate Vector3",
		"category":"AnimateVariables",
		"image":"./images/AnimateVector3.png",
		"description":"Animates the value of a Vector3 Variable using an Animation Curve.",
		"params": [
			{
				"name":"Vector Variable",
				"description":"The Vector3 Variable to animate."
			},
			{
				"name":"Curve X",
				"description":"Curve to use for the X value."
			},
			{
				"name":"Calculation X",
				"description":"Calculation lets you set a type of curve deformation that will be applied to vectorVariable.x."
			},
			{
				"name":"Curve Y",
				"description":"Curve to use for the Y value."
			},
			{
				"name":"Calculation Y",
				"description":"Calculation lets you set a type of curve deformation that will be applied to vectorVariable.y."
			},
			{
				"name":"Curve Z",
				"description":"Curve to use for the Z value."
			},
			{
				"name":"Calculation Z",
				"description":"Calculation lets you set a type of curve deformation that will be applied to vectorVariable.z."
			},
			{
				"name":"Time",
				"description":"Define animation time, scaling the curve to fit."
			},
			{
				"name":"Speed",
				"description":"If you define speed, your animation will speed up or slow down."
			},
			{
				"name":"Delay",
				"description":"Delayed animation start."
			},
			{
				"name":"Ignore Curve Offset",
				"description":"Animation curve start from any time. If IgnoreCurveOffset is true the animation starts right after the state become entered."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Curve Color",
		"category":"AnimateVariables",
		"image":"./images/CurveColor.png",
		"description":"Animates the value of a Color Variable FROM-TO with assistance of Deformation Curves.",
		"params": [
			{
				"name":"Color Variable",
				"description":"The Color variable to animate."
			},
			{
				"name":"From Value",
				"description":"Animate from this color."
			},
			{
				"name":"To Value",
				"description":"Animate to this color."
			},
			{
				"name":"Curve R",
				"description":"The curve used to animate the red value."
			},
			{
				"name":"Calculation R",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.Red and toValue.Rec."
			},
			{
				"name":"Curve G",
				"description":"The curve used to animate the green value."
			},
			{
				"name":"Calculation G",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.Green and toValue.Green."
			},
			{
				"name":"Curve B",
				"description":"The curve used to animate the blue value."
			},
			{
				"name":"Calculation B",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.Blue and toValue.Blue."
			},
			{
				"name":"Curve A",
				"description":"The curve used to animate the alpha value."
			},
			{
				"name":"Calculation A",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.Alpha and toValue.Alpha."
			},
			{
				"name":"Time",
				"description":"Define animation time, scaling the curve to fit."
			},
			{
				"name":"Speed",
				"description":"If you define speed, your animation will speed up or slow down."
			},
			{
				"name":"Delay",
				"description":"Delayed animation start."
			},
			{
				"name":"Ignore Curve Offset",
				"description":"Animation curve start from any time. If IgnoreCurveOffset is true the animation starts right after the state become entered."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Curve Float",
		"category":"AnimateVariables",
		"image":"./images/CurveFloat.png",
		"description":"Animates the value of a Float Variable FROM-TO with assistance of Deformation Curve.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to animate."
			},
			{
				"name":"From Value",
				"description":"Animate from this value."
			},
			{
				"name":"To Value",
				"description":"Animate to this value."
			},
			{
				"name":"Anim Curve",
				"description":"The curve to use when animating."
			},
			{
				"name":"Calculation",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue and toValue."
			},
			{
				"name":"Time",
				"description":"Define animation time, scaling the curve to fit."
			},
			{
				"name":"Speed",
				"description":"If you define speed, your animation will speed up or slow down."
			},
			{
				"name":"Delay",
				"description":"Delayed animation start."
			},
			{
				"name":"Ignore Curve Offset",
				"description":"Animation curve start from any time. If IgnoreCurveOffset is true the animation starts right after the state become entered."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Curve Rect",
		"category":"AnimateVariables",
		"image":"./images/CurveRect.png",
		"description":"Animates the value of a Rect Variable FROM-TO with assistance of Deformation Curves.",
		"params": [
			{
				"name":"Rect Variable",
				"description":"The Rect Variable to animate."
			},
			{
				"name":"From Value",
				"description":"The Rect to animate from."
			},
			{
				"name":"To Value",
				"description":"The Rect to animate to."
			},
			{
				"name":"Curve X",
				"description":"Curve that controls the X value."
			},
			{
				"name":"Calculation X",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.x and toValue.x."
			},
			{
				"name":"Curve Y",
				"description":"Curve that controls the Y value."
			},
			{
				"name":"Calculation Y",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.y and toValue.y."
			},
			{
				"name":"Curve W",
				"description":"Curve that controls the Width."
			},
			{
				"name":"Calculation W",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.width and toValue.width."
			},
			{
				"name":"Curve H",
				"description":"Curve that controls the Height."
			},
			{
				"name":"Calculation H",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.height and toValue.height."
			},
			{
				"name":"Time",
				"description":"Define animation time, scaling the curve to fit."
			},
			{
				"name":"Speed",
				"description":"If you define speed, your animation will speed up or slow down."
			},
			{
				"name":"Delay",
				"description":"Delayed animation start."
			},
			{
				"name":"Ignore Curve Offset",
				"description":"Animation curve start from any time. If IgnoreCurveOffset is true the animation starts right after the state become entered."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Curve Vector3",
		"category":"AnimateVariables",
		"image":"./images/CurveVector3.png",
		"description":"Animates the value of a Vector3 Variable FROM-TO with assistance of Deformation Curves.",
		"params": [
			{
				"name":"Vector Variable",
				"description":"The Vector3 variable to animate."
			},
			{
				"name":"From Value",
				"description":"Animate from this value."
			},
			{
				"name":"To Value",
				"description":"Animate to this value."
			},
			{
				"name":"Curve X",
				"description":"Curve that controls the X value."
			},
			{
				"name":"Calculation X",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.x and toValue.x."
			},
			{
				"name":"Curve Y",
				"description":"Curve that controls the Y value."
			},
			{
				"name":"Calculation Y",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.y and toValue.y."
			},
			{
				"name":"Curve Z",
				"description":"Curve that controls the Z value."
			},
			{
				"name":"Calculation Z",
				"description":"Calculation lets you set a type of curve deformation that will be applied to otherwise linear move between fromValue.z and toValue.z."
			},
			{
				"name":"Time",
				"description":"Define animation time, scaling the curve to fit."
			},
			{
				"name":"Speed",
				"description":"If you define speed, your animation will speed up or slow down."
			},
			{
				"name":"Delay",
				"description":"Delayed animation start."
			},
			{
				"name":"Ignore Curve Offset",
				"description":"Animation curve start from any time. If IgnoreCurveOffset is true the animation starts right after the state become entered."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Ease Color",
		"category":"AnimateVariables",
		"image":"./images/EaseColor.png",
		"description":"Easing Animation - Color",
		"params": [
			{
				"name":"From Value",
				"description":"The Color value to ease from."
			},
			{
				"name":"To Value",
				"description":"The Color value to ease to."
			},
			{
				"name":"Color Variable",
				"description":"Store the result in a Color Variable."
			},
			{
				"name":"Time",
				"description":"How long the ease should take in seconds"
			},
			{
				"name":"Speed",
				"description":"Optionally, use speed instead of time."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds before starting to ease."
			},
			{
				"name":"Ease Type",
				"description":"The easing function to use."
			},
			{
				"name":"Reverse",
				"description":"Reverse the ease."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Ease Float",
		"category":"AnimateVariables",
		"image":"./images/EaseFloat.png",
		"description":"Easing Animation - Float",
		"params": [
			{
				"name":"From Value",
				"description":"The float value to ease from."
			},
			{
				"name":"To Value",
				"description":"The float value to ease to."
			},
			{
				"name":"Float Variable",
				"description":"Store the result in a Float Variable."
			},
			{
				"name":"Time",
				"description":"How long the ease should take in seconds"
			},
			{
				"name":"Speed",
				"description":"Optionally, use speed instead of time."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds before starting to ease."
			},
			{
				"name":"Ease Type",
				"description":"The easing function to use."
			},
			{
				"name":"Reverse",
				"description":"Reverse the ease."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Ease Rect",
		"category":"AnimateVariables",
		"image":"./images/EaseRect.png",
		"description":"Easing Animation - Rect.",
		"params": [
			{
				"name":"From Value",
				"description":"Ease from this Rect value."
			},
			{
				"name":"To Value",
				"description":"Ease to this Rect value."
			},
			{
				"name":"Rect Variable",
				"description":"Store the current value in a Rect Variable."
			},
			{
				"name":"Time",
				"description":"How long the ease should take in seconds"
			},
			{
				"name":"Speed",
				"description":"Optionally, use speed instead of time."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds before starting to ease."
			},
			{
				"name":"Ease Type",
				"description":"The easing function to use."
			},
			{
				"name":"Reverse",
				"description":"Reverse the ease."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Ease Vector3",
		"category":"AnimateVariables",
		"image":"./images/EaseVector3.png",
		"description":"Easing Animation - Vector3",
		"params": [
			{
				"name":"From Value",
				"description":"The Vector3 value to ease from."
			},
			{
				"name":"To Value",
				"description":"The Vector3 value to ease to."
			},
			{
				"name":"Vector 3 Variable",
				"description":"Store the result in a Vector3 Variable."
			},
			{
				"name":"Time",
				"description":"How long the ease should take in seconds"
			},
			{
				"name":"Speed",
				"description":"Optionally, use speed instead of time."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds before starting to ease."
			},
			{
				"name":"Ease Type",
				"description":"The easing function to use."
			},
			{
				"name":"Reverse",
				"description":"Reverse the ease."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Animation Clip",
		"category":"Animation",
		"image":"./images/AddAnimationClip.png",
		"description":"Adds an Animation Clip to a Game Object. Optionally trim the clip.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to add the Animation Clip to."
			},
			{
				"name":"Animation Clip",
				"description":"The animation clip to add. NOTE: Make sure the clip is compatible with the object's hierarchy."
			},
			{
				"name":"Animation Name",
				"description":"Optionally give the animation a new name. Can be used by other Animation actions."
			},
			{
				"name":"First Frame",
				"description":"Optionally trim the animation by specifying a first and last frame."
			},
			{
				"name":"Last Frame",
				"description":"Set the last frame of the trimmed animation. 0 means no trimming."
			},
			{
				"name":"Add Loop Frame",
				"description":"Add a frame at the end of the trimmed clip that's the same as the first frame so it loops nicely."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Mixing Transform",
		"category":"Animation",
		"image":"./images/AddMixingTransform.png",
		"description":"Play an animation on a subset of the hierarchy. E.g., A waving animation on the upper body.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject playing the animation."
			},
			{
				"name":"Animation Name",
				"description":"The name of the animation to mix. NOTE: The animation should already be added to the Animation Component on the GameObject."
			},
			{
				"name":"Transform",
				"description":"The mixing transform. E.g., root/upper_body/left_shoulder"
			},
			{
				"name":"Recursive",
				"description":"If recursive is true all children of the mix transform will also be animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animation Settings",
		"category":"Animation",
		"image":"./images/AnimationSettings.png",
		"description":"Applies animation settings to the specified animation. Note: Settings are applied once, on entering the state, not continuously. Use {{Set Animation Speed}}, {{Set Animation Time}} etc. if you need to update those animation settings every frame.\\nSee <a href=\"https://docs.unity3d.com/Manual/AnimationScripting.html\" rel =\"nofollow\" target=\"_blank\">Unity Animation Docs</a> for detailed descriptions of Wrap Mode, Blend Mode, Speed and Layer settings.",
		"params": [
			{
				"name":"Game Object",
				"description":"A GameObject with an Animation Component."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation. Use the browse button to select from animations on the Game Object (if available)."
			},
			{
				"name":"Wrap Mode",
				"description":"Set how the animation wraps (Loop, PingPong etc.). NOTE: Because of the way WrapMode is defined by Unity you cannot select Once, but Clamp is the same as Once."
			},
			{
				"name":"Blend Mode",
				"description":"How the animation is blended with other animations on the Game Object."
			},
			{
				"name":"Speed",
				"description":"Speed up or slow down the animation. 1 is normal speed, 0.5 is half speed..."
			},
			{
				"name":"Layer",
				"description":"You can play animations on different layers to combine them into a final animation. See the Unity Animation docs for more details."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Blend Animation",
		"category":"Animation",
		"image":"./images/BlendAnimation.png",
		"description":"Blends an Animation towards a Target Weight over a specified Time.\nOptionally sends an Event when finished.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to animate."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation to blend."
			},
			{
				"name":"Target Weight",
				"description":"Target weight to blend to."
			},
			{
				"name":"Time",
				"description":"Time it should take to reach the target weight (seconds)."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the blend has finished."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Capture Pose As Animation Clip",
		"category":"Animation",
		"image":"./images/CapturePoseAsAnimationClip.png",
		"description":"Captures the current pose of a hierarchy as an animation clip.\n\nUseful to blend from an arbitrary pose (e.g. a rag-doll death) back to a known animation (e.g. idle).",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject root of the hierarchy to capture."
			},
			{
				"name":"Position",
				"description":"Capture position keys."
			},
			{
				"name":"Rotation",
				"description":"Capture rotation keys."
			},
			{
				"name":"Scale",
				"description":"Capture scale keys."
			},
			{
				"name":"Store Animation Clip",
				"description":"Store the result in an Object variable of type AnimationClip."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Animation",
		"category":"Animation",
		"image":"./images/EnableAnimation.png",
		"description":"Enables/Disables an Animation on a GameObject.\nAnimation time is paused while disabled. Animation must also have a non zero weight to play.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject playing the animation."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation to enable/disable."
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the initial enabled state when exiting the state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Animation",
		"category":"Animation",
		"image":"./images/PlayAnimation.png",
		"description":"Plays an Animation on a Game Object. You can add named animation clips to the object in the Unity editor, or with the Add Animation Clip action. NOTE: The game object must have an Animation component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to play the animation on. NOTE: Must have an Animation Component."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation to play. Use the browse button to find animations on the specified Game Object."
			},
			{
				"name":"Play Mode",
				"description":"Whether to stop all currently playing animations, or just the animations on the same layer as this animation."
			},
			{
				"name":"Blend Time",
				"description":"Time to cross-fade between animations (seconds)."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the animation is finished playing. NOTE: Not sent with Loop or PingPong wrap modes!"
			},
			{
				"name":"Loop Event",
				"description":"Event to send when the animation loops. If you want to send this event to another FSM use Set Event Target. NOTE: This event is only sent with Loop and PingPong wrap modes."
			},
			{
				"name":"Stop On Exit",
				"description":"Stop playing the animation when this state is exited."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Random Animation",
		"category":"Animation",
		"image":"./images/PlayRandomAnimation.png",
		"description":"Plays a Random Animation on a Game Object. You can set the relative weight of each animation to control how often they are selected.",
		"params": [
			{
				"name":"Game Object",
				"description":"Game Object to play the animation on."
			},
			{
				"name":"Animations",
				"description":"An array of animations to pick randomly from."
			},
			{
				"name":"Weights",
				"description":"The relative probability of each animation being picked. E.g. a weight of 2 is twice a likely to be picked as a weight of 1."
			},
			{
				"name":"Play Mode",
				"description":"How to treat previously playing animations."
			},
			{
				"name":"Blend Time",
				"description":"Time taken to blend to this animation."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the animation is finished playing. NOTE: Not sent with Loop or PingPong wrap modes!"
			},
			{
				"name":"Loop Event",
				"description":"Event to send when the animation loops. If you want to send this event to another FSM use Set Event Target. NOTE: This event is only sent with Loop and PingPong wrap modes."
			},
			{
				"name":"Stop On Exit",
				"description":"Stop playing the animation when this state is exited."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Remove Mixing Transform",
		"category":"Animation",
		"image":"./images/RemoveMixingTransform.png",
		"description":"Removes a mixing transform previously added with Add Mixing Transform. If transform has been added as recursive, then it will be removed as recursive. Once you remove all mixing transforms added to animation state all curves become animated again.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject playing the animation."
			},
			{
				"name":"Animation Name",
				"description":"The name of the animation."
			},
			{
				"name":"Transfrom",
				"description":"The mixing transform to remove. E.g., root/upper_body/left_shoulder"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rewind Animation",
		"category":"Animation",
		"image":"./images/RewindAnimation.png",
		"description":"Rewinds the named animation.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object playing the animation."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation to rewind."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animation Speed",
		"category":"Animation",
		"image":"./images/SetAnimationSpeed.png",
		"description":"Sets the Speed of an Animation. Check Every Frame to update the animation time continuously, e.g., if you're manipulating a variable that controls animation speed.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object playing the animation."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation."
			},
			{
				"name":"Speed",
				"description":"The desired animation speed. 1= normal, 0.5 = half speed, 2 = double speed."
			},
			{
				"name":"Every Frame",
				"description":"Update the speed every frame. Useful if you're using a variable to set Speed."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animation Time",
		"category":"Animation",
		"image":"./images/SetAnimationTime.png",
		"description":"Sets the current Time of an Animation. Useful for manually controlling playback of an animation. Check Every Frame to update the time continuously.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object playing the animation."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation."
			},
			{
				"name":"Time",
				"description":"The time to set the animation to."
			},
			{
				"name":"Normalized",
				"description":"Use normalized time: 0 = start ; 1 = end. Useful if you don't care about the length of the exact length of the animation."
			},
			{
				"name":"Every Frame",
				"description":"Set time every frame. Useful if you're using a variable as Time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animation Weight",
		"category":"Animation",
		"image":"./images/SetAnimationWeight.png",
		"description":"Sets the Blend Weight of an Animation. Check Every Frame to update the weight continuously, e.g., if you're manipulating a variable that controls the weight.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object playing the animation."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation."
			},
			{
				"name":"Weight",
				"description":"The weight to set the animation to."
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame. Useful if Weight is a variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Stop Animation",
		"category":"Animation",
		"image":"./images/StopAnimation.png",
		"description":"Stops all playing Animations on a Game Object. Optionally, specify a single Animation to Stop.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object playing the animation."
			},
			{
				"name":"Anim Name",
				"description":"The name of the animation to stop. Leave empty to stop all playing animations."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animator Cross Fade",
		"category":"Animator",
		"image":"./images/AnimatorCrossFade.png",
		"description":"Create a dynamic transition between the current state and the destination state. Both states have to be on the same layer. Note: You cannot change the current state on a synchronized layer, you need to change it on the referenced layer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"State Name",
				"description":"The name of the state that will be played."
			},
			{
				"name":"Transition Duration",
				"description":"The duration of the transition. Value is in source state normalized time."
			},
			{
				"name":"Layer",
				"description":"Layer index containing the destination state. Leave to none to ignore"
			},
			{
				"name":"Normalized Time",
				"description":"Start time of the current destination state. Value is in source state normalized time, should be between 0 and 1."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animator Interrupt Match Target",
		"category":"Animator",
		"image":"./images/AnimatorInterruptMatchTarget.png",
		"description":"Interrupts the automatic target matching. CompleteMatch will make the GameObject match the target completely at the next frame.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Complete Match",
				"description":"Will make the GameObject match the target completely at the next frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animator Match Target",
		"category":"Animator",
		"image":"./images/AnimatorMatchTarget.png",
		"description":"Automatically adjust the GameObject position and rotation so that the AvatarTarget reaches the Match Position when the current animation state is at the specified progress.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator component."
			},
			{
				"name":"Body Part",
				"description":"The body part that is used to match the target."
			},
			{
				"name":"Target",
				"description":"A GameObject target to match. Leave empty to use position instead."
			},
			{
				"name":"Target Position",
				"description":"A target position to match. If Target GameObject is set, this is used as an offset from the Target's position."
			},
			{
				"name":"Target Rotation",
				"description":"A rotation to match. If Target GameObject is set, this is used as an offset from the Target's rotation."
			},
			{
				"name":"Position Weight",
				"description":"The MatchTargetWeightMask Position XYZ weight"
			},
			{
				"name":"Rotation Weight",
				"description":"The MatchTargetWeightMask Rotation weight"
			},
			{
				"name":"Start Normalized Time",
				"description":"Start time within the animation clip (0 - beginning of clip, 1 - end of clip)"
			},
			{
				"name":"Target Normalized Time",
				"description":"End time within the animation clip (0 - beginning of clip, 1 - end of clip). Values greater than 1 trigger a match after a certain number of loops. Example: 2.3 means at 30% of 2nd loop."
			},
			{
				"name":"Every Frame",
				"description":"Should always be true"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animator Play",
		"category":"Animator",
		"image":"./images/AnimatorPlay.png",
		"description":"Plays a state. This could be used to synchronize your animation with audio or synchronize an Animator over the network.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"State Name",
				"description":"The name of the state that will be played."
			},
			{
				"name":"Layer",
				"description":"The layer where the state is."
			},
			{
				"name":"Normalized Time",
				"description":"The normalized time at which the state will play"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when using normalizedTime to manually control the animation."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animator Start Playback",
		"category":"Animator",
		"image":"./images/AnimatorStartPlayback.png",
		"description":"Sets the animator in playback mode.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animator Start Recording",
		"category":"Animator",
		"image":"./images/AnimatorStartRecording.png",
		"description":"Sets the animator in recording mode, and allocates a circular buffer of size frameCount. After this call, the recorder starts collecting up to frameCount frames in the buffer. Note it is not possible to start playback until a call to StopRecording is made",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Frame Count",
				"description":"The number of frames (updates) that will be recorded. If frameCount is 0, the recording will continue until the user calls StopRecording. The maximum value for frameCount is 10000."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animator Stop Playback",
		"category":"Animator",
		"image":"./images/AnimatorStopPlayback.png",
		"description":"Stops the animator playback mode. When playback stops, the avatar resumes getting control from game logic",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Animator Stop Recording",
		"category":"Animator",
		"image":"./images/AnimatorStopRecording.png",
		"description":"Stops the animator record mode. It will lock the recording buffer's contents in its current state. The data get saved for subsequent playback with StartPlayback.",
		"params": [
			{
				"name":"Game Object",
				"description":"The target. An Animator component and a PlayMakerAnimatorProxy component are required"
			},
			{
				"name":"Recorder Start Time",
				"description":"The recorder StartTime"
			},
			{
				"name":"Recorder Stop Time",
				"description":"The recorder StopTime"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Apply Root Motion",
		"category":"Animator",
		"image":"./images/GetAnimatorApplyRootMotion.png",
		"description":"Gets the value of ApplyRootMotion of an avatar. If true, root is controlled by animations",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Root Motion Applied",
				"description":"Is the rootMotionapplied. If true, root is controlled by animations"
			},
			{
				"name":"Root Motion Is Applied Event",
				"description":"Event send if the root motion is applied"
			},
			{
				"name":"Root Motion Is Not Applied Event",
				"description":"Event send if the root motion is not applied"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Body",
		"category":"Animator",
		"image":"./images/GetAnimatorBody.png",
		"description":"Gets the avatar body mass center position and rotation. Optionally accepts a GameObject to get the body transform. \nThe position and rotation are local to the GameObject",
		"params": [
			{
				"name":"Game Object",
				"description":"The target. An Animator component and a PlayMakerAnimatorProxy component are required."
			},
			{
				"name":"Body Position",
				"description":"The avatar body mass center"
			},
			{
				"name":"Body Rotation",
				"description":"The avatar body mass center"
			},
			{
				"name":"Body Game Object",
				"description":"If set, apply the body mass center position and rotation to this gameObject"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Bone Game Object",
		"category":"Animator",
		"image":"./images/GetAnimatorBoneGameObject.png",
		"description":"Gets the GameObject mapped to this human bone id",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Bone",
				"description":"The bone reference"
			},
			{
				"name":"Bone Game Object",
				"description":"The Bone's GameObject"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Bool",
		"category":"Animator",
		"image":"./images/GetAnimatorBool.png",
		"description":"Gets the value of a bool parameter",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Parameter",
				"description":"The animator parameter"
			},
			{
				"name":"Result",
				"description":"The bool value of the animator parameter"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Culling Mode",
		"category":"Animator",
		"image":"./images/GetAnimatorCullingMode.png",
		"description":"Returns the culling of this Animator component. Optionally sends events.\nIf true ('AlwaysAnimate'): always animate the entire character. Object is animated even when offscreen.\nIf False ('BasedOnRenderers') animation is disabled when renderers are not visible.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Always Animate",
				"description":"If true, always animate the entire character, else animation is disabled when renderers are not visible"
			},
			{
				"name":"Always Animate Event",
				"description":"Event send if culling mode is 'AlwaysAnimate'"
			},
			{
				"name":"Based On Renderers Event",
				"description":"Event send if culling mode is 'BasedOnRenders'"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Current State Info",
		"category":"Animator",
		"image":"./images/GetAnimatorCurrentStateInfo.png",
		"description":"Gets the current State information on a specified layer",
		"params": [
			{
				"name":"Game Object",
				"description":"The target."
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Name",
				"description":"The layer's name."
			},
			{
				"name":"Name Hash",
				"description":"The layer's name Hash. Obsolete in Unity 5, use fullPathHash or shortPathHash instead, nameHash will be the same as shortNameHash for legacy"
			},
			{
				"name":"Full Path Hash",
				"description":"The full path hash for this state."
			},
			{
				"name":"Short Path Hash",
				"description":"The name Hash. Does not include the parent layer's name"
			},
			{
				"name":"Tag Hash",
				"description":"The layer's tag hash"
			},
			{
				"name":"Is State Looping",
				"description":"Is the state looping. All animations in the state must be looping"
			},
			{
				"name":"Length",
				"description":"The Current duration of the state. In seconds, can vary when the State contains a Blend Tree "
			},
			{
				"name":"Normalized Time",
				"description":"The integer part is the number of time a state has been looped. The fractional part is the % (0-1) of progress in the current loop"
			},
			{
				"name":"Loop Count",
				"description":"The integer part is the number of time a state has been looped. This is extracted from the normalizedTime"
			},
			{
				"name":"Current Loop Progress",
				"description":"The progress in the current loop. This is extracted from the normalizedTime"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Current State Info Is Name",
		"category":"Animator",
		"image":"./images/GetAnimatorCurrentStateInfoIsName.png",
		"description":"Check the current State name on a specified layer, this is more than the layer name, it holds the current state as well.",
		"params": [
			{
				"name":"Game Object",
				"description":"The target. An Animator component and a PlayMakerAnimatorProxy component are required"
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Name",
				"description":"The name to check the layer against."
			},
			{
				"name":"Is Matching",
				"description":"True if name matches"
			},
			{
				"name":"Name Match Event",
				"description":"Event send if name matches"
			},
			{
				"name":"Name Do Not Match Event",
				"description":"Event send if name doesn't match"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Current State Info Is Tag",
		"category":"Animator",
		"image":"./images/GetAnimatorCurrentStateInfoIsTag.png",
		"description":"Does tag match the tag of the active state in the state machine",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Tag",
				"description":"The tag to check the layer against."
			},
			{
				"name":"Tag Match",
				"description":"True if tag matches"
			},
			{
				"name":"Tag Match Event",
				"description":"Event send if tag matches"
			},
			{
				"name":"Tag Do Not Match Event",
				"description":"Event send if tag matches"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Current Transition Info",
		"category":"Animator",
		"image":"./images/GetAnimatorCurrentTransitionInfo.png",
		"description":"Gets the current transition information on a specified layer. Only valid when during a transition.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Name",
				"description":"The unique name of the Transition"
			},
			{
				"name":"Name Hash",
				"description":"The unique name of the Transition"
			},
			{
				"name":"User Name Hash",
				"description":"The user-specified name of the Transition"
			},
			{
				"name":"Normalized Time",
				"description":"Normalized time of the Transition"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Current Transition Info Is Name",
		"category":"Animator",
		"image":"./images/GetAnimatorCurrentTransitionInfoIsName.png",
		"description":"Check the active Transition name on a specified layer. Format is 'CURRENT_STATE -> NEXT_STATE'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Name",
				"description":"The name to check the transition against."
			},
			{
				"name":"Name Match",
				"description":"True if name matches"
			},
			{
				"name":"Name Match Event",
				"description":"Event send if name matches"
			},
			{
				"name":"Name Do Not Match Event",
				"description":"Event send if name doesn't match"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Current Transition Info Is User Name",
		"category":"Animator",
		"image":"./images/GetAnimatorCurrentTransitionInfoIsUserName.png",
		"description":"Check the active Transition user-specified name on a specified layer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"User Name",
				"description":"The user-specified name to check the transition against."
			},
			{
				"name":"Name Match",
				"description":"True if name matches"
			},
			{
				"name":"Name Match Event",
				"description":"Event send if name matches"
			},
			{
				"name":"Name Do Not Match Event",
				"description":"Event send if name doesn't match"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Delta",
		"category":"Animator",
		"image":"./images/GetAnimatorDelta.png",
		"description":"Gets the avatar delta position and rotation for the last evaluated frame.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Delta Position",
				"description":"The avatar delta position for the last evaluated frame"
			},
			{
				"name":"Delta Rotation",
				"description":"The avatar delta position for the last evaluated frame"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Feet Pivot Active",
		"category":"Animator",
		"image":"./images/GetAnimatorFeetPivotActive.png",
		"description":"Returns the feet pivot. At 0% blending point is body mass center. At 100% blending point is feet pivot",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Feet Pivot Active",
				"description":"The feet pivot Blending. At 0% blending point is body mass center. At 100% blending point is feet pivot"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Float",
		"category":"Animator",
		"image":"./images/GetAnimatorFloat.png",
		"description":"Gets the value of a float parameter",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Parameter",
				"description":"The animator parameter"
			},
			{
				"name":"Result",
				"description":"The float value of the animator parameter"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Gravity Weight",
		"category":"Animator",
		"image":"./images/GetAnimatorGravityWeight.png",
		"description":"Returns The current gravity weight based on current animations that are played",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Gravity Weight",
				"description":"The current gravity weight based on current animations that are played"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Human Scale",
		"category":"Animator",
		"image":"./images/GetAnimatorHumanScale.png",
		"description":"Returns the scale of the current Avatar for a humanoid rig, (1 by default if the rig is generic).\n The scale is relative to Unity's Default Avatar",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Human Scale",
				"description":"the scale of the current Avatar"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator IK Goal",
		"category":"Animator",
		"image":"./images/GetAnimatorIKGoal.png",
		"description":"Gets the position, rotation and weights of an IK goal. A GameObject can be set to use for the position and rotation",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"IK Goal",
				"description":"The IK goal"
			},
			{
				"name":"Goal",
				"description":"The gameObject to apply ik goal position and rotation to."
			},
			{
				"name":"Position",
				"description":"Gets The position of the ik goal. If Goal GameObject is defined, position is used as an offset from Goal"
			},
			{
				"name":"Rotation",
				"description":"Gets The rotation of the ik goal.If Goal GameObject define, rotation is used as an offset from Goal"
			},
			{
				"name":"Position Weight",
				"description":"Gets The translative weight of an IK goal (0 = at the original animation before IK, 1 = at the goal)"
			},
			{
				"name":"Rotation Weight",
				"description":"Gets the rotational weight of an IK goal (0 = rotation before IK, 1 = rotation at the IK goal)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Int",
		"category":"Animator",
		"image":"./images/GetAnimatorInt.png",
		"description":"Gets the value of an int parameter.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Parameter",
				"description":"The animator parameter"
			},
			{
				"name":"Result",
				"description":"The int value of the animator parameter"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Is Human",
		"category":"Animator",
		"image":"./images/GetAnimatorIsHuman.png",
		"description":"Returns true if the current rig is humanoid, false if it is generic. Can also sends events",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Is Human",
				"description":"True if the current rig is humanoid, False if it is generic"
			},
			{
				"name":"Is Human Event",
				"description":"Event send if rig is humanoid"
			},
			{
				"name":"Is Generic Event",
				"description":"Event send if rig is generic"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Is Layer In Transition",
		"category":"Animator",
		"image":"./images/GetAnimatorIsLayerInTransition.png",
		"description":"Returns true if the specified layer is in a transition. Can also send events",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Is In Transition",
				"description":"True if automatic matching is active"
			},
			{
				"name":"Is In Transition Event",
				"description":"Event send if automatic matching is active"
			},
			{
				"name":"Is Not In Transition Event",
				"description":"Event send if automatic matching is not active"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Is Matching Target",
		"category":"Animator",
		"image":"./images/GetAnimatorIsMatchingTarget.png",
		"description":"Returns true if automatic matching is active. Can also send events",
		"params": [
			{
				"name":"Game Object",
				"description":"The target. An Animator component and a PlayMakerAnimatorProxy component are required"
			},
			{
				"name":"Is Matching Active",
				"description":"True if automatic matching is active"
			},
			{
				"name":"Matching Activated Event",
				"description":"Event send if automatic matching is active"
			},
			{
				"name":"Matching Deactived Event",
				"description":"Event send if automatic matching is not active"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Is Parameter Controlled By Curve",
		"category":"Animator",
		"image":"./images/GetAnimatorIsParameterControlledByCurve.png",
		"description":"Returns true if a parameter is controlled by an additional curve on an animation",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Parameter Name",
				"description":"The parameter's name"
			},
			{
				"name":"Is Controlled By Curve",
				"description":"True if controlled by curve"
			},
			{
				"name":"Is Controlled By Curve Event",
				"description":"Event send if controlled by curve"
			},
			{
				"name":"Is Not Controlled By Curve Event",
				"description":"Event send if not controlled by curve"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Layer Count",
		"category":"Animator",
		"image":"./images/GetAnimatorLayerCount.png",
		"description":"Returns the Animator controller layer count",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Layer Count",
				"description":"The Animator controller layer count"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Layer Name",
		"category":"Animator",
		"image":"./images/GetAnimatorLayerName.png",
		"description":"Returns the name of a layer from its index",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Layer Index",
				"description":"The layer index"
			},
			{
				"name":"Layer Name",
				"description":"The layer name"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Layers Affect Mass Center",
		"category":"Animator",
		"image":"./images/GetAnimatorLayersAffectMassCenter.png",
		"description":"Returns if additional layers affects the mass center",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Affect Mass Center",
				"description":"If true, additional layers affects the mass center"
			},
			{
				"name":"Affect Mass Center Event",
				"description":"Event send if additional layers affects the mass center"
			},
			{
				"name":"Do Not Affect Mass Center Event",
				"description":"Event send if additional layers do no affects the mass center"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Layer Weight",
		"category":"Animator",
		"image":"./images/GetAnimatorLayerWeight.png",
		"description":"Gets the layer's current weight",
		"params": [
			{
				"name":"Game Object",
				"description":"The target."
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Layer Weight",
				"description":"The layer's current weight"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Left Foot Bottom Height",
		"category":"Animator",
		"image":"./images/GetAnimatorLeftFootBottomHeight.png",
		"description":"Get the left foot bottom height.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Left Foot Height",
				"description":"the left foot bottom height."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when value is subject to change over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Next State Info",
		"category":"Animator",
		"image":"./images/GetAnimatorNextStateInfo.png",
		"description":"Gets the next State information on a specified layer",
		"params": [
			{
				"name":"Game Object",
				"description":"The target. An Animator component is required"
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Name",
				"description":"The layer's name."
			},
			{
				"name":"Name Hash",
				"description":"The layer's name Hash. Obsolete in Unity 5, use fullPathHash or shortPathHash instead, nameHash will be the same as shortNameHash for legacy"
			},
			{
				"name":"Full Path Hash",
				"description":"The full path hash for this state."
			},
			{
				"name":"Short Path Hash",
				"description":"The name Hash. Does not include the parent layer's name"
			},
			{
				"name":"Tag Hash",
				"description":"The layer's tag hash"
			},
			{
				"name":"Is State Looping",
				"description":"Is the state looping. All animations in the state must be looping"
			},
			{
				"name":"Length",
				"description":"The Current duration of the state. In seconds, can vary when the State contains a Blend Tree "
			},
			{
				"name":"Normalized Time",
				"description":"The integer part is the number of time a state has been looped. The fractional part is the % (0-1) of progress in the current loop"
			},
			{
				"name":"Loop Count",
				"description":"The integer part is the number of time a state has been looped. This is extracted from the normalizedTime"
			},
			{
				"name":"Current Loop Progress",
				"description":"The progress in the current loop. This is extracted from the normalizedTime"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Pivot",
		"category":"Animator",
		"image":"./images/GetAnimatorPivot.png",
		"description":"Returns the pivot weight and/or position. The pivot is the most stable point between the avatar's left and right foot.\n For a weight value of 0, the left foot is the most stable point For a value of 1, the right foot is the most stable point",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Pivot Weight",
				"description":"The pivot is the most stable point between the avatar's left and right foot.\n For a value of 0, the left foot is the most stable point For a value of 1, the right foot is the most stable point"
			},
			{
				"name":"Pivot Position",
				"description":"The pivot is the most stable point between the avatar's left and right foot.\n For a value of 0, the left foot is the most stable point For a value of 1, the right foot is the most stable point"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Play Back Speed",
		"category":"Animator",
		"image":"./images/GetAnimatorPlayBackSpeed.png",
		"description":"Gets the playback speed of the Animator. 1 is normal playback speed",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Play Back Speed",
				"description":"The playBack speed of the animator. 1 is normal playback speed"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when value is subject to change over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Play Back Time",
		"category":"Animator",
		"image":"./images/GetAnimatorPlayBackTime.png",
		"description":"Gets the playback position in the recording buffer. When in playback mode (use  AnimatorStartPlayback), this value is used for controlling the current playback position in the buffer (in seconds). The value can range between recordingStartTime and recordingStopTime See Also: StartPlayback, StopPlayback.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Play Back Time",
				"description":"The playBack time of the animator."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when value is subject to change over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Right Foot Bottom Height",
		"category":"Animator",
		"image":"./images/GetAnimatorRightFootBottomHeight.png",
		"description":"Get the right foot bottom height.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Right Foot Height",
				"description":"The right foot bottom height."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame during LateUpdate. Useful when value is subject to change over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Root",
		"category":"Animator",
		"image":"./images/GetAnimatorRoot.png",
		"description":"Gets the avatar body mass center position and rotation.Optionally accept a GameObject to get the body transform. \nThe position and rotation are local to the gameobject",
		"params": [
			{
				"name":"Game Object",
				"description":"The target."
			},
			{
				"name":"Root Position",
				"description":"The avatar body mass center"
			},
			{
				"name":"Root Rotation",
				"description":"The avatar body mass center"
			},
			{
				"name":"Body Game Object",
				"description":"If set, apply the body mass center position and rotation to this gameObject"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Speed",
		"category":"Animator",
		"image":"./images/GetAnimatorSpeed.png",
		"description":"Gets the playback speed of the Animator. 1 is normal playback speed",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Speed",
				"description":"The playBack speed of the animator. 1 is normal playback speed"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Animator Target",
		"category":"Animator",
		"image":"./images/GetAnimatorTarget.png",
		"description":"Gets the position and rotation of the target specified by SetTarget(AvatarTarget targetIndex, float targetNormalizedTime)).\nThe position and rotation are only valid when a frame has being evaluated after the SetTarget call",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Target Position",
				"description":"The target position"
			},
			{
				"name":"Target Rotation",
				"description":"The target rotation"
			},
			{
				"name":"Target Game Object",
				"description":"If set, apply the position and rotation to this gameObject"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Nav Mesh Agent Animator Synchronizer",
		"category":"Animator",
		"image":"./images/NavMeshAgentAnimatorSynchronizer.png",
		"description":"Synchronize a NavMesh Agent velocity and rotation with the animator process.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Agent target. An Animator component and a NavMeshAgent component are required"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Apply Root Motion",
		"category":"Animator",
		"image":"./images/SetAnimatorApplyRootMotion.png",
		"description":"Set Apply Root Motion: If true, Root is controlled by animations",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Apply Root Motion",
				"description":"If true, Root motion is controlled by animations"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Body",
		"category":"Animator",
		"image":"./images/SetAnimatorBody.png",
		"description":"Sets the position and rotation of the body. A GameObject can be set to control the position and rotation, or it can be manually expressed.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Target",
				"description":"The gameObject target of the ik goal"
			},
			{
				"name":"Position",
				"description":"The position of the ik goal. If Goal GameObject set, position is used as an offset from Goal"
			},
			{
				"name":"Rotation",
				"description":"The rotation of the ik goal.If Goal GameObject set, rotation is used as an offset from Goal"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Bool",
		"category":"Animator",
		"image":"./images/SetAnimatorBool.png",
		"description":"Sets the value of a bool parameter",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Parameter",
				"description":"The animator parameter"
			},
			{
				"name":"Value",
				"description":"The Bool value to assign to the animator parameter"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Culling Mode",
		"category":"Animator",
		"image":"./images/SetAnimatorCullingMode.png",
		"description":"Controls culling of this Animator component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Always Animate",
				"description":"If true, always animate the entire character. If false, animation updates are disabled when renderers are not visible"
			},
			{
				"name":"Cull Completely",
				"description":"If true, animation is completely disabled when renderers are not visible"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Feet Pivot Active",
		"category":"Animator",
		"image":"./images/SetAnimatorFeetPivotActive.png",
		"description":"Activates feet pivot. At 0% blending point is body mass center. At 100% blending point is feet pivot",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Feet Pivot Active",
				"description":"Activates feet pivot. At 0% blending point is body mass center. At 100% blending point is feet pivot"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Float",
		"category":"Animator",
		"image":"./images/SetAnimatorFloat.png",
		"description":"Sets the value of a float parameter",
		"params": [
			{
				"name":"Game Object",
				"description":"The target."
			},
			{
				"name":"Parameter",
				"description":"The animator parameter"
			},
			{
				"name":"Value",
				"description":"The float value to assign to the animator parameter"
			},
			{
				"name":"Damp Time",
				"description":"Optional: The time allowed to parameter to reach the value. Requires Every Frame to be checked."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator IK Goal",
		"category":"Animator",
		"image":"./images/SetAnimatorIKGoal.png",
		"description":"Sets the position, rotation and weights of an IK goal. A GameObject can be set to control the position and rotation, or it can be manually expressed.",
		"params": [
			{
				"name":"Game Object",
				"description":"The target."
			},
			{
				"name":"IK Goal",
				"description":"The IK goal"
			},
			{
				"name":"Goal",
				"description":"The gameObject target of the ik goal"
			},
			{
				"name":"Position",
				"description":"The position of the ik goal. If Goal GameObject set, position is used as an offset from Goal"
			},
			{
				"name":"Rotation",
				"description":"The rotation of the ik goal.If Goal GameObject set, rotation is used as an offset from Goal"
			},
			{
				"name":"Position Weight",
				"description":"The translative weight of an IK goal (0 = at the original animation before IK, 1 = at the goal)"
			},
			{
				"name":"Rotation Weight",
				"description":"Sets the rotational weight of an IK goal (0 = rotation before IK, 1 = rotation at the IK goal)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Int",
		"category":"Animator",
		"image":"./images/SetAnimatorInt.png",
		"description":"Sets the value of an integer parameter",
		"params": [
			{
				"name":"Game Object",
				"description":"The target."
			},
			{
				"name":"Parameter",
				"description":"The animator parameter"
			},
			{
				"name":"Value",
				"description":"The Int value to assign to the animator parameter"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Every Frame Option",
				"description":"Select when to perform the action, during OnUpdate, OnAnimatorMove, OnAnimatorIK"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Layers Affect Mass Center",
		"category":"Animator",
		"image":"./images/SetAnimatorLayersAffectMassCenter.png",
		"description":"If true, additional layers affects the mass center",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Affect Mass Center",
				"description":"If true, additional layers affects the mass center"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Layer Weight",
		"category":"Animator",
		"image":"./images/SetAnimatorLayerWeight.png",
		"description":"Sets the layer's current weight",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Layer Index",
				"description":"The layer's index"
			},
			{
				"name":"Layer Weight",
				"description":"Sets the layer's current weight"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful for changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Look At",
		"category":"Animator",
		"image":"./images/SetAnimatorLookAt.png",
		"description":"Sets look at position and weights. You can use a target GameObject or position.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Target",
				"description":"The GameObject to look at. Set to None to use a position instead."
			},
			{
				"name":"Target Position",
				"description":"The look-at position. If Target GameObject is set, this is used as an offset from the Target's position."
			},
			{
				"name":"Weight",
				"description":"The global weight of the LookAt, multiplier for other parameters. Range from 0 to 1"
			},
			{
				"name":"Body Weight",
				"description":"Determines how much the body is involved in the LookAt. Range from 0 to 1"
			},
			{
				"name":"Head Weight",
				"description":"Determines how much the head is involved in the LookAt. Range from 0 to 1"
			},
			{
				"name":"Eyes Weight",
				"description":"Determines how much the eyes are involved in the LookAt. Range from 0 to 1"
			},
			{
				"name":"Clamp Weight",
				"description":"0.0 means the character is completely unrestrained in motion, 1.0 means he's completely clamped (look at becomes impossible), and 0.5 means he'll be able to move on half of the possible range (180 degrees)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame during OnAnimatorIK(). This would normally be true."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Play Back Speed",
		"category":"Animator",
		"image":"./images/SetAnimatorPlayBackSpeed.png",
		"description":"Sets the playback speed of the Animator. 1 is normal playback speed",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Play Back Speed",
				"description":"If true, automatically stabilize feet during transition and blending"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful for changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Play Back Time",
		"category":"Animator",
		"image":"./images/SetAnimatorPlayBackTime.png",
		"description":"Sets the playback position in the recording buffer. When in playback mode (use AnimatorStartPlayback), this value is used for controlling the current playback position in the buffer (in seconds). The value can range between recordingStartTime and recordingStopTime ",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Playback Time",
				"description":"The playback time"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful for changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Speed",
		"category":"Animator",
		"image":"./images/SetAnimatorSpeed.png",
		"description":"Sets the playback speed of the Animator. 1 is normal playback speed",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Speed",
				"description":"The playback speed."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful for changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Stabilize Feet",
		"category":"Animator",
		"image":"./images/SetAnimatorStabilizeFeet.png",
		"description":"If true, automatically stabilize feet during transition and blending",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Stabilize Feet",
				"description":"If true, automatically stabilize feet during transition and blending"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Target",
		"category":"Animator",
		"image":"./images/SetAnimatorTarget.png",
		"description":"Sets an AvatarTarget and a targetNormalizedTime for the current state",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Animator Component."
			},
			{
				"name":"Avatar Target",
				"description":"The avatar target"
			},
			{
				"name":"Target Normalized Time",
				"description":"The current state Time that is queried"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame during OnAnimatorMove. Useful when changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Animator Trigger",
		"category":"Animator",
		"image":"./images/SetAnimatorTrigger.png",
		"description":"Sets a trigger parameter to active. Triggers are parameters that act mostly like booleans, but get reset to inactive when they are used in a transition.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Animator Component."
			},
			{
				"name":"Trigger",
				"description":"The trigger name"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sync Animator Bool To State",
		"category":"Animator",
		"image":"./images/SyncAnimatorBoolToState.png",
		"description":"Syncs the value of an Animator Bool parameter to the current state. Sets the parameter to true when entering the state and false when exiting. For example, you can setup an animator with one animation per state with transition conditions based on the Bool parameter, then sync animator states with this FSM's states using this action.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Animator component."
			},
			{
				"name":"Parameter",
				"description":"The bool parameter to sync. Set to true when the state is entered and false when the state exits."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Application Quit",
		"category":"Application",
		"image":"./images/ApplicationQuit.png",
		"description":"Quits the player application.",
		"params": [
			{
				"name":"Exit Code",
				"description":"An optional exit code to return when the player application terminates on Windows, Mac and Linux. Defaults to 0."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Application Run In Background",
		"category":"Application",
		"image":"./images/ApplicationRunInBackground.png",
		"description":"Sets if the Application should play in the background. Useful for servers or testing network games on one machine.",
		"params": [
			{
				"name":"Run In Background",
				"description":"Should the Application play in the background."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Screen Height",
		"category":"Application",
		"image":"./images/GetScreenHeight.png",
		"description":"Gets the Height of the Screen in pixels.",
		"params": [
			{
				"name":"Store Screen Height",
				"description":"Store the screen height in a Float Variable"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Screen Width",
		"category":"Application",
		"image":"./images/GetScreenWidth.png",
		"description":"Gets the Width of the Screen in pixels.",
		"params": [
			{
				"name":"Store Screen Width",
				"description":"Store the screen width in a Float Variable"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Screen Resolution",
		"category":"Application",
		"image":"./images/SetScreenResolution.png",
		"description":"Sets the Screen Width and Height.",
		"params": [
			{
				"name":"Width",
				"description":"Screen Width"
			},
			{
				"name":"Height",
				"description":"Screen Height"
			},
			{
				"name":"Fullscreen",
				"description":"Show Fullscreen"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Take Screenshot",
		"category":"Application",
		"image":"./images/TakeScreenshot.png",
		"description":"Saves a Screenshot. NOTE: Does nothing in Web Player. On Android, the resulting screenshot is available some time later.",
		"params": [
			{
				"name":"Destination",
				"description":"Where to save the screenshot."
			},
			{
				"name":"Custom Path",
				"description":"Path used with Custom Path Destination option."
			},
			{
				"name":"Filename",
				"description":"The filename for the screenshot."
			},
			{
				"name":"Auto Number",
				"description":"Add an auto-incremented number to the filename."
			},
			{
				"name":"Super Size",
				"description":"Factor by which to increase resolution."
			},
			{
				"name":"Debug Log",
				"description":"Log saved file info in Unity console."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Add",
		"category":"Array",
		"image":"./images/ArrayAdd.png",
		"description":"Add an item to the end of an Array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Value",
				"description":"Item to add."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Add Range",
		"category":"Array",
		"image":"./images/ArrayAddRange.png",
		"description":"Add multiple items to the end of an array.\nNOTE: There is a bug in this action when resizing Variables. It will be fixed in the next update.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Variables",
				"description":"The items to add to the array."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Clear",
		"category":"Array",
		"image":"./images/ArrayClear.png",
		"description":"Sets all items in an Array to their default value: 0, empty string, false, or null depending on their type. Optionally defines a reset value to use.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to clear."
			},
			{
				"name":"Reset Value",
				"description":"Optional reset value. Leave as None for default value."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Compare",
		"category":"Logic",
		"image":"./images/ArrayCompare.png",
		"description":"Tests if 2 Array Variables have the same values.",
		"params": [
			{
				"name":"Array 1",
				"description":"The first Array Variable to test."
			},
			{
				"name":"Array 2",
				"description":"The second Array Variable to test."
			},
			{
				"name":"Sequence Equal",
				"description":"Event to send if the 2 arrays have the same values."
			},
			{
				"name":"Sequence Not Equal",
				"description":"Event to send if the 2 arrays have different values."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Contains",
		"category":"Array",
		"image":"./images/ArrayContains.png",
		"description":"Check if an Array contains a value. Optionally get its index.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Value",
				"description":"The value to check against in the array."
			},
			{
				"name":"Index",
				"description":"The index of the value in the array."
			},
			{
				"name":"Is Contained",
				"description":"Store in a bool whether it contains that element or not."
			},
			{
				"name":"Is Contained Event",
				"description":"Event sent if the array contains that element."
			},
			{
				"name":"Is Not Contained Event",
				"description":"Event sent if the array does not contain that element."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Delete At",
		"category":"Array",
		"image":"./images/ArrayDeleteAt.png",
		"description":"Delete the item at an index. Index must be between 0 and the number of items -1. First item is index 0.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Index",
				"description":"The index into the array."
			},
			{
				"name":"Index Out Of Range Event",
				"description":"The event to trigger if the index is out of range."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array For Each",
		"category":"Array",
		"image":"./images/ArrayForEach.png",
		"description":"Loop through all items in an {{Array}} and run an FSM Template on each item.\\nNOTE: This is an advanced/experimental action, still in beta. Please report any issues you run into.",
		"params": [
			{
				"name":"Array",
				"description":"Array to iterate through."
			},
			{
				"name":"Store Item",
				"description":"Store the item in a variable"
			},
			{
				"name":"Fsm Template Control",
				"description":"The Template to run on each item in the array.<ul><li>The Template should expose a variable in the Inspector.</li><li>Use this Input variable to input the stored item.</li><li>The Template should use {{Finish FSM}} when finished.</li></ul>"
			},
			{
				"name":"Finish Event",
				"description":"Event to send after iterating through all items in the Array."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get",
		"category":"Array",
		"image":"./images/ArrayGet.png",
		"description":"Get a value at an index. Index must be between 0 and the number of items -1. First item is index 0.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Index",
				"description":"The index into the array."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a variable. NOTE: must be of the same type as the array."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			},
			{
				"name":"Index Out Of Range",
				"description":"The event to trigger if the index is out of range."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Next",
		"category":"Array",
		"image":"./images/ArrayGetNext.png",
		"description":"Each time this action is called it gets the next item from a Array. This lets you quickly loop through all the items of an array to perform actions on them.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Start Index",
				"description":"From where to start iteration, leave as 0 to start from the beginning"
			},
			{
				"name":"End Index",
				"description":"When to end iteration, leave as 0 to iterate until the end"
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next item."
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more items."
			},
			{
				"name":"Result",
				"description":"Store the current array item in a variable of the same type."
			},
			{
				"name":"Current Index",
				"description":"Store the current array index in an int variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Get Random",
		"category":"Array",
		"image":"./images/ArrayGetRandom.png",
		"description":"Get a Random item from an Array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array to use."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a variable."
			},
			{
				"name":"Index",
				"description":"The index of the value in the array."
			},
			{
				"name":"No Repeat",
				"description":"Don't get the same item twice in a row."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Insert",
		"category":"Array",
		"image":"./images/ArrayInsert.png",
		"description":"Insert an item into an Array at the specified index.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Value",
				"description":"Item to add."
			},
			{
				"name":"At Index",
				"description":"The index to insert at.\n0 = first, 1 = second..."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Length",
		"category":"Array",
		"image":"./images/ArrayLength.png",
		"description":"Gets the number of items in an Array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable."
			},
			{
				"name":"Length",
				"description":"Store the length in an {{Int Variable}}."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the array is changing and you're waiting for a particular length."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Remove",
		"category":"Array",
		"image":"./images/ArrayRemove.png",
		"description":"Remove an item from an array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Value",
				"description":"Item to remove."
			},
			{
				"name":"All Matches",
				"description":"Remove all instances of the value. Otherwise removes only the first instance."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Remove All",
		"category":"Array",
		"image":"./images/ArrayRemoveAll.png",
		"description":"Remove all items from an Array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to remove all items from."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Resize",
		"category":"Array",
		"image":"./images/ArrayResize.png",
		"description":"Resize an array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to resize"
			},
			{
				"name":"New Size",
				"description":"The new size of the array."
			},
			{
				"name":"Size Out Of Range Event",
				"description":"The event to trigger if the new size is out of range"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Reverse",
		"category":"Array",
		"image":"./images/ArrayReverse.png",
		"description":"Reverse the order of items in an Array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array to reverse."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Set",
		"category":"Array",
		"image":"./images/ArraySet.png",
		"description":"Set the value at an index. Index must be between 0 and the number of items -1. First item is index 0.",
		"params": [
			{
				"name":"Array",
				"description":"The Array Variable to use."
			},
			{
				"name":"Index",
				"description":"The index into the array."
			},
			{
				"name":"Value",
				"description":"Set the value of the array at the specified index."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			},
			{
				"name":"Index Out Of Range",
				"description":"The event to trigger if the index is out of range"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Shuffle",
		"category":"Array",
		"image":"./images/ArrayShuffle.png",
		"description":"Shuffle values in an array. Optionally set a start index and range to shuffle only part of the array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array to shuffle."
			},
			{
				"name":"Start Index",
				"description":"Optional start Index for the shuffling. Leave it to none or 0 for no effect"
			},
			{
				"name":"Shuffling Range",
				"description":"Optional range for the shuffling, starting at the start index if greater than 0. Leave it to none or 0 for no effect, it will shuffle the whole array"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Sort",
		"category":"Array",
		"image":"./images/ArraySort.png",
		"description":"Sort items in an Array.",
		"params": [
			{
				"name":"Array",
				"description":"The Array to sort."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Array Transfer Value",
		"category":"Array",
		"image":"./images/ArrayTransferValue.png",
		"description":"Transfer a value from one array to another, basically a copy/cut paste action on steroids.",
		"params": [
			{
				"name":"Array Source",
				"description":"The Array Variable source."
			},
			{
				"name":"Array Target",
				"description":"The Array Variable target."
			},
			{
				"name":"Index To Transfer",
				"description":"The index to transfer."
			},
			{
				"name":"Copy Type",
				"description":"Copy Options."
			},
			{
				"name":"Paste Type",
				"description":"Paste Options"
			},
			{
				"name":"Index Out Of Range",
				"description":"Event sent if the array source does not contains that element."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Array Set",
		"category":"Array",
		"image":"./images/FsmArraySet.png",
		"description":"Set an item in an Array Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object."
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Array",
		"category":"StateMachine",
		"image":"./images/GetFsmArray.png",
		"description":"Copy an Array Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object."
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Store Value",
				"description":"Get the content of the array variable."
			},
			{
				"name":"Copy Values",
				"description":"If true, makes copies. if false, values share the same reference and editing one array item value will affect the source and vice versa. Warning, this only affect the current items of the source array. Adding or removing items doesn't affect other FsmArrays."
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Array Item",
		"category":"StateMachine",
		"image":"./images/GetFsmArrayItem.png",
		"description":"Gets an item in an Array Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object."
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Index",
				"description":"The index into the array."
			},
			{
				"name":"Store Value",
				"description":"Get the value of the array at the specified index."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			},
			{
				"name":"Index Out Of Range",
				"description":"The event to trigger if the index is out of range"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Array",
		"category":"StateMachine",
		"image":"./images/SetFsmArray.png",
		"description":"Copy an Array Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object."
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the content of the array variable."
			},
			{
				"name":"Copy Values",
				"description":"If true, makes copies. if false, values share the same reference and editing one array item value will affect the source and vice versa. Warning, this only affect the current items of the source array. Adding or removing items doesn't affect other FsmArrays."
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Array Item",
		"category":"StateMachine",
		"image":"./images/SetFsmArrayItem.png",
		"description":"Set an item in an Array Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object."
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Index",
				"description":"The index into the array."
			},
			{
				"name":"Value",
				"description":"Set the value of the array at the specified index."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			},
			{
				"name":"Index Out Of Range",
				"description":"The event to trigger if the index is out of range"
			},
			{
				"name":"Fsm Not Found",
				"description":"The event to send if the FSM is not found."
			},
			{
				"name":"Variable Not Found",
				"description":"The event to send if the Variable is not found."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Mute",
		"category":"Audio",
		"image":"./images/AudioMute.png",
		"description":"Mute/un-mute the Audio Clip played by an Audio Source component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Audio Source component."
			},
			{
				"name":"Mute",
				"description":"Check to mute, uncheck to un-mute."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Pause",
		"category":"Audio",
		"image":"./images/AudioPause.png",
		"description":"Pauses playing the Audio Clip played by an Audio Source component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Audio Source component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Play",
		"category":"Audio",
		"image":"./images/AudioPlay.png",
		"description":"Plays the AudioClip defined in an Audio Source component on a GameObject. Set the clip using {{Set Audio Clip}}. Optionally plays a one shot Audio Clip.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an AudioSource component."
			},
			{
				"name":"Volume",
				"description":"Volume to play the sound at. Can be modified with {{Set Audio Volume}}."
			},
			{
				"name":"One Shot Clip",
				"description":"Optionally play a 'one shot' AudioClip. NOTE: Volume cannot be adjusted while playing a 'one shot' AudioClip."
			},
			{
				"name":"Wait For End Of Clip",
				"description":"Wait until the end of the clip to send the Finish Event. Set to false to send the finish event immediately."
			},
			{
				"name":"Finished Event",
				"description":"Send this event when the sound is finished playing. NOTE: currently also sent when the sound is paused..."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Audio Stop",
		"category":"Audio",
		"image":"./images/AudioStop.png",
		"description":"Stops playing the Audio Clip played by an Audio Source component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an AudioSource component."
			},
			{
				"name":"Fade Time",
				"description":"Audio Stop can make a hard pop sound. A short fade out can fix this glitch."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Random Sound",
		"category":"Audio",
		"image":"./images/PlayRandomSound.png",
		"description":"Plays a Random Audio Clip at a position defined by a Game Object or a Vector3. If a position is defined, it takes priority over the game object. You can set the relative weight of the clips to control how often they are selected.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to play the sound."
			},
			{
				"name":"Position",
				"description":"Use world position instead of GameObject."
			},
			{
				"name":"Audio Clips",
				"description":"A possible Audio Clip choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this sound being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Volume",
				"description":"Volume to play the sound at."
			},
			{
				"name":"No Repeat",
				"description":"Don't play the same sound twice in a row"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Sound",
		"category":"Audio",
		"image":"./images/PlaySound.png",
		"description":"Plays an Audio Clip at a position defined by a Game Object or Vector3. If a position is defined, it takes priority over the game object. This action doesn't require an Audio Source component, but offers less control than Audio actions.",
		"params": [
			{
				"name":"Game Object",
				"description":"A Game Object that defines a position."
			},
			{
				"name":"Position",
				"description":"A Vector3 value that defines a world position (overrides Game Object)."
			},
			{
				"name":"Clip",
				"description":"The audio clip to play."
			},
			{
				"name":"Volume",
				"description":"Volume to play sound at."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Audio Clip",
		"category":"Audio",
		"image":"./images/SetAudioClip.png",
		"description":"Sets the Audio Clip played by the AudioSource component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"A GameObject with an AudioSource component."
			},
			{
				"name":"Audio Clip",
				"description":"The AudioClip to assign to the AudioSource."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Audio Loop",
		"category":"Audio",
		"image":"./images/SetAudioLoop.png",
		"description":"Sets looping on the AudioSource component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"A GameObject with an AudioSource component."
			},
			{
				"name":"Loop",
				"description":"Set the Audio Source looping."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Audio Pitch",
		"category":"Audio",
		"image":"./images/SetAudioPitch.png",
		"description":"Sets the Pitch of the Audio Clip played by the AudioSource component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"A GameObject with an AudioSource component."
			},
			{
				"name":"Pitch",
				"description":"Set the pitch."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're driving pitch with a float variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Audio Volume",
		"category":"Audio",
		"image":"./images/SetAudioVolume.png",
		"description":"Sets the Volume of the Audio Clip played by the AudioSource component on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"A GameObject with an AudioSource component."
			},
			{
				"name":"Volume",
				"description":"Set the volume."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're driving the volume with a float variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Game Volume",
		"category":"Audio",
		"image":"./images/SetGameVolume.png",
		"description":"Sets the global sound volume.",
		"params": [
			{
				"name":"Volume",
				"description":"Volume level (0-1)."
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame. Useful if Volume is changing e.g., to fade up/down."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Fade In",
		"category":"Camera",
		"image":"./images/CameraFadeIn.png",
		"description":"Fade from a fullscreen Color. NOTE: Uses OnGUI so requires a PlayMakerGUI component in the scene.",
		"params": [
			{
				"name":"Color",
				"description":"Color to fade from. E.g., Fade up from black."
			},
			{
				"name":"Time",
				"description":"Fade in time in seconds."
			},
			{
				"name":"Finish Event",
				"description":"Optional Event to send when finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Camera Fade Out",
		"category":"Camera",
		"image":"./images/CameraFadeOut.png",
		"description":"Fade to a fullscreen Color. NOTE: Uses OnGUI so requires a PlayMakerGUI component in the scene.",
		"params": [
			{
				"name":"Color",
				"description":"Color to fade to. E.g., Fade to black."
			},
			{
				"name":"Time",
				"description":"Fade out time in seconds."
			},
			{
				"name":"Finish Event",
				"description":"Optional Event to send when finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Clamp Orthographic View",
		"category":"Transform",
		"image":"./images/ClampOrthographicView.png",
		"description":"Clamps an orthographic camera's position to keep the view inside min/max ranges. Set any limit to None to leave that axis un-clamped.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Camera component."
			},
			{
				"name":"View",
				"description":"Orientation of the view."
			},
			{
				"name":"Min X",
				"description":"The left edge of the view to stay inside."
			},
			{
				"name":"Max X",
				"description":"The right edge of the view to stay inside."
			},
			{
				"name":"Min Y",
				"description":"The bottom edge of the view to stay inside."
			},
			{
				"name":"Max Y",
				"description":"The top edge of the view to stay inside."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This is useful if you want to clamp the position of objects that are animated or otherwise positioned in Update."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Cut To Camera",
		"category":"Camera",
		"image":"./images/CutToCamera.png",
		"description":"Activates a Camera in the scene.",
		"params": [
			{
				"name":"Camera",
				"description":"The Camera to activate."
			},
			{
				"name":"Make Main Camera",
				"description":"Makes the camera the new MainCamera. The old MainCamera will be untagged."
			},
			{
				"name":"Cut Back On Exit",
				"description":"Cut back to the original MainCamera when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Main Camera",
		"category":"Camera",
		"image":"./images/GetMainCamera.png",
		"description":"Gets the GameObject tagged MainCamera from the scene",
		"params": [
			{
				"name":"Store Game Object",
				"description":"Store the Game Object tagged as MainCamera and in a Game Object Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Screen To World Point",
		"category":"Camera",
		"image":"./images/ScreenToWorldPoint.png",
		"description":"Transforms position from screen space into world space. NOTE: Uses the MainCamera!",
		"params": [
			{
				"name":"Screen Vector",
				"description":"Screen position as a vector."
			},
			{
				"name":"Screen X",
				"description":"Screen X position in pixels or normalized. See Normalized."
			},
			{
				"name":"Screen Y",
				"description":"Screen X position in pixels or normalized. See Normalized."
			},
			{
				"name":"Screen Z",
				"description":"Distance into the screen in world units."
			},
			{
				"name":"Normalized",
				"description":"If true, X/Y coordinates are considered normalized (0-1), otherwise they are expected to be in pixels"
			},
			{
				"name":"Store World Vector",
				"description":"Store the world position in a vector3 variable."
			},
			{
				"name":"Store World X",
				"description":"Store the world X position in a float variable."
			},
			{
				"name":"Store World Y",
				"description":"Store the world Y position in a float variable."
			},
			{
				"name":"Store World Z",
				"description":"Store the world Z position in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Background Color",
		"category":"Camera",
		"image":"./images/SetBackgroundColor.png",
		"description":"Sets the Background Color used by the Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object that owns the Camera component."
			},
			{
				"name":"Background Color",
				"description":"The background color."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the color is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Camera Culling Mask",
		"category":"Camera",
		"image":"./images/SetCameraCullingMask.png",
		"description":"Sets the Culling Mask used by the Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Camera component."
			},
			{
				"name":"Culling Mask",
				"description":"Cull these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you cull all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Camera FOV",
		"category":"Camera",
		"image":"./images/SetCameraFOV.png",
		"description":"Sets Field of View used by the Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Camera component."
			},
			{
				"name":"Field Of View",
				"description":"Field of view in degrees."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the fov is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Main Camera",
		"category":"Camera",
		"image":"./images/SetMainCamera.png",
		"description":"Sets the Main Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to set as the main camera (should have a Camera component)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"World To Screen Point",
		"category":"Camera",
		"image":"./images/WorldToScreenPoint.png",
		"description":"Transforms a position from world space into screen space. \nNote: Uses the Main Camera unless you specify a camera to use.",
		"params": [
			{
				"name":"Camera",
				"description":"Camera GameObject to use. Defaults to MainCamera if not defined."
			},
			{
				"name":"World Position",
				"description":"World position to transform into screen coordinates."
			},
			{
				"name":"World X",
				"description":"Override X coordinate."
			},
			{
				"name":"World Y",
				"description":"Override Y coordinate."
			},
			{
				"name":"World Z",
				"description":"Override Z coordinate."
			},
			{
				"name":"Store Screen Point",
				"description":"Store the screen position in a Vector3 Variable. Z will equal zero."
			},
			{
				"name":"Store Screen X",
				"description":"Store the screen X position in a Float Variable."
			},
			{
				"name":"Store Screen Y",
				"description":"Store the screen Y position in a Float Variable."
			},
			{
				"name":"Normalize",
				"description":"Normalize screen coordinates (0-1). Otherwise coordinates are in pixels."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Controller Is Grounded",
		"category":"Character",
		"image":"./images/ControllerIsGrounded.png",
		"description":"Tests if a Character Controller on a Game Object was touching the ground during the last move.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to check."
			},
			{
				"name":"True Event",
				"description":"Event to send if touching the ground."
			},
			{
				"name":"False Event",
				"description":"Event to send if not touching the ground."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Controller Move",
		"category":"Character",
		"image":"./images/ControllerMove.png",
		"description":"Moves a Game Object with a Character Controller. See also {{Controller Simple Move}}. NOTE: It is recommended that you make only one call to Move or SimpleMove per frame.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object that owns the Character Controller component."
			},
			{
				"name":"Move Vector",
				"description":"The movement vector."
			},
			{
				"name":"Space",
				"description":"Move in local or word space."
			},
			{
				"name":"Per Second",
				"description":"Apply the move over one second. Makes movement frame rate independent."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Controller Settings",
		"category":"Character",
		"image":"./images/ControllerSettings.png",
		"description":"Modify various character controller settings.\n'None' leaves the setting unchanged.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the CharacterController."
			},
			{
				"name":"Height",
				"description":"The height of the character's capsule."
			},
			{
				"name":"Radius",
				"description":"The radius of the character's capsule."
			},
			{
				"name":"Slope Limit",
				"description":"The character controllers slope limit in degrees."
			},
			{
				"name":"Step Offset",
				"description":"The character controllers step offset in meters."
			},
			{
				"name":"Center",
				"description":"The center of the character's capsule relative to the transform's position"
			},
			{
				"name":"Detect Collisions",
				"description":"Should other RigidBodies or CharacterControllers collide with this character controller (By default always enabled)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Controller Simple Move",
		"category":"Character",
		"image":"./images/ControllerSimpleMove.png",
		"description":"Moves a Game Object with a Character Controller. Velocity along the y-axis is ignored. Speed is in meters/s. Gravity is automatically applied.",
		"params": [
			{
				"name":"Game Object",
				"description":"A Game Object with a Character Controller."
			},
			{
				"name":"Move Vector",
				"description":"The movement vector."
			},
			{
				"name":"Speed",
				"description":"Multiply the Move Vector by a speed factor."
			},
			{
				"name":"Space",
				"description":"Move in local or world space."
			},
			{
				"name":"Falling Event",
				"description":"Event sent if the Character Controller starts falling."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Controller Collision Flags",
		"category":"Character",
		"image":"./images/GetControllerCollisionFlags.png",
		"description":"Gets the Collision Flags from a CharacterController on a GameObject. Collision flags give you a broad overview of where the character collided with another object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Character Controller component."
			},
			{
				"name":"Is Grounded",
				"description":"True if the Character Controller capsule is on the ground"
			},
			{
				"name":"None",
				"description":"True if no collisions in last move."
			},
			{
				"name":"Sides",
				"description":"True if the Character Controller capsule was hit on the sides."
			},
			{
				"name":"Above",
				"description":"True if the Character Controller capsule was hit from above."
			},
			{
				"name":"Below",
				"description":"True if the Character Controller capsule was hit from below."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Controller Hit Info",
		"category":"Character",
		"image":"./images/GetControllerHitInfo.png",
		"description":"Gets info on the last Character Controller collision event. The owner of the FSM must have a character controller. Typically this action is used after a CONTROLLER COLLIDER HIT system event.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"Store the GameObject hit in the last collision."
			},
			{
				"name":"Contact Point",
				"description":"Store the contact point of the last collision in world coordinates."
			},
			{
				"name":"Contact Normal",
				"description":"Store the normal of the last collision."
			},
			{
				"name":"Move Direction",
				"description":"Store the direction of the last move before the collision."
			},
			{
				"name":"Move Length",
				"description":"Store the distance of the last move before the collision."
			},
			{
				"name":"Physics Material Name",
				"description":"Store the physics material of the Game Object Hit. Useful for triggering different effects. Audio, particles..."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Color Interpolate",
		"category":"Color",
		"image":"./images/ColorInterpolate.png",
		"description":"Interpolate through an array of Colors over a specified amount of Time.",
		"params": [
			{
				"name":"Colors",
				"description":"An array of colors. Set the number of colors, then set each color."
			},
			{
				"name":"Time",
				"description":"How long it should take to interpolate through all the colors in the array."
			},
			{
				"name":"Store Color",
				"description":"Store the interpolated color in a Color variable."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the interpolation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful when the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Color Ramp",
		"category":"Color",
		"image":"./images/ColorRamp.png",
		"description":"Sample a color on a continuous color gradient. Define the gradient with a color array. Use Sample At to get an interpolated color.\n\nFor example:\nIf Element 1 is black and Element 2 is red:\n<ul><li>Sample At 1 = black</li><li>Sample At 2 = red</li><li>Sample At 1.5 = dark red</li></ul>",
		"params": [
			{
				"name":"Colors",
				"description":"Array of colors to defining the gradient."
			},
			{
				"name":"Sample At",
				"description":"Point on the gradient to sample. Should be between 0 and the number of colors in the gradient."
			},
			{
				"name":"Store Color",
				"description":"Store the sampled color in a Color variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Color RGBA",
		"category":"Color",
		"image":"./images/GetColorRGBA.png",
		"description":"Get the RGBA channels of a Color Variable and store them in Float Variables.",
		"params": [
			{
				"name":"Color",
				"description":"The Color variable."
			},
			{
				"name":"Store Red",
				"description":"Store the red channel in a float variable."
			},
			{
				"name":"Store Green",
				"description":"Store the green channel in a float variable."
			},
			{
				"name":"Store Blue",
				"description":"Store the blue channel in a float variable."
			},
			{
				"name":"Store Alpha",
				"description":"Store the alpha channel in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the color variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random Color",
		"category":"Color",
		"image":"./images/SelectRandomColor.png",
		"description":"Select a random Color from an array of Colors.",
		"params": [
			{
				"name":"Colors",
				"description":"A possible Color choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this color being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Store Color",
				"description":"Store the selected Color in a Color Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Color RGBA",
		"category":"Color",
		"image":"./images/SetColorRGBA.png",
		"description":"Sets the RGBA channels of a Color Variable. To leave any channel unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Color Variable",
				"description":"The Color Variable to set."
			},
			{
				"name":"Red",
				"description":"Set the red channel of the color variable."
			},
			{
				"name":"Green",
				"description":"Set the green channel of the color variable."
			},
			{
				"name":"Blue",
				"description":"Set the blue channel of the color variable."
			},
			{
				"name":"Alpha",
				"description":"Set the alpha channel of the color variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Color Value",
		"category":"Color",
		"image":"./images/SetColorValue.png",
		"description":"Sets the value of a Color Variable.",
		"params": [
			{
				"name":"Color Variable",
				"description":"The Color Variable to set."
			},
			{
				"name":"Color",
				"description":"The color to set the variable to."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Bool To Color",
		"category":"Convert",
		"image":"./images/ConvertBoolToColor.png",
		"description":"Converts a Bool value to a Color.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to convert."
			},
			{
				"name":"Color Variable",
				"description":"The Color variable to set based on the bool variable value."
			},
			{
				"name":"False Color",
				"description":"Color if Bool variable is false."
			},
			{
				"name":"True Color",
				"description":"Color if Bool variable is true."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Bool variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Bool To Float",
		"category":"Convert",
		"image":"./images/ConvertBoolToFloat.png",
		"description":"Converts a Bool value to a Float value.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to convert."
			},
			{
				"name":"Float Variable",
				"description":"The Float variable to set based on the Bool variable value."
			},
			{
				"name":"False Value",
				"description":"Float value if Bool variable is false."
			},
			{
				"name":"True Value",
				"description":"Float value if Bool variable is true."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Bool variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Bool To Int",
		"category":"Convert",
		"image":"./images/ConvertBoolToInt.png",
		"description":"Converts a Bool value to an Integer value.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to convert."
			},
			{
				"name":"Int Variable",
				"description":"The Integer variable to set based on the Bool variable value."
			},
			{
				"name":"False Value",
				"description":"Integer value if Bool variable is false."
			},
			{
				"name":"True Value",
				"description":"Integer value if Bool variable is false."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Bool variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Bool To String",
		"category":"Convert",
		"image":"./images/ConvertBoolToString.png",
		"description":"Converts a Bool value to a String value.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to convert."
			},
			{
				"name":"String Variable",
				"description":"The String variable to set based on the Bool variable value."
			},
			{
				"name":"False String",
				"description":"String value if Bool variable is false."
			},
			{
				"name":"True String",
				"description":"String value if Bool variable is true."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Bool variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Enum To String",
		"category":"Convert",
		"image":"./images/ConvertEnumToString.png",
		"description":"Converts an Enum value to a String value.",
		"params": [
			{
				"name":"Enum Variable",
				"description":"The Enum variable to convert."
			},
			{
				"name":"String Variable",
				"description":"The String variable to store the converted value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Enum variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Float To Int",
		"category":"Convert",
		"image":"./images/ConvertFloatToInt.png",
		"description":"Converts a Float value to an Integer value.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to convert to an integer."
			},
			{
				"name":"Int Variable",
				"description":"Store the result in an Integer variable."
			},
			{
				"name":"Rounding",
				"description":"Whether to round up or down."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Float To String",
		"category":"Convert",
		"image":"./images/ConvertFloatToString.png",
		"description":"Converts a Float value to a String value with optional format.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to convert."
			},
			{
				"name":"String Variable",
				"description":"A string variable to store the converted value."
			},
			{
				"name":"Format",
				"description":"Optional Format, allows for leading zeros. E.g., 0000"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the float variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Int To Float",
		"category":"Convert",
		"image":"./images/ConvertIntToFloat.png",
		"description":"Converts an Integer value to a Float value.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The Integer variable to convert to a float."
			},
			{
				"name":"Float Variable",
				"description":"Store the result in a Float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Integer variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Int To String",
		"category":"Convert",
		"image":"./images/ConvertIntToString.png",
		"description":"Converts an Integer value to a String value with an optional format.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The Int variable to convert."
			},
			{
				"name":"String Variable",
				"description":"A String variable to store the converted value."
			},
			{
				"name":"Format",
				"description":"Optional Format, allows for leading zeros. E.g., 0000"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Int variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Material To Object",
		"category":"Convert",
		"image":"./images/ConvertMaterialToObject.png",
		"description":"Converts a Material variable to an Object variable. Useful if you want to use Set Property (which only works on Object variables).",
		"params": [
			{
				"name":"Material Variable",
				"description":"The Material variable to convert to an Object."
			},
			{
				"name":"Object Variable",
				"description":"Store the result in an Object variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Material variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Seconds To String",
		"category":"Convert",
		"image":"./images/ConvertSecondsToString.png",
		"description":"Converts Seconds to a String value representing the time.",
		"params": [
			{
				"name":"Seconds Variable",
				"description":"The seconds variable to convert."
			},
			{
				"name":"String Variable",
				"description":"A string variable to store the time value."
			},
			{
				"name":"Format",
				"description":"Format. 0 for days, 1 is for hours, 2 for minutes, 3 for seconds and 4 for milliseconds. 5 for total days, 6 for total hours, 7 for total minutes, 8 for total seconds, 9 for total milliseconds, 10 for two digits milliseconds. so {2:D2} would just show the seconds of the current time, NOT the grand total number of seconds, the grand total of seconds would be {8:F0}"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the seconds variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert String To Int",
		"category":"Convert",
		"image":"./images/ConvertStringToInt.png",
		"description":"Converts an String value to an Int value.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String variable to convert to an integer."
			},
			{
				"name":"Int Variable",
				"description":"Store the result in an Int variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the String variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Convert Vector2 To Vector3",
		"category":"Convert",
		"image":"./images/ConvertVector2ToVector3.png",
		"description":"Store a Vector2 XY components into a Vector3 XY component. The Vector3 z component is also accessible for convenience",
		"params": [
			{
				"name":"Vector 2",
				"description":"The vector2"
			},
			{
				"name":"Vector 3",
				"description":"The vector3"
			},
			{
				"name":"Z Value",
				"description":"The vector3 z value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Vector2 value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Assert",
		"category":"Debug",
		"image":"./images/Assert.png",
		"description":"Checks if the conditional expression Is True or Is False. Stops execution of the game if the assertion fails.\nThis is a useful way to check your assumptions. If you expect a certain value use an Assert to make sure!\nOnly runs in Editor.",
		"params": [
			{
				"name":"Expression",
				"description":"Enter an expression to evaluate.\n\nExamples:\nhealth <= maxHealth\nlives < 100\n\nHint:Use $(for variable names with spaces)"
			},
			{
				"name":"Assert",
				"description":"Expected result of the expression."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
			{"li":"{{Debugging}}"}
		]
	},
	{
		"name":"Comment",
		"category":"Debug",
		"image":"./images/Comment.png",
		"description":"Adds a text area to the action list for notes etc. Use this to document your project.",
		"params": [
			{
				"name":"Comment",
				"description":"Any comment you care to make..."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Bool",
		"category":"Debug",
		"image":"./images/DebugBool.png",
		"description":"Logs the value of a Bool Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Bool Variable",
				"description":"The Bool variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Draw Shape",
		"category":"Debug",
		"image":"./images/DebugDrawShape.png",
		"description":"Draw a debug Gizmo.\nNote: you can enable/disable Gizmos in the Game View toolbar.",
		"params": [
			{
				"name":"Game Object",
				"description":"Draw the Gizmo at a GameObject's position."
			},
			{
				"name":"Shape",
				"description":"The type of Gizmo to draw:\nSphere, Cube, WireSphere, or WireCube."
			},
			{
				"name":"Color",
				"description":"The color to use."
			},
			{
				"name":"Radius",
				"description":"Use this for sphere gizmos"
			},
			{
				"name":"Size",
				"description":"Use this for cube gizmos"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Enum",
		"category":"Debug",
		"image":"./images/DebugEnum.png",
		"description":"Logs the value of an Enum Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Enum Variable",
				"description":"The Enum Variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Float",
		"category":"Debug",
		"image":"./images/DebugFloat.png",
		"description":"Logs the value of a Float Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Float Variable",
				"description":"The Float variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Fsm Variable",
		"category":"Debug",
		"image":"./images/DebugFsmVariable.png",
		"description":"Print the value of any FSM Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Variable",
				"description":"The variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Game Object",
		"category":"Debug",
		"image":"./images/DebugGameObject.png",
		"description":"Logs the value of a Game Object Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Game Object",
				"description":"The GameObject variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Int",
		"category":"Debug",
		"image":"./images/DebugInt.png",
		"description":"Logs the value of an Integer Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Int Variable",
				"description":"The Int variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Log",
		"category":"Debug",
		"image":"./images/DebugLog.png",
		"description":"Sends a log message to the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Text",
				"description":"Text to send to the log."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Object",
		"category":"Debug",
		"image":"./images/DebugObject.png",
		"description":"Logs the value of an Object Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Fsm Object",
				"description":"The Object variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Vector3",
		"category":"Debug",
		"image":"./images/DebugVector3.png",
		"description":"Logs the value of a Vector3 Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Vector 3 Variable",
				"description":"The Vector3 variable to debug."
			},
			{
				"name":"Send To Unity Log",
				"description":"Also send to the Unity Log."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw Debug Line",
		"category":"Debug",
		"image":"./images/DrawDebugLine.png",
		"description":"Draws a line from a Start point to an End point. Specify the points as Game Objects or Vector3 world positions. If both are specified, position is used as a local offset from the Object's position.\n\nNotes:\n- Enable/disable Gizmos in the Game View toolbar.\n- Set how long debug lines are visible for in Preferences > Debugging.",
		"params": [
			{
				"name":"From Object",
				"description":"Draw line from a GameObject."
			},
			{
				"name":"From Position",
				"description":"Draw line from a world position, or local offset from GameObject if provided."
			},
			{
				"name":"To Object",
				"description":"Draw line to a GameObject."
			},
			{
				"name":"To Position",
				"description":"Draw line to a world position, or local offset from GameObject if provided."
			},
			{
				"name":"Color",
				"description":"The color of the line."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw Debug Ray",
		"category":"Debug",
		"image":"./images/DrawDebugRay.png",
		"description":"Draws a line in the Scene View from a Start point in a direction. Specify the start point as Game Objects or Vector3 world positions. If both are specified, position is used as a local offset from the Object's position.\n\nNotes:\n- Enable/disable Gizmos in the Game View toolbar.\n- Set how long debug lines are visible for in Preferences > Debugging.",
		"params": [
			{
				"name":"From Object",
				"description":"Draw ray from a GameObject."
			},
			{
				"name":"From Position",
				"description":"Draw ray from a world position, or local offset from GameObject if provided."
			},
			{
				"name":"Direction",
				"description":"Direction vector of ray in world space."
			},
			{
				"name":"Color",
				"description":"The color of the ray."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw State Label",
		"category":"Debug",
		"image":"./images/DrawStateLabel.png",
		"description":"Draws a state label for this FSM in the Game View. The label is drawn on the game object that owns the FSM. Use this to override the global setting in the PlayMaker Debug menu.",
		"params": [
			{
				"name":"Show Label",
				"description":"Set to True to show State labels, or False to hide them."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Device Orientation Event",
		"category":"Device",
		"image":"./images/DeviceOrientationEvent.png",
		"description":"Sends an Event based on the Orientation of the mobile device.",
		"params": [
			{
				"name":"Orientation",
				"description":"Note: If device is physically situated between discrete positions, as when (for example) rotated diagonally, system will report Unknown orientation."
			},
			{
				"name":"Send Event",
				"description":"The event to send if the device orientation matches Orientation."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you want to wait for the orientation to be true."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Device Play Full Screen Movie",
		"category":"Device",
		"image":"./images/DevicePlayFullScreenMovie.png",
		"description":"Plays a full-screen movie on a handheld device. Please consult the Unity docs for <a href=\"http://docs.unity3d.com/Documentation/ScriptReference/Handheld.PlayFullScreenMovie.html\">Handheld.PlayFullScreenMovie</a> for proper usage.\nNOTE: The action will warn you about platform requirements.",
		"params": [
			{
				"name":"Movie Path",
				"description":"Note that player will stream movie directly from the iPhone disc, therefore you have to provide movie as a separate files and not as an usual asset.\nYou will have to create a folder named StreamingAssets inside your Unity project (inside your Assets folder). Store your movies inside that folder. Unity will automatically copy contents of that folder into the iPhone application bundle."
			},
			{
				"name":"Fade Color",
				"description":"This action will initiate a transition that fades the screen from your current content to the designated background color of the player. When playback finishes, the player uses another fade effect to transition back to your content."
			},
			{
				"name":"Movie Control Mode",
				"description":"Options for displaying movie playback controls. See Unity docs."
			},
			{
				"name":"Movie Scaling Mode",
				"description":"Scaling modes for displaying movies.. See Unity docs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Device Shake Event",
		"category":"Device",
		"image":"./images/DeviceShakeEvent.png",
		"description":"Sends an Event when the mobile device is shaken.",
		"params": [
			{
				"name":"Shake Threshold",
				"description":"Amount of acceleration required to trigger the event. Higher numbers require a harder shake."
			},
			{
				"name":"Send Event",
				"description":"Event to send when Shake Threshold is exceeded."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Device Vibrate",
		"category":"Device",
		"image":"./images/DeviceVibrate.png",
		"description":"Causes the device to vibrate for half a second.\nNOTE: Unity's built in vibrate function is fairly limited. However there are alternatives available on the Asset Store...",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Device Acceleration",
		"category":"Device",
		"image":"./images/GetDeviceAcceleration.png",
		"description":"Gets the last measured linear acceleration of a device and stores it in a Vector3 Variable.",
		"params": [
			{
				"name":"Store Vector",
				"description":"Store the acceleration in a Vector3 Variable."
			},
			{
				"name":"Store X",
				"description":"Store the x component of the acceleration in a Float Variable."
			},
			{
				"name":"Store Y",
				"description":"Store the y component of the acceleration in a Float Variable."
			},
			{
				"name":"Store Z",
				"description":"Store the z component of the acceleration in a Float Variable."
			},
			{
				"name":"Multiplier",
				"description":"Multiply the acceleration by a float value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Device Roll",
		"category":"Device",
		"image":"./images/GetDeviceRoll.png",
		"description":"Gets the rotation of the device around its z axis (into the screen). For example when you steer with the iPhone in a driving game.",
		"params": [
			{
				"name":"Base Orientation",
				"description":"How the user is expected to hold the device (where angle will be zero)."
			},
			{
				"name":"Store Angle",
				"description":"Store the roll angle in a Float Variable."
			},
			{
				"name":"Limit Angle",
				"description":"Limit the roll angle."
			},
			{
				"name":"Smoothing",
				"description":"Smooth the roll angle as it changes. You can play with this value to balance responsiveness and lag/smoothness."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get iPhone Settings",
		"category":"Device",
		"image":"./images/GetIPhoneSettings.png",
		"description":"Get various iPhone settings.",
		"params": [
			{
				"name":"Get Screen Can Darken",
				"description":"Allows device to fall into 'sleep' state with screen being dim if no touches occurred. Default value is true."
			},
			{
				"name":"Get Unique Identifier",
				"description":"A unique device identifier string. It is guaranteed to be unique for every device (Read Only)."
			},
			{
				"name":"Get Name",
				"description":"The user defined name of the device (Read Only)."
			},
			{
				"name":"Get Model",
				"description":"The model of the device (Read Only)."
			},
			{
				"name":"Get System Name",
				"description":"The name of the operating system running on the device (Read Only)."
			},
			{
				"name":"Get Generation",
				"description":"The generation of the device (Read Only)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Location Info",
		"category":"Device",
		"image":"./images/GetLocationInfo.png",
		"description":"Gets Location Info from a mobile device. NOTE: Use StartLocationService before trying to get location info.",
		"params": [
			{
				"name":"Vector Position",
				"description":"Store the location in a Vector3 Variable."
			},
			{
				"name":"Longitude",
				"description":"Store the Longitude in a Float Variable."
			},
			{
				"name":"Latitude",
				"description":"Store the Latitude in a Float Variable."
			},
			{
				"name":"Altitude",
				"description":"Store the Altitude in a Float Variable."
			},
			{
				"name":"Horizontal Accuracy",
				"description":"Store the horizontal accuracy of the location."
			},
			{
				"name":"Vertical Accuracy",
				"description":"Store the vertical accuracy of the location."
			},
			{
				"name":"Error Event",
				"description":"Event to send if the location cannot be queried."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Touch Count",
		"category":"Device",
		"image":"./images/GetTouchCount.png",
		"description":"Gets the number of Touches.",
		"params": [
			{
				"name":"Store Count",
				"description":"Store the current number of touches in an Int Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Touch Info",
		"category":"Device",
		"image":"./images/GetTouchInfo.png",
		"description":"Gets info on a touch event.",
		"params": [
			{
				"name":"Finger Id",
				"description":"Filter by a Finger ID. You can store a Finger ID in other Touch actions, e.g., Touch Event."
			},
			{
				"name":"Normalize",
				"description":"If true, all screen coordinates are returned normalized (0-1), otherwise in pixels."
			},
			{
				"name":"Store Position",
				"description":"Store the position of the touch in a Vector3 Variable."
			},
			{
				"name":"Store X",
				"description":"Store the X position �in a Float Variable."
			},
			{
				"name":"Store Y",
				"description":"Store the Y position �in a Float Variable."
			},
			{
				"name":"Store Delta Position",
				"description":"Store the movement of the touch in a Vector3 Variable."
			},
			{
				"name":"Store Delta X",
				"description":"Store the X movement in a Float Variable."
			},
			{
				"name":"Store Delta Y",
				"description":"Store the Y movement in a Float Variable."
			},
			{
				"name":"Store Delta Time",
				"description":"Store the time between touch events in a Float Variable."
			},
			{
				"name":"Store Tap Count",
				"description":"Store the number of tap count of the touch (e.g. 2 = double tap)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Project Location To Map",
		"category":"Device",
		"image":"./images/ProjectLocationToMap.png",
		"description":"Projects the location found with Get Location Info to a 2d map using common projections.",
		"params": [
			{
				"name":"GPS Location",
				"description":"Location vector in degrees longitude and latitude. Typically returned by the {{Get Location Info}} action."
			},
			{
				"name":"Map Projection",
				"description":"The projection used by the map."
			},
			{
				"name":"Min Longitude",
				"description":"The minimum Longitude shown on the map."
			},
			{
				"name":"Max Longitude",
				"description":"The maximum Longitude show on the map."
			},
			{
				"name":"Min Latitude",
				"description":"The minimum Latitude shown on the map."
			},
			{
				"name":"Max Latitude",
				"description":"The maximum Latitude shown on the map."
			},
			{
				"name":"Min X",
				"description":"The screen coordinate of the left edge of the map image."
			},
			{
				"name":"Min Y",
				"description":"The screen coordinate of the top edge of the map image."
			},
			{
				"name":"Width",
				"description":"The width of the map image in screen coordinates."
			},
			{
				"name":"Height",
				"description":"The height of the map in screen coordinates."
			},
			{
				"name":"Projected X",
				"description":"Store the projected X coordinate in a Float Variable. Use this to display a marker on the map."
			},
			{
				"name":"Projected Y",
				"description":"Store the projected Y coordinate in a Float Variable. Use this to display a marker on the map."
			},
			{
				"name":"Normalized",
				"description":"If true all coordinates in this action are normalized (0-1); otherwise coordinates are in pixels."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Start Location Service Updates",
		"category":"Device",
		"image":"./images/StartLocationServiceUpdates.png",
		"description":"Starts location service updates. Last location coordinates can be retrieved with {{GetLocationInfo}}.",
		"params": [
			{
				"name":"Max Wait",
				"description":"Maximum time to wait in seconds before failing."
			},
			{
				"name":"Desired Accuracy",
				"description":"The desired accuracy in meters."
			},
			{
				"name":"Update Distance",
				"description":"Distance between updates in meters."
			},
			{
				"name":"Success Event",
				"description":"Event to send when the location services have started."
			},
			{
				"name":"Failed Event",
				"description":"Event to send if the location services fail to start."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Stop Location Service Updates",
		"category":"Device",
		"image":"./images/StopLocationServiceUpdates.png",
		"description":"Stops location service updates. This could be useful for saving battery life.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Swipe Gesture Event",
		"category":"Device",
		"image":"./images/SwipeGestureEvent.png",
		"description":"Sends an event when a swipe is detected.",
		"params": [
			{
				"name":"Min Swipe Distance",
				"description":"How far a touch has to travel to be considered a swipe. Uses normalized distance (e.g. 1 = 1 screen diagonal distance). Should generally be a very small number."
			},
			{
				"name":"Swipe Left Event",
				"description":"Event to send when swipe left detected."
			},
			{
				"name":"Swipe Right Event",
				"description":"Event to send when swipe right detected."
			},
			{
				"name":"Swipe Up Event",
				"description":"Event to send when swipe up detected."
			},
			{
				"name":"Swipe Down Event",
				"description":"Event to send when swipe down detected."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch Event",
		"category":"Device",
		"image":"./images/TouchEvent.png",
		"description":"Sends events based on Touch Phases. Optionally filter by a fingerID.",
		"params": [
			{
				"name":"Finger Id",
				"description":"An optional Finger Id to filter by. For example, if you detected a Touch Began and stored the FingerId, you could look for the Ended event for that Finger Id."
			},
			{
				"name":"Touch Phase",
				"description":"The phase you're interested in detecting (Began, Moved, Stationary, Ended, Cancelled)."
			},
			{
				"name":"Send Event",
				"description":"The event to send when the Touch Phase is detected."
			},
			{
				"name":"Store Finger Id",
				"description":"Store the Finger Id associated with the touch event for later use."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch GUI Event",
		"category":"Device",
		"image":"./images/TouchGUIEvent.png",
		"description":"Sends events when a GUI Texture or GUI Text is touched. Optionally filter by a fingerID.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object that owns the GUI Texture or GUI Text."
			},
			{
				"name":"Finger Id",
				"description":"Only detect touches that match this fingerID, or set to None."
			},
			{
				"name":"Touch Began",
				"description":"Event to send on touch began."
			},
			{
				"name":"Touch Moved",
				"description":"Event to send on touch moved."
			},
			{
				"name":"Touch Stationary",
				"description":"Event to send on stationary touch."
			},
			{
				"name":"Touch Ended",
				"description":"Event to send on touch ended."
			},
			{
				"name":"Touch Canceled",
				"description":"Event to send on touch cancel."
			},
			{
				"name":"Not Touching",
				"description":"Event to send if not touching (finger down but not over the GUI element)"
			},
			{
				"name":"Store Finger Id",
				"description":"Store the fingerId of the touch."
			},
			{
				"name":"Store Hit Point",
				"description":"Store the screen position where the GUI element was touched."
			},
			{
				"name":"Normalize Hit Point",
				"description":"Normalize the hit point screen coordinates (0-1)."
			},
			{
				"name":"Store Offset",
				"description":"Store the offset position of the hit."
			},
			{
				"name":"Relative To",
				"description":"How to measure the offset."
			},
			{
				"name":"Normalize Offset",
				"description":"Normalize the offset."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch Object Event",
		"category":"Device",
		"image":"./images/TouchObjectEvent.png",
		"description":"Sends events when an object is touched. Optionally filter by a fingerID. NOTE: Uses the MainCamera!",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to detect touches on."
			},
			{
				"name":"Pick Distance",
				"description":"How far from the camera is the Game Object pickable."
			},
			{
				"name":"Finger Id",
				"description":"Only detect touches that match this fingerID, or set to None."
			},
			{
				"name":"Touch Began",
				"description":"Event to send on touch began."
			},
			{
				"name":"Touch Moved",
				"description":"Event to send on touch moved."
			},
			{
				"name":"Touch Stationary",
				"description":"Event to send on stationary touch."
			},
			{
				"name":"Touch Ended",
				"description":"Event to send on touch ended."
			},
			{
				"name":"Touch Canceled",
				"description":"Event to send on touch cancel."
			},
			{
				"name":"Store Finger Id",
				"description":"Store the fingerId of the touch."
			},
			{
				"name":"Store Hit Point",
				"description":"Store the world position where the object was touched."
			},
			{
				"name":"Store Hit Normal",
				"description":"Store the surface normal vector where the object was touched. \nNote, this is a direction vector not a rotation. Use Look At Direction to rotate a GameObject to this direction."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Blink",
		"category":"Effects",
		"image":"./images/Blink.png",
		"description":"Turns a Game Object on/off in a regular repeating pattern.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to blink on/off."
			},
			{
				"name":"Time Off",
				"description":"Time to stay off in seconds."
			},
			{
				"name":"Time On",
				"description":"Time to stay on in seconds."
			},
			{
				"name":"Start On",
				"description":"Start in the on state."
			},
			{
				"name":"Renderer Only",
				"description":"Only effect the renderer, keeping other components active."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Flicker",
		"category":"Effects",
		"image":"./images/Flicker.png",
		"description":"Randomly flickers a Game Object on/off.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to flicker."
			},
			{
				"name":"Frequency",
				"description":"The frequency of the flicker in seconds."
			},
			{
				"name":"Amount On",
				"description":"Amount of time flicker is On (0-1). E.g. Use 0.95 for an occasional flicker."
			},
			{
				"name":"Renderer Only",
				"description":"Only effect the renderer, leaving other components active."
			},
			{
				"name":"Real Time",
				"description":"Ignore time scale. Useful if flickering UI when the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Particle System Play",
		"category":"Effects",
		"image":"./images/ParticleSystemPlay.png",
		"description":"Plays a ParticleSystem. Optionally destroy the GameObject when the ParticleSystem is finished.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the ParticleSystem."
			},
			{
				"name":"With Children",
				"description":"Play ParticleSystems on all child GameObjects too."
			},
			{
				"name":"Cache Children",
				"description":"''With Children'' can be quite expensive since it has to find Particle Systems in all children. If the hierarchy doesn't change, use Cache Children to speed this up."
			},
			{
				"name":"Stop On Exit",
				"description":"Stop playing when state exits"
			},
			{
				"name":"Destroy On Finish",
				"description":"Destroy the GameObject when the ParticleSystem has finished playing. 'With Children' means all child particle systems also need to finish."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Enum Value",
		"category":"Enum",
		"image":"./images/SetEnumValue.png",
		"description":"Sets the value of an Enum Variable.",
		"params": [
			{
				"name":"Enum Variable",
				"description":"The Enum Variable to set."
			},
			{
				"name":"Enum Value",
				"description":"The Enum value to set the variable to."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Game Object",
		"category":"GameObject",
		"image":"./images/ActivateGameObject.png",
		"description":"Activates/deactivates a Game Object. Use this to hide/show areas, or enable/disable many Behaviours at once.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to activate/deactivate."
			},
			{
				"name":"Activate",
				"description":"Check to activate, uncheck to deactivate Game Object."
			},
			{
				"name":"Recursive",
				"description":"Recursively activate/deactivate all children."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the Game Object's active state when exiting this state. Useful if you want an object to be active only while this state is active.\nNote: Only applies to the last Game Object activated/deactivated (won't work if Game Object changes)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat this action every frame. Useful if using a variable for Activate that can change over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Activate Solo",
		"category":"GameObject",
		"image":"./images/ActivateSolo.png",
		"description":"Activates a GameObject and de-activates other GameObjects at the same level of the hierarchy. E.g, a single UI Screen, a single accessory etc. This action is very helpful if you often organize GameObject hierarchies in this way. \nNOTE: The targeted GameObject should have a parent. This action will not work on GameObjects at the scene root.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to activate."
			},
			{
				"name":"Allow Reactivate",
				"description":"Re-activate if already active. This means deactivating the target GameObject then activating it again. This will reset FSMs on that GameObject."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Component",
		"category":"GameObject",
		"image":"./images/AddComponent.png",
		"description":"Adds a Component to a Game Object. Use this to change the behaviour of objects on the fly. Optionally remove the Component on exiting the state.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to add the Component to."
			},
			{
				"name":"Component",
				"description":"The type of Component to add to the Game Object."
			},
			{
				"name":"Store Component",
				"description":"Store the component in an Object variable. E.g., to use with Set Property."
			},
			{
				"name":"Remove On Exit",
				"description":"Remove the Component when this State is exited."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Empty Object",
		"category":"GameObject",
		"image":"./images/CreateEmptyObject.png",
		"description":"Creates a Game Object at a spawn point.\nUse a Game Object and/or Position/Rotation for the Spawn Point. If you specify a Game Object, Position is used as a local offset, and Rotation will override the object's rotation.",
		"params": [
			{
				"name":"Game Object",
				"description":"Optional GameObject to create. Usually a Prefab."
			},
			{
				"name":"Spawn Point",
				"description":"Optional Spawn Point."
			},
			{
				"name":"Position",
				"description":"Position. If a Spawn Point is defined, this is used as a local offset from the Spawn Point position."
			},
			{
				"name":"Rotation",
				"description":"Rotation. NOTE: Overrides the rotation of the Spawn Point."
			},
			{
				"name":"Store Object",
				"description":"Optionally store the created object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create New Game Object",
		"category":"GameObject",
		"image":"./images/CreateNewGameObject.png",
		"description":"Creates a new GameObject.\nUse a GameObject and/or Position/Rotation for the Spawn Point. If you specify a Game Object, Position is used as a local offset, and Rotation will override the object's rotation.",
		"params": [
			{
				"name":"Name",
				"description":"Name of the new GameObject"
			},
			{
				"name":"Parent",
				"description":"Optional Parent."
			},
			{
				"name":"Spawn Point",
				"description":"Optional Spawn Point."
			},
			{
				"name":"Position",
				"description":"Position. If a Spawn Point is defined, this is used as a local offset from the Spawn Point position."
			},
			{
				"name":"Rotation",
				"description":"Rotation. NOTE: Overrides the rotation of the Spawn Point."
			},
			{
				"name":"Store Object",
				"description":"Optionally store the created object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Object",
		"category":"GameObject",
		"image":"./images/CreateObject.png",
		"description":"Creates a Game Object, usually using a Prefab.",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to create. Usually a Prefab."
			},
			{
				"name":"Parent",
				"description":"Optional Parent."
			},
			{
				"name":"Spawn Point",
				"description":"Optional Spawn Point."
			},
			{
				"name":"Position",
				"description":"Position. If a Spawn Point is defined, this is used as a local offset from the Spawn Point position."
			},
			{
				"name":"Rotation",
				"description":"Rotation. NOTE: Overrides the rotation of the Spawn Point."
			},
			{
				"name":"Store Object",
				"description":"Optionally store the created object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Deactivate Self",
		"category":"GameObject",
		"image":"./images/DeactivateSelf.png",
		"description":"Deactivate the GameObject that owns the FSM.",
		"params": [
			{
				"name":"Delay",
				"description":"Seconds to wait before deactivating. Can be useful to let other actions finish first. E.g. a fade-out effect.\nNOTE: If you use a delay and the FSM switches away from this state before it is finished, the GameObject will not be deactivated."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Component",
		"category":"GameObject",
		"image":"./images/DestroyComponent.png",
		"description":"Destroys a Component of an Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Component."
			},
			{
				"name":"Component",
				"description":"The name of the Component to destroy."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Object",
		"category":"GameObject",
		"image":"./images/DestroyObject.png",
		"description":"Destroys a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to destroy."
			},
			{
				"name":"Delay",
				"description":"Optional delay before destroying the Game Object."
			},
			{
				"name":"Detach Children",
				"description":"Detach children before destroying the Game Object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Objects",
		"category":"GameObject",
		"image":"./images/DestroyObjects.png",
		"description":"Destroys GameObjects in an array.",
		"params": [
			{
				"name":"Game Objects",
				"description":"The GameObjects to destroy."
			},
			{
				"name":"Delay",
				"description":"Optional delay before destroying the Game Objects."
			},
			{
				"name":"Detach Children",
				"description":"Detach children before destroying the Game Objects."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Destroy Self",
		"category":"GameObject",
		"image":"./images/DestroySelf.png",
		"description":"Destroys the Owner of the FSM! Useful for spawned Prefabs that need to kill themselves, e.g., a projectile that explodes on impact.",
		"params": [
			{
				"name":"Delay",
				"description":"Seconds to wait before destroying the owner. Can be useful to let other actions finish first. E.g. a fade-out effect.\nNOTE: If you use a delay and the FSM switches away from this state before it is finished, the owner will not be destroyed!"
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Detach Children",
				"description":"Detach children before destroying the Owner. This allows children to survive, useful to allow FX to fade out etc."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Detach Children",
		"category":"GameObject",
		"image":"./images/DetachChildren.png",
		"description":"Unparents all children from the Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to unparent children from."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Child",
		"category":"GameObject",
		"image":"./images/FindChild.png",
		"description":"Finds the Child of a GameObject by Name.\nNote, you can specify a path to the child, e.g., LeftShoulder/Arm/Hand/Finger. If you need to specify a tag, use {{GetChild}}.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to search."
			},
			{
				"name":"Child Name",
				"description":"The name of the child. Note, you can specify a path to the child, e.g., LeftShoulder/Arm/Hand/Finger"
			},
			{
				"name":"Store Result",
				"description":"Store the child in a GameObject variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Closest",
		"category":"GameObject",
		"image":"./images/FindClosest.png",
		"description":"Finds the closest object to the specified Game Object.\nOptionally filter by Tag and Visibility.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to measure from."
			},
			{
				"name":"With Tag",
				"description":"Only consider objects with this Tag. NOTE: It's generally a lot quicker to find objects with a Tag!"
			},
			{
				"name":"Ignore Owner",
				"description":"If checked, ignores the object that owns this FSM."
			},
			{
				"name":"Must Be Visible",
				"description":"Only consider objects visible to the camera."
			},
			{
				"name":"Store Object",
				"description":"Store the closest object."
			},
			{
				"name":"Store Distance",
				"description":"Store the distance to the closest object."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Game Object",
		"category":"GameObject",
		"image":"./images/FindGameObject.png",
		"description":"Finds a Game Object by Name and/or Tag.",
		"params": [
			{
				"name":"Object Name",
				"description":"The name of the GameObject to find. You can leave this empty if you specify a Tag."
			},
			{
				"name":"With Tag",
				"description":"Find a GameObject with this tag. If Object Name is specified then both name and Tag must match."
			},
			{
				"name":"Store",
				"description":"Store the result in a GameObject variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Child",
		"category":"GameObject",
		"image":"./images/GetChild.png",
		"description":"Finds the Child of a GameObject by Name and/or Tag. Use this to find attach points etc. NOTE: This action will search recursively through all children and return the first match; To find a specific child use Find Child.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to search."
			},
			{
				"name":"Child Name",
				"description":"The name of the child to search for."
			},
			{
				"name":"With Tag",
				"description":"The Tag to search for. If Child Name is set, both name and Tag need to match."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a GameObject variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Child Count",
		"category":"GameObject",
		"image":"./images/GetChildCount.png",
		"description":"Gets the number of children that a GameObject has.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"Store Result",
				"description":"Store the number of children in an int variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're waiting for a specific count."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Child Num",
		"category":"GameObject",
		"image":"./images/GetChildNum.png",
		"description":"Gets the Child of a GameObject by Index.\nE.g., O to get the first child. HINT: Use this with an integer variable to iterate through children.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to search."
			},
			{
				"name":"Child Index",
				"description":"The index of the child to find (0 = first child)."
			},
			{
				"name":"Store",
				"description":"Store the child in a GameObject variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Distance",
		"category":"GameObject",
		"image":"./images/GetDistance.png",
		"description":"Measures the Distance betweens 2 Game Objects and stores the result in a Float Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"Measure distance from this GameObject."
			},
			{
				"name":"Target",
				"description":"Target GameObject."
			},
			{
				"name":"Store Result",
				"description":"Store the distance in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Distance XYZ",
		"category":"GameObject",
		"image":"./images/GetDistanceXYZ.png",
		"description":"Measures the Distance between a GameObject and a target GameObject/Position. If both GameObject and Position are defined, position is taken a local offset from the GameObject's position.",
		"params": [
			{
				"name":"Game Object",
				"description":"Measure distance from this GameObject."
			},
			{
				"name":"Target",
				"description":"Measure distance to this GameObject (or set world position below)."
			},
			{
				"name":"Position",
				"description":"World position or local offset from target GameObject, if defined."
			},
			{
				"name":"Store Distance",
				"description":"Store the distance in a float variable."
			},
			{
				"name":"Space",
				"description":"Space used to measure the distance in. E.g. along the world X axis or the GameObject's local X axis."
			},
			{
				"name":"Store X Distance",
				"description":"Store the distance along the X axis."
			},
			{
				"name":"Store Y Distance",
				"description":"Store the distance along the Y axis."
			},
			{
				"name":"Store Z Distance",
				"description":"Store the distance along the Z axis."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Layer",
		"category":"GameObject",
		"image":"./images/GetLayer.png",
		"description":"Gets a Game Object's Layer and stores it in an Int Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to examine."
			},
			{
				"name":"Store Result",
				"description":"Store the Layer in an Int Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Name",
		"category":"GameObject",
		"image":"./images/GetName.png",
		"description":"Gets the name of a Game Object and stores it in a String Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object target."
			},
			{
				"name":"Store Name",
				"description":"Store the Game Object name in a String Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Child",
		"category":"GameObject",
		"image":"./images/GetNextChild.png",
		"description":"Each time this action is called it gets the next child of a GameObject. This lets you quickly loop through all the children of an object to perform actions on them. NOTE: To find a specific child use Find Child.",
		"params": [
			{
				"name":"Game Object",
				"description":"The parent GameObject. Note, if GameObject changes, this action will reset and start again at the first child."
			},
			{
				"name":"Store Next Child",
				"description":"Store the next child in a GameObject variable."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next child."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more children."
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Owner",
		"category":"GameObject",
		"image":"./images/GetOwner.png",
		"description":"Gets the Game Object that owns the FSM and stores it in a Game Object variable.",
		"params": [
			{
				"name":"Store Game Object",
				"description":"Store the Owner in a Game Object variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Parent",
		"category":"GameObject",
		"image":"./images/GetParent.png",
		"description":"Gets the Parent of a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to find the parent of."
			},
			{
				"name":"Store Result",
				"description":"Store the parent object (or null if no parent) in a variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Random Child",
		"category":"GameObject",
		"image":"./images/GetRandomChild.png",
		"description":"Gets a Random Child of a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The parent Game Object."
			},
			{
				"name":"Store Result",
				"description":"Store the random child in a Game Object Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Random Object",
		"category":"GameObject",
		"image":"./images/GetRandomObject.png",
		"description":"Gets a Random Game Object from the scene.\nOptionally filter by Tag.",
		"params": [
			{
				"name":"With Tag",
				"description":"Only select from Game Objects with this Tag."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a GameObject Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Root",
		"category":"GameObject",
		"image":"./images/GetRoot.png",
		"description":"Gets the top most parent of the Game Object.\nIf the game object has no parent, returns itself.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object."
			},
			{
				"name":"Store Root",
				"description":"Store the root of the Game Object in a Game Object Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Tag",
		"category":"GameObject",
		"image":"./images/GetTag.png",
		"description":"Gets a Game Object's Tag and stores it in a String Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object."
			},
			{
				"name":"Store Result",
				"description":"Store the Tag in a String Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Tag Count",
		"category":"GameObject",
		"image":"./images/GetTagCount.png",
		"description":"Gets the number of Game Objects in the scene with the specified Tag.",
		"params": [
			{
				"name":"Tag",
				"description":"The Tag to search for."
			},
			{
				"name":"Store Result",
				"description":"Store the number found in an int variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Transform",
		"category":"GameObject",
		"image":"./images/GetTransform.png",
		"description":"Gets a Game Object's Transform and stores it in an Object Variable.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object."
			},
			{
				"name":"Store Transform",
				"description":"Store the GameObject's Transform in an Object variable of type UnityEngine.Transform."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Has Component",
		"category":"GameObject",
		"image":"./images/HasComponent.png",
		"description":"Checks if an Object has a Component. Optionally remove the Component on exiting the state.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to check."
			},
			{
				"name":"Component",
				"description":"The name of the component to check for."
			},
			{
				"name":"Remove On Exit",
				"description":"Remove the component on exiting the state."
			},
			{
				"name":"True Event",
				"description":"Event to send if the Game Object has the component."
			},
			{
				"name":"False Event",
				"description":"Event to send if the Game Object does not have the component."
			},
			{
				"name":"Store",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random Game Object",
		"category":"GameObject",
		"image":"./images/SelectRandomGameObject.png",
		"description":"Selects a Random Game Object from an array of Game Objects.",
		"params": [
			{
				"name":"Game Objects",
				"description":"A possible GameObject choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this GameObject being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Store Game Object",
				"description":"Store the selected GameObject in a GameObject Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Game Object",
		"category":"GameObject",
		"image":"./images/SetGameObject.png",
		"description":"Sets the value of a Game Object Variable.",
		"params": [
			{
				"name":"Variable",
				"description":"The GameObject Variable to set."
			},
			{
				"name":"Game Object",
				"description":"Set the variable value. NOTE: leave empty to set to null."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Layer",
		"category":"GameObject",
		"image":"./images/SetLayer.png",
		"description":"Sets a Game Object's Layer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to set."
			},
			{
				"name":"Layer",
				"description":"The new layer."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Name",
		"category":"GameObject",
		"image":"./images/SetName.png",
		"description":"Sets a Game Object's Name.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to name."
			},
			{
				"name":"Name",
				"description":"The new name."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Parent",
		"category":"GameObject",
		"image":"./images/SetParent.png",
		"description":"Sets the Parent of a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to parent."
			},
			{
				"name":"Parent",
				"description":"The new parent for the Game Object. Leave empty or None to un-parent the Game Object."
			},
			{
				"name":"World Position Stays",
				"description":"If true, the parent-relative position, scale and rotation are modified such that the object keeps the same world space position, rotation and scale as before. Hint: Setting to False can fix common UI scaling issues."
			},
			{
				"name":"Reset Local Position",
				"description":"Set the local position to 0,0,0 after parenting."
			},
			{
				"name":"Reset Local Rotation",
				"description":"Set the local rotation to 0,0,0 after parenting."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Tag",
		"category":"GameObject",
		"image":"./images/SetTag.png",
		"description":"Sets a Game Object's Tag.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to set."
			},
			{
				"name":"Tag",
				"description":"The tag. Note: Use Unity's <a href=\"http://unity3d.com/support/documentation/Components/class-TagManager.html\">Tag Manager</a> to add/edit tags."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Tags On Children",
		"category":"GameObject",
		"image":"./images/SetTagsOnChildren.png",
		"description":"Set the Tag on all children of a GameObject. Optionally filter by component.",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject Parent"
			},
			{
				"name":"Tag",
				"description":"Set Tag To..."
			},
			{
				"name":"Filter By Component",
				"description":"Only set the Tag on children with this component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw Fullscreen Color",
		"category":"GUI",
		"image":"./images/DrawFullscreenColor.png",
		"description":"Fills the screen with a Color. NOTE: Uses OnGUI so you need a PlayMakerGUI component in the scene.",
		"params": [
			{
				"name":"Color",
				"description":"Color. NOTE: Uses OnGUI so you need a PlayMakerGUI component in the scene."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Draw Texture",
		"category":"GUI",
		"image":"./images/DrawTexture.png",
		"description":"Draws a GUI Texture. NOTE: Uses OnGUI so you need a PlayMakerGUI component in the scene. See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUI.DrawTexture.html\">DrawTexture</a>.",
		"params": [
			{
				"name":"Texture",
				"description":"Texture to draw."
			},
			{
				"name":"Screen Rect",
				"description":"Rectangle on the screen to draw the texture within. Alternatively, set or override individual properties below."
			},
			{
				"name":"Left",
				"description":"Left screen coordinate."
			},
			{
				"name":"Top",
				"description":"Top screen coordinate."
			},
			{
				"name":"Width",
				"description":"Width of texture on screen."
			},
			{
				"name":"Height",
				"description":"Height of texture on screen."
			},
			{
				"name":"Scale Mode",
				"description":"How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within."
			},
			{
				"name":"Alpha Blend",
				"description":"Whether to alpha blend the image on to the display (the default). If false, the picture is drawn on to the display."
			},
			{
				"name":"Image Aspect",
				"description":"Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used. Pass in w/h for the desired aspect ratio. This allows the aspect ratio of the source image to be adjusted without changing the pixel width and height."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable GUI",
		"category":"GUI",
		"image":"./images/EnableGUI.png",
		"description":"Enables/Disables the PlayMakerGUI component in the scene. Note, you need a PlayMakerGUI component in the scene to see OnGUI actions. However, OnGUI can be very expensive on mobile devices. This action lets you turn OnGUI on/off (e.g., turn it on for a menu, and off during gameplay).",
		"params": [
			{
				"name":"Enable GUI",
				"description":"Set to True to enable, False to disable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Box",
		"category":"GUI",
		"image":"./images/GUIBox.png",
		"description":"GUI Box.",
		"params": [
			{
				"name":"Image",
				"description":"Optional image to display."
			},
			{
				"name":"Text",
				"description":"Optional text to display."
			},
			{
				"name":"Tooltip",
				"description":"Optional tooltip. Accessed by {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Screen Rect",
				"description":"Screen rectangle."
			},
			{
				"name":"Left",
				"description":"Left coordinate of screen rectangle."
			},
			{
				"name":"Top",
				"description":"Top coordinate of screen rectangle."
			},
			{
				"name":"Width",
				"description":"Width of screen rectangle."
			},
			{
				"name":"Height",
				"description":"Height of screen rectangle."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Button",
		"category":"GUI",
		"image":"./images/GUIButton.png",
		"description":"GUI button. Sends an Event when pressed. Optionally store the button state in a Bool Variable.",
		"params": [
			{
				"name":"Send Event",
				"description":"The Event to send when the button is pressed."
			},
			{
				"name":"Store Button State",
				"description":"Store the button state in a bool variable."
			},
			{
				"name":"Image",
				"description":"Optional image to display."
			},
			{
				"name":"Text",
				"description":"Optional text to display."
			},
			{
				"name":"Tooltip",
				"description":"Optional tooltip. Accessed by {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Screen Rect",
				"description":"Screen rectangle."
			},
			{
				"name":"Left",
				"description":"Left coordinate of screen rectangle."
			},
			{
				"name":"Top",
				"description":"Top coordinate of screen rectangle."
			},
			{
				"name":"Width",
				"description":"Width of screen rectangle."
			},
			{
				"name":"Height",
				"description":"Height of screen rectangle."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Element Hit Test",
		"category":"GUIElement",
		"image":"./images/GUIElementHitTest.png",
		"description":"Performs a Hit Test on a Game Object with a GUITexture or GUIText component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that has a GUITexture or GUIText component."
			},
			{
				"name":"Camera",
				"description":"Specify camera or use MainCamera as default."
			},
			{
				"name":"Screen Point",
				"description":"A vector position on screen. Usually stored by actions like GetTouchInfo, or World To Screen Point."
			},
			{
				"name":"Screen X",
				"description":"Specify screen X coordinate."
			},
			{
				"name":"Screen Y",
				"description":"Specify screen Y coordinate."
			},
			{
				"name":"Normalized",
				"description":"Whether the specified screen coordinates are normalized (0-1)."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the Hit Test is true."
			},
			{
				"name":"Store Result",
				"description":"Store the result of the Hit Test in a bool variable (true/false)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you want to wait for the hit test to return true."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Horizontal Slider",
		"category":"GUI",
		"image":"./images/GUIHorizontalSlider.png",
		"description":"GUI Horizontal Slider connected to a Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to link the slider to. Moving the slider changes the value, and changes in the value move the slider."
			},
			{
				"name":"Left Value",
				"description":"The value of the float variable when slider is all the way to the left."
			},
			{
				"name":"Right Value",
				"description":"The value of the float variable when slider is all the way to the right."
			},
			{
				"name":"Slider Style",
				"description":"Optional GUIStyle for the slider track."
			},
			{
				"name":"Thumb Style",
				"description":"Optional GUIStyle for the slider thumb."
			},
			{
				"name":"Screen Rect",
				"description":"Screen rectangle."
			},
			{
				"name":"Left",
				"description":"Left coordinate of screen rectangle."
			},
			{
				"name":"Top",
				"description":"Top coordinate of screen rectangle."
			},
			{
				"name":"Width",
				"description":"Width of screen rectangle."
			},
			{
				"name":"Height",
				"description":"Height of screen rectangle."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Label",
		"category":"GUI",
		"image":"./images/GUILabel.png",
		"description":"GUI Label.",
		"params": [
			{
				"name":"Image",
				"description":"Optional image to display."
			},
			{
				"name":"Text",
				"description":"Optional text to display."
			},
			{
				"name":"Tooltip",
				"description":"Optional tooltip. Accessed by {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Screen Rect",
				"description":"Screen rectangle."
			},
			{
				"name":"Left",
				"description":"Left coordinate of screen rectangle."
			},
			{
				"name":"Top",
				"description":"Top coordinate of screen rectangle."
			},
			{
				"name":"Width",
				"description":"Width of screen rectangle."
			},
			{
				"name":"Height",
				"description":"Height of screen rectangle."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Tooltip",
		"category":"GUI",
		"image":"./images/GUITooltip.png",
		"description":"Gets the Tooltip of the control the mouse is currently over and store it in a String Variable.",
		"params": [
			{
				"name":"Store Tooltip",
				"description":"Store the tooltip in a string variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Vertical Slider",
		"category":"GUI",
		"image":"./images/GUIVerticalSlider.png",
		"description":"GUI Vertical Slider connected to a Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float Variable linked to the slider value."
			},
			{
				"name":"Top Value",
				"description":"The value of the variable at the top of the slider."
			},
			{
				"name":"Bottom Value",
				"description":"The value of the variable at the bottom of the slider."
			},
			{
				"name":"Slider Style",
				"description":"Optional GUIStyle for the slider track."
			},
			{
				"name":"Thumb Style",
				"description":"Optional GUIStyle for the slider thumb."
			},
			{
				"name":"Screen Rect",
				"description":"Screen rectangle."
			},
			{
				"name":"Left",
				"description":"Left coordinate of screen rectangle."
			},
			{
				"name":"Top",
				"description":"Top coordinate of screen rectangle."
			},
			{
				"name":"Width",
				"description":"Width of screen rectangle."
			},
			{
				"name":"Height",
				"description":"Height of screen rectangle."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Reset GUI Matrix",
		"category":"GUI",
		"image":"./images/ResetGUIMatrix.png",
		"description":"Resets the GUI matrix. Useful if you've rotated or scaled the GUI and now want to reset it.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rotate GUI",
		"category":"GUI",
		"image":"./images/RotateGUI.png",
		"description":"Rotates the GUI around a pivot point. By default only effects GUI rendered by this FSM, check Apply Globally to effect all GUI controls.",
		"params": [
			{
				"name":"Angle",
				"description":"Angle to rotate in degrees."
			},
			{
				"name":"Pivot X",
				"description":"X coordinate of pivot."
			},
			{
				"name":"Pivot Y",
				"description":"Y coordinate of pivot."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			},
			{
				"name":"Apply Globally",
				"description":"Apply to all GUI actions in all FSMs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Scale GUI",
		"category":"GUI",
		"image":"./images/ScaleGUI.png",
		"description":"Scales the GUI around a pivot point. By default only effects GUI rendered by this FSM, check Apply Globally to effect all GUI controls.",
		"params": [
			{
				"name":"Scale X",
				"description":"Scale in x (1 = 100%)"
			},
			{
				"name":"Scale Y",
				"description":"Scale in y (1 = 100%)"
			},
			{
				"name":"Pivot X",
				"description":"Scale around this x screen coordinate."
			},
			{
				"name":"Pivot Y",
				"description":"Scale around this y screen coordinate."
			},
			{
				"name":"Normalized",
				"description":"Pivot point uses normalized coordinates (0-1). E.g. 0.5 is the center of the screen."
			},
			{
				"name":"Apply Globally",
				"description":"Apply to all GUI actions in all FSMs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Alpha",
		"category":"GUI",
		"image":"./images/SetGUIAlpha.png",
		"description":"Sets the global Alpha for the GUI. Useful for fading GUI up/down. By default only effects GUI rendered by this FSM, check Apply Globally to effect all GUI controls.",
		"params": [
			{
				"name":"Alpha",
				"description":"Set the transparency of the GUI. 1 = opaque, 0 = transparent."
			},
			{
				"name":"Apply Globally",
				"description":"Apply this setting to all GUI calls, even in other scripts."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Background Color",
		"category":"GUI",
		"image":"./images/SetGUIBackgroundColor.png",
		"description":"Sets the Tinting Color for all background elements rendered by the GUI. By default only effects GUI rendered by this FSM, check Apply Globally to effect all GUI controls.",
		"params": [
			{
				"name":"Background Color",
				"description":"The color for all background elements."
			},
			{
				"name":"Apply Globally",
				"description":"Apply this setting to all GUI calls, even in other scripts."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Color",
		"category":"GUI",
		"image":"./images/SetGUIColor.png",
		"description":"Sets the Tinting Color for the GUI. By default only effects GUI rendered by this FSM, check Apply Globally to effect all GUI controls.",
		"params": [
			{
				"name":"Color",
				"description":"Tint Color for the GUI."
			},
			{
				"name":"Apply Globally",
				"description":"Apply this setting to all GUI calls, even in other scripts."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Content Color",
		"category":"GUI",
		"image":"./images/SetGUIContentColor.png",
		"description":"Sets the Tinting Color for all text rendered by the GUI. By default only effects GUI rendered by this FSM, check Apply Globally to effect all GUI controls.",
		"params": [
			{
				"name":"Content Color",
				"description":"Tint color for all text rendered by the GUI."
			},
			{
				"name":"Apply Globally",
				"description":"Apply this setting to all GUI calls, even in other scripts."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Depth",
		"category":"GUI",
		"image":"./images/SetGUIDepth.png",
		"description":"Sets the sorting depth of subsequent GUI elements.",
		"params": [
			{
				"name":"Depth",
				"description":"See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUI-depth.html\">GUI.Depth</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Skin",
		"category":"GUI",
		"image":"./images/SetGUISkin.png",
		"description":"Sets the GUISkin used by GUI elements. Skins can be customized in the Unity editor. See unity docs: <a href=\"http://unity3d.com/support/documentation/Components/class-GUISkin.html\">GUISkin</a>.\n",
		"params": [
			{
				"name":"Skin",
				"description":"The skin to use."
			},
			{
				"name":"Apply Globally",
				"description":"Apply this setting to all GUI calls, even in other scripts."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Mouse Cursor",
		"category":"GUI",
		"image":"./images/SetMouseCursor.png",
		"description":"Controls the appearance of Mouse Cursor.",
		"params": [
			{
				"name":"Cursor Texture",
				"description":"The texture to use for the cursor."
			},
			{
				"name":"Hide Cursor",
				"description":"Hide the cursor."
			},
			{
				"name":"Lock Cursor",
				"description":"Lock the cursor to the center of the screen. Useful in first person controllers."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Text",
		"category":"GUIElement",
		"image":"./images/SetGUIText.png",
		"description":"Sets the text used by the <a href=\"http://unity3d.com/support/documentation/Components/class-GuiText.html\">GUI Text</a> component attached to a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object that has the GUIText component."
			},
			{
				"name":"Text",
				"description":"Set the text used by the GUIText component."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the text is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Texture",
		"category":"GUIElement",
		"image":"./images/SetGUITexture.png",
		"description":"Sets the texture used by the <a href=\"http://unity3d.com/support/documentation/Components/class-GuiTexture.html\">GUI Texture</a> attached to a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the GUITexture."
			},
			{
				"name":"Texture",
				"description":"Texture to apply."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Texture Alpha",
		"category":"GUIElement",
		"image":"./images/SetGUITextureAlpha.png",
		"description":"Sets the alpha of the <a href=\"http://unity3d.com/support/documentation/Components/class-GuiTexture.html\">GUI Texture</a> attached to a game object. Useful for fading gui elements in/out.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object that has the GUITexture component."
			},
			{
				"name":"Alpha",
				"description":"The alpha to use. HINT: Use {{Animate Float}} for cool effects!"
			},
			{
				"name":"Every Frame",
				"description":"Update the alpha every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set GUI Texture Color",
		"category":"GUIElement",
		"image":"./images/SetGUITextureColor.png",
		"description":"Sets the color of the <a href=\"http://unity3d.com/support/documentation/Components/class-GuiTexture.html\">GUI Texture</a> attached to a game object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object that has the GUITexture component."
			},
			{
				"name":"Color",
				"description":"The color to use. Useful for tinting textures in different states, e.g., rollover."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Begin Area",
		"category":"GUILayout",
		"image":"./images/GUILayoutBeginArea.png",
		"description":"Begin a GUILayout block of GUI controls in a fixed screen area. NOTE: Block must end with a corresponding GUILayoutEndArea.",
		"params": [
			{
				"name":"Screen Rect",
				"description":"Screen area."
			},
			{
				"name":"Left",
				"description":"Left screen coordinate."
			},
			{
				"name":"Top",
				"description":"Top screen coordinate."
			},
			{
				"name":"Width",
				"description":"Width of area."
			},
			{
				"name":"Height",
				"description":"Height of area."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			},
			{
				"name":"Style",
				"description":"Optional GUIStyle name in current GUISkin."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Begin Area Follow Object",
		"category":"GUILayout",
		"image":"./images/GUILayoutBeginAreaFollowObject.png",
		"description":"Begin a GUILayout area that follows the specified game object. Useful for overlays (e.g., playerName). NOTE: Block must end with a corresponding GUILayoutEndArea.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to follow."
			},
			{
				"name":"Offset Left",
				"description":"Left screen offset."
			},
			{
				"name":"Offset Top",
				"description":"Screen offset up."
			},
			{
				"name":"Width",
				"description":"Width of area."
			},
			{
				"name":"Height",
				"description":"Height of area."
			},
			{
				"name":"Normalized",
				"description":"Use normalized screen coordinates (0-1)."
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Begin Centered",
		"category":"GUILayout",
		"image":"./images/GUILayoutBeginCentered.png",
		"description":"Begin a centered GUILayout block. The block is centered inside a parent {{GUILayout Area}}. So to place the block in the center of the screen, first use a {{GULayout Area}} the size of the whole screen (the default setting). NOTE: Block must end with a corresponding {{GUILayoutEndCentered}}.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Begin Horizontal",
		"category":"GUILayout",
		"image":"./images/GUILayoutBeginHorizontal.png",
		"description":"GUILayout BeginHorizontal.",
		"params": [
			{
				"name":"Image",
				"description":"Texture to display."
			},
			{
				"name":"Text",
				"description":"Text to display."
			},
			{
				"name":"Tooltip",
				"description":"The tooltip associated with this control. See {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Begin Scroll View",
		"category":"GUILayout",
		"image":"./images/GUILayoutBeginScrollView.png",
		"description":"Begins a ScrollView. Use GUILayoutEndScrollView at the end of the block.",
		"params": [
			{
				"name":"Scroll Position",
				"description":"Assign a Vector2 variable to store the scroll position of this view."
			},
			{
				"name":"Horizontal Scrollbar",
				"description":"Always show the horizontal scrollbars."
			},
			{
				"name":"Vertical Scrollbar",
				"description":"Always show the vertical scrollbars."
			},
			{
				"name":"Use Custom Style",
				"description":"Define custom styles below. NOTE: You have to define all the styles if you check this option."
			},
			{
				"name":"Horizontal Style",
				"description":"Named style in the active GUISkin for the horizontal scrollbars."
			},
			{
				"name":"Vertical Style",
				"description":"Named style in the active GUISkin for the vertical scrollbars."
			},
			{
				"name":"Background Style",
				"description":"Named style in the active GUISkin for the background."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Begin Vertical",
		"category":"GUILayout",
		"image":"./images/GUILayoutBeginVertical.png",
		"description":"Begins a vertical control group. The group must be closed with GUILayoutEndVertical action.",
		"params": [
			{
				"name":"Image",
				"description":"The texture to display."
			},
			{
				"name":"Text",
				"description":"The text to display."
			},
			{
				"name":"Tooltip",
				"description":"The tooltip associated with this control. See {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Box",
		"category":"GUILayout",
		"image":"./images/GUILayoutBox.png",
		"description":"GUILayout Box.",
		"params": [
			{
				"name":"Image",
				"description":"Image to display in the Box."
			},
			{
				"name":"Text",
				"description":"Text to display in the Box."
			},
			{
				"name":"Tooltip",
				"description":"The tooltip associated with this control. See {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Button",
		"category":"GUILayout",
		"image":"./images/GUILayoutButton.png",
		"description":"GUILayout Button. Sends an Event when pressed. Optionally stores the button state in a Bool Variable.",
		"params": [
			{
				"name":"Send Event",
				"description":"The Event to send when the button is pressed."
			},
			{
				"name":"Store Button State",
				"description":"Store the button state in a bool variable."
			},
			{
				"name":"Image",
				"description":"Texture to use on the button."
			},
			{
				"name":"Text",
				"description":"Text to display on the button."
			},
			{
				"name":"Tooltip",
				"description":"The tooltip associated with this control. See {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Confirm Password Field",
		"category":"GUILayout",
		"image":"./images/GUILayoutConfirmPasswordField.png",
		"description":"GUILayout Password Field. Optionally send an event if the text has been edited.",
		"params": [
			{
				"name":"Text",
				"description":"The password Text"
			},
			{
				"name":"Max Length",
				"description":"The Maximum Length of the field"
			},
			{
				"name":"Style",
				"description":"The Style of the Field"
			},
			{
				"name":"Changed Event",
				"description":"Event sent when field content changed"
			},
			{
				"name":"Mask",
				"description":"Replacement character to hide the password"
			},
			{
				"name":"Confirm",
				"description":"GUILayout Password Field. Optionally send an event if the text has been edited."
			},
			{
				"name":"Password",
				"description":"Confirmation content"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Email Field",
		"category":"GUILayout",
		"image":"./images/GUILayoutEmailField.png",
		"description":"GUILayout Password Field. Optionally send an event if the text has been edited.",
		"params": [
			{
				"name":"Text",
				"description":"The email Text"
			},
			{
				"name":"Max Length",
				"description":"The Maximum Length of the field"
			},
			{
				"name":"Style",
				"description":"The Style of the Field"
			},
			{
				"name":"Changed Event",
				"description":"Event sent when field content changed"
			},
			{
				"name":"Valid",
				"description":"Email valid format flag"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout End Area",
		"category":"GUILayout",
		"image":"./images/GUILayoutEndArea.png",
		"description":"Close a GUILayout group started with {{GUILayoutBeginArea}}.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout End Centered",
		"category":"GUILayout",
		"image":"./images/GUILayoutEndCentered.png",
		"description":"End a centered GUILayout block started with {{GUILayoutBeginCentered}}.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout End Horizontal",
		"category":"GUILayout",
		"image":"./images/GUILayoutEndHorizontal.png",
		"description":"Close a group started with {{GUILayoutBeginHorizontal}}.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout End Scroll View",
		"category":"GUILayout",
		"image":"./images/GUILayoutEndScrollView.png",
		"description":"Close a group started with {{GUILayoutBeginScrollView}}.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout End Vertical",
		"category":"GUILayout",
		"image":"./images/GUILayoutEndVertical.png",
		"description":"Close a group started with {{GUILayoutBeginVertical}}.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Flexible Space",
		"category":"GUILayout",
		"image":"./images/GUILayoutFlexibleSpace.png",
		"description":"Inserts a flexible space element.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Float Field",
		"category":"GUILayout",
		"image":"./images/GUILayoutFloatField.png",
		"description":"GUILayout Text Field to edit a Float Variable. Optionally send an event if the text has been edited.",
		"params": [
			{
				"name":"Float Variable",
				"description":"Float Variable to show in the edit field."
			},
			{
				"name":"Style",
				"description":"Optional GUIStyle in the active GUISKin."
			},
			{
				"name":"Changed Event",
				"description":"Optional event to send when the value changes."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Float Label",
		"category":"GUILayout",
		"image":"./images/GUILayoutFloatLabel.png",
		"description":"GUILayout Label for a Float Variable.",
		"params": [
			{
				"name":"Prefix",
				"description":"Text to put before the float variable."
			},
			{
				"name":"Float Variable",
				"description":"Float variable to display."
			},
			{
				"name":"Style",
				"description":"Optional GUIStyle in the active GUISKin."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Horizontal Slider",
		"category":"GUILayout",
		"image":"./images/GUILayoutHorizontalSlider.png",
		"description":"A Horizontal Slider linked to a Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to link the slider to. Moving the slider changes the value, and changes in the value move the slider."
			},
			{
				"name":"Left Value",
				"description":"The value of the float variable when slider is all the way to the left."
			},
			{
				"name":"Right Value",
				"description":"The value of the float variable when slider is all the way to the right."
			},
			{
				"name":"Changed Event",
				"description":"An optional fsm event to send when the value changes."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Int Field",
		"category":"GUILayout",
		"image":"./images/GUILayoutIntField.png",
		"description":"GUILayout Text Field to edit an Int Variable. Optionally send an event if the text has been edited.",
		"params": [
			{
				"name":"Int Variable",
				"description":"Int Variable to show in the edit field."
			},
			{
				"name":"Style",
				"description":"Optional GUIStyle in the active GUISKin."
			},
			{
				"name":"Changed Event",
				"description":"Optional event to send when the value changes."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Int Label",
		"category":"GUILayout",
		"image":"./images/GUILayoutIntLabel.png",
		"description":"GUILayout Label for an Int Variable.",
		"params": [
			{
				"name":"Prefix",
				"description":"Text to put before the int variable."
			},
			{
				"name":"Int Variable",
				"description":"Int variable to display."
			},
			{
				"name":"Style",
				"description":"Optional GUIStyle in the active GUISKin."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Label",
		"category":"GUILayout",
		"image":"./images/GUILayoutLabel.png",
		"description":"GUILayout Label.",
		"params": [
			{
				"name":"Image",
				"description":"Texture to display."
			},
			{
				"name":"Text",
				"description":"Text to display."
			},
			{
				"name":"Tooltip",
				"description":"The tooltip associated with this control. See {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Password Field",
		"category":"GUILayout",
		"image":"./images/GUILayoutPasswordField.png",
		"description":"GUILayout Password Field. Optionally send an event if the text has been edited.",
		"params": [
			{
				"name":"Text",
				"description":"The password Text"
			},
			{
				"name":"Max Length",
				"description":"The Maximum Length of the field"
			},
			{
				"name":"Style",
				"description":"The Style of the Field"
			},
			{
				"name":"Changed Event",
				"description":"Event sent when field content changed"
			},
			{
				"name":"Mask",
				"description":"Replacement character to hide the password"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Repeat Button",
		"category":"GUILayout",
		"image":"./images/GUILayoutRepeatButton.png",
		"description":"GUILayout Repeat Button. Sends an Event while pressed. Optionally store the button state in a Bool Variable.",
		"params": [
			{
				"name":"Send Event",
				"description":"The fsm event to send while the button is pressed."
			},
			{
				"name":"Store Button State",
				"description":"Store the button state in a Bool Variable."
			},
			{
				"name":"Image",
				"description":"The texture to display."
			},
			{
				"name":"Text",
				"description":"The text to display."
			},
			{
				"name":"Tooltip",
				"description":"Optional tooltip. Accessed by {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Space",
		"category":"GUILayout",
		"image":"./images/GUILayoutSpace.png",
		"description":"Inserts a space in the current layout group.",
		"params": [
			{
				"name":"Space",
				"description":"Size of space in pixels."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Text Field",
		"category":"GUILayout",
		"image":"./images/GUILayoutTextField.png",
		"description":"GUILayout Text Field. Optionally send an event if the text has been edited.",
		"params": [
			{
				"name":"Text",
				"description":"Link the text field to a String Variable."
			},
			{
				"name":"Max Length",
				"description":"The max number of characters that can be entered."
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Changed Event",
				"description":"An optional Event to send when the text field value changes."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Text Label",
		"category":"GUILayout",
		"image":"./images/GUILayoutTextLabel.png",
		"description":"GUILayout Label for simple text.",
		"params": [
			{
				"name":"Text",
				"description":"Text to display."
			},
			{
				"name":"Style",
				"description":"Optional GUIStyle in the active GUISkin."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Toggle",
		"category":"GUILayout",
		"image":"./images/GUILayoutToggle.png",
		"description":"Makes an on/off Toggle Button and stores the button state in a Bool Variable.",
		"params": [
			{
				"name":"Store Button State",
				"description":"Link the button state to this Bool Variable."
			},
			{
				"name":"Image",
				"description":"Texture to display."
			},
			{
				"name":"Text",
				"description":"Text to display."
			},
			{
				"name":"Tooltip",
				"description":"Optional tooltip. Accessed by {{GUI Tooltip}}"
			},
			{
				"name":"Style",
				"description":"Optional named style in the current GUISkin"
			},
			{
				"name":"Changed Event",
				"description":"Optional Event to send when the toggle changes."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Toolbar",
		"category":"GUILayout",
		"image":"./images/GUILayoutToolbar.png",
		"description":"GUILayout Toolbar. NOTE: Arrays must be the same length as NumButtons or empty.",
		"params": [
			{
				"name":"Num Buttons",
				"description":"The number of buttons in the toolbar"
			},
			{
				"name":"Selected Button",
				"description":"Store the index of the selected button in an Integer Variable"
			},
			{
				"name":"Button Events Array",
				"description":"Event to send when each button is pressed."
			},
			{
				"name":"Images Array",
				"description":"Image to use on each button."
			},
			{
				"name":"Texts Array",
				"description":"Text to use on each button."
			},
			{
				"name":"Tooltips Array",
				"description":"Tooltip to use for each button."
			},
			{
				"name":"Style",
				"description":"A named GUIStyle to use for the toolbar buttons. Default is Button."
			},
			{
				"name":"Every Frame",
				"description":"Update the content of the buttons every frame. Useful if the buttons are using variables that change."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"GUI Layout Vertical Slider",
		"category":"GUILayout",
		"image":"./images/GUILayoutVerticalSlider.png",
		"description":"A Vertical Slider linked to a Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float Variable linked to the slider value."
			},
			{
				"name":"Top Value",
				"description":"The value of the variable at the top of the slider."
			},
			{
				"name":"Bottom Value",
				"description":"The value of the variable at the bottom of the slider."
			},
			{
				"name":"Changed Event",
				"description":"Optional Event to send when the slider value changes."
			},
			{
				"name":"Layout Options",
				"description":"An array of layout options.See <a href=\"http://unity3d.com/support/documentation/ScriptReference/GUILayoutOption.html\" rel=\"nofollow\">GUILayoutOption</a>."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Use GUI Layout",
		"category":"GUILayout",
		"image":"./images/UseGUILayout.png",
		"description":"Turn GUILayout on/off. If you don't use GUILayout actions you can get some performance back by turning GUILayout off. This can make a difference on iOS platforms.",
		"params": [
			{
				"name":"Turn Off GU Ilayout",
				"description":"Enable/disable GUILayout."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Any Key",
		"category":"Input",
		"image":"./images/AnyKey.png",
		"description":"Sends an Event when the user hits any Key or Mouse Button.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the event"
			},
			{
				"name":"Send Event",
				"description":"Event to send when any Key or Mouse Button is pressed."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Axis",
		"category":"Input",
		"image":"./images/GetAxis.png",
		"description":"Gets the value of the specified Input Axis and stores it in a Float Variable. See {{Unity Input Manager}} docs.",
		"params": [
			{
				"name":"Axis Name",
				"description":"The name of the axis. Set in the Unity Input Manager."
			},
			{
				"name":"Multiplier",
				"description":"Normally axis values are in the range -1 to 1. Use the multiplier to make this range bigger. E.g., A multiplier of 100 returns values from -100 to 100."
			},
			{
				"name":"Invert",
				"description":"Invert the value of for the axis. E.g., -1 becomes 1, and 1 becomes -1."
			},
			{
				"name":"Store",
				"description":"Store the result in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Get the axis value every frame. This should be true most of the time, but there might be times when you only want to get the value once."
			}
		]
		,"seeAlso": [
			{"li":"Unity Input Manager"}
		]
	},
	{
		"name":"Get Axis Vector",
		"category":"Input",
		"image":"./images/GetAxisVector.png",
		"description":"Gets a world direction Vector from 2 Input Axis. Typically used for a third person controller with Relative To set to the camera.",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"The name of the horizontal input axis. See Unity Input Manager."
			},
			{
				"name":"Vertical Axis",
				"description":"The name of the vertical input axis. See Unity Input Manager."
			},
			{
				"name":"Multiplier",
				"description":"Normally axis values are in the range -1 to 1. Use the multiplier to make this range bigger. \nE.g., A multiplier of 100 returns values from -100 to 100.\nTypically this represents the maximum movement speed."
			},
			{
				"name":"Map To Plane",
				"description":"Sets the world axis the input maps to. The remaining axis will be set to zero."
			},
			{
				"name":"Relative To",
				"description":"Calculate a vector relative to this game object. Typically the camera."
			},
			{
				"name":"Store Vector",
				"description":"Store the resulting vector. You can use this in {{Translate}} or other movement actions."
			},
			{
				"name":"Store Magnitude",
				"description":"Store the magnitude of the vector. Useful if you want to measure the strength of the input and react accordingly. Hint: Use {{Float Compare}}."
			}
		]
		,"seeAlso": [
			{"li":"Unity Input Manager"}
		]
	},
	{
		"name":"Get Button",
		"category":"Input",
		"image":"./images/GetButton.png",
		"description":"Gets the pressed state of the specified Button and stores it in a Bool Variable. See Unity Input Manager docs.",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button. Set in the Unity Input Manager."
			},
			{
				"name":"Store Result",
				"description":"Store the button state in a Bool Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Button Down",
		"category":"Input",
		"image":"./images/GetButtonDown.png",
		"description":"Sends an Event when a Button is pressed.",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button. Defined in the Unity Input Manager."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the button is pressed."
			},
			{
				"name":"Store Result",
				"description":"Set to True if the button is pressed, otherwise False."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Button Up",
		"category":"Input",
		"image":"./images/GetButtonUp.png",
		"description":"Sends an Event when a Button is released.",
		"params": [
			{
				"name":"Button Name",
				"description":"The name of the button. Defined in the Unity Input Manager."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the button is released."
			},
			{
				"name":"Store Result",
				"description":"Set to True if the button is released, otherwise False."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Key",
		"category":"Input",
		"image":"./images/GetKey.png",
		"description":"Gets the pressed state of a Key.",
		"params": [
			{
				"name":"Key",
				"description":"The key to test."
			},
			{
				"name":"Store Result",
				"description":"Store if the key is down (True) or up (False)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're waiting for a key press/release."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Key Down",
		"category":"Input",
		"image":"./images/GetKeyDown.png",
		"description":"Sends an Event when a Key is pressed.",
		"params": [
			{
				"name":"Key",
				"description":"The key to detect."
			},
			{
				"name":"Send Event",
				"description":"The Event to send when the key is pressed."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool Variable. True if pressed, otherwise False."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Key Up",
		"category":"Input",
		"image":"./images/GetKeyUp.png",
		"description":"Sends an Event when a Key is released.",
		"params": [
			{
				"name":"Key",
				"description":"The key to detect."
			},
			{
				"name":"Send Event",
				"description":"The Event to send when the key is released."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool Variable. True if released, otherwise False."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mouse Button",
		"category":"Input",
		"image":"./images/GetMouseButton.png",
		"description":"Gets the pressed state of the specified Mouse Button and stores it in a Bool Variable. See Unity Input Manager doc.",
		"params": [
			{
				"name":"Button",
				"description":"The mouse button to test."
			},
			{
				"name":"Store Result",
				"description":"Store the pressed state in a Bool Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mouse Button Down",
		"category":"Input",
		"image":"./images/GetMouseButtonDown.png",
		"description":"Sends an Event when the specified Mouse Button is pressed. Optionally store the button state in a bool variable.",
		"params": [
			{
				"name":"Button",
				"description":"The mouse button to test."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the mouse button is down."
			},
			{
				"name":"Store Result",
				"description":"Store the button state in a Bool Variable."
			},
			{
				"name":"In Update Only",
				"description":"Uncheck to run when entering the state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mouse Button Up",
		"category":"Input",
		"image":"./images/GetMouseButtonUp.png",
		"description":"Sends an Event when the specified Mouse Button is released. Optionally store the button state in a bool variable.",
		"params": [
			{
				"name":"Button",
				"description":"The mouse button to test."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the mouse button is down."
			},
			{
				"name":"Store Result",
				"description":"Store the pressed state in a Bool Variable."
			},
			{
				"name":"In Update Only",
				"description":"Uncheck to run when entering the state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mouse X",
		"category":"Input",
		"image":"./images/GetMouseX.png",
		"description":"Gets the X Position of the mouse and stores it in a Float Variable.",
		"params": [
			{
				"name":"Store Result",
				"description":"Store in a float variable."
			},
			{
				"name":"Normalize",
				"description":"Normalized coordinates are in the range 0 to 1 (0 = left, 1 = right). Otherwise the coordinate is in pixels. Normalized coordinates are useful for resolution independent functions."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mouse Y",
		"category":"Input",
		"image":"./images/GetMouseY.png",
		"description":"Gets the Y Position of the mouse and stores it in a Float Variable.",
		"params": [
			{
				"name":"Store Result",
				"description":"Store in a float variable."
			},
			{
				"name":"Normalize",
				"description":"Normalized coordinates are in the range 0 to 1 (0 = left, 1 = right). Otherwise the coordinate is in pixels. Normalized coordinates are useful for resolution independent functions."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Look",
		"category":"Input",
		"image":"./images/MouseLook.png",
		"description":"Rotates a GameObject based on mouse movement. Minimum and Maximum values can be used to constrain the rotation.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Axes",
				"description":"The axes to rotate around."
			},
			{
				"name":"Sensitivity X",
				"description":"Sensitivity of movement in X direction."
			},
			{
				"name":"Sensitivity Y",
				"description":"Sensitivity of movement in Y direction."
			},
			{
				"name":"Minimum X",
				"description":"Clamp rotation around X axis. Set to None for no clamping."
			},
			{
				"name":"Maximum X",
				"description":"Clamp rotation around X axis. Set to None for no clamping."
			},
			{
				"name":"Minimum Y",
				"description":"Clamp rotation around Y axis. Set to None for no clamping."
			},
			{
				"name":"Maximum Y",
				"description":"Clamp rotation around Y axis. Set to None for no clamping."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Look 2",
		"category":"Input",
		"image":"./images/MouseLook2.png",
		"description":"Rotates a GameObject based on mouse movement. Minimum and Maximum values can be used to constrain the rotation.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Axes",
				"description":"The axes to rotate around."
			},
			{
				"name":"Sensitivity X",
				"description":"Speed around X axis. Higher = faster."
			},
			{
				"name":"Sensitivity Y",
				"description":"Speed around Y axis. Higher = faster."
			},
			{
				"name":"Minimum X",
				"description":"Minimum angle around X axis."
			},
			{
				"name":"Maximum X",
				"description":"Maximum angle around X axis."
			},
			{
				"name":"Minimum Y",
				"description":"Minimum angle around Y axis."
			},
			{
				"name":"Maximum Y",
				"description":"Maximum angle around X axis."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Pick",
		"category":"Input",
		"image":"./images/MousePick.png",
		"description":"Perform a Mouse Pick on the scene from the Main Camera and stores the results. Use Ray Distance to set how close the camera must be to pick the object.",
		"params": [
			{
				"name":"Ray Distance",
				"description":"Set the length of the ray to cast from the Main Camera."
			},
			{
				"name":"Store Did Pick Object",
				"description":"Set Bool variable true if an object was picked, false if not."
			},
			{
				"name":"Store Game Object",
				"description":"Store the picked GameObject."
			},
			{
				"name":"Store Point",
				"description":"Store the point of contact."
			},
			{
				"name":"Store Normal",
				"description":"Store the normal at the point of contact.\nNote, this is a direction vector not a rotation. Use Look At Direction to rotate a GameObject to this direction."
			},
			{
				"name":"Store Distance",
				"description":"Store the distance to the point of contact."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Pick Event",
		"category":"Input",
		"image":"./images/MousePickEvent.png",
		"description":"Sends Events based on mouse interactions with a Game Object: MouseOver, MouseDown, MouseUp, MouseOff. Use Ray Distance to set how close the camera must be to pick the object.\nNOTE: Picking uses the Main Camera, so you must have a Camera in the scene tagged as Main Camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to test for mouse picking."
			},
			{
				"name":"Ray Distance",
				"description":"Length of the ray to cast from the camera."
			},
			{
				"name":"Mouse Over",
				"description":"Event to send when the mouse is over the GameObject."
			},
			{
				"name":"Mouse Down",
				"description":"Event to send when the mouse is pressed while over the GameObject."
			},
			{
				"name":"Mouse Up",
				"description":"Event to send when the mouse is released while over the GameObject."
			},
			{
				"name":"Mouse Off",
				"description":"Event to send when the mouse moves off the GameObject."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Reset Input Axes",
		"category":"Input",
		"image":"./images/ResetInputAxes.png",
		"description":"Resets all Input. After ResetInputAxes all axes return to 0 and all buttons return to 0 for one frame",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Screen Pick",
		"category":"Input",
		"image":"./images/ScreenPick.png",
		"description":"Perform a raycast into the scene using screen coordinates and stores the results. Use Ray Distance to set how close the camera must be to pick the object. NOTE: Uses the MainCamera!",
		"params": [
			{
				"name":"Screen Vector",
				"description":"A Vector3 screen position. Commonly stored by other actions."
			},
			{
				"name":"Screen X",
				"description":"X position on screen."
			},
			{
				"name":"Screen Y",
				"description":"Y position on screen."
			},
			{
				"name":"Normalized",
				"description":"Are the supplied screen coordinates normalized (0-1), or in pixels."
			},
			{
				"name":"Ray Distance",
				"description":"The length of the ray to use."
			},
			{
				"name":"Store Did Pick Object",
				"description":"Store whether the ray hit an object in a Bool Variable."
			},
			{
				"name":"Store Game Object",
				"description":"Store the hit Game Object in a Game Object Variable."
			},
			{
				"name":"Store Point",
				"description":"Store the world position of the hit point in a Vector3 Variable."
			},
			{
				"name":"Store Normal",
				"description":"Store the normal of the hit point in a Vector3 Variable.\nNote, this is a direction vector not a rotation. Use Look At Direction to rotate a GameObject to this direction."
			},
			{
				"name":"Store Distance",
				"description":"Store the distance to the hit point."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers. Set a number then select layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Transform Input To World Space",
		"category":"Input",
		"image":"./images/TransformInputToWorldSpace.png",
		"description":"Transforms 2d input into a 3d world space vector. E.g., can be used to transform input from a touch joystick to a movement vector.",
		"params": [
			{
				"name":"Horizontal Input",
				"description":"The horizontal input."
			},
			{
				"name":"Vertical Input",
				"description":"The vertical input."
			},
			{
				"name":"Multiplier",
				"description":"Input axis are reported in the range -1 to 1, this multiplier lets you set a new range."
			},
			{
				"name":"Map To Plane",
				"description":"The world plane to map the 2d input onto."
			},
			{
				"name":"Relative To",
				"description":"Make the result relative to a GameObject, typically the main camera."
			},
			{
				"name":"Store Vector",
				"description":"Store the direction vector."
			},
			{
				"name":"Store Magnitude",
				"description":"Store the length of the direction vector."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Wait Any Key",
		"category":"Input",
		"image":"./images/WaitAnyKey.png",
		"description":"Waits until any key is pressed then action finishes. Similar to AnyKey action but can be used in Action Sequences.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the optional event"
			},
			{
				"name":"Send Event",
				"description":"Optional event to send when any Key or Mouse Button is pressed."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Look From",
		"category":"iTween",
		"image":"./images/iTweenLookFrom.png",
		"description":"Instantly rotates a GameObject to look at the supplied Vector3 then returns it to it's starting rotation over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Transform Target",
				"description":"Look from a transform position."
			},
			{
				"name":"Vector Target",
				"description":"A target position the GameObject will look at. If Transform Target is defined this is used as a local offset."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Look To",
		"category":"iTween",
		"image":"./images/iTweenLookTo.png",
		"description":"Rotates a GameObject to look at a supplied Transform or Vector3 over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Transform Target",
				"description":"Look at a transform position."
			},
			{
				"name":"Vector Target",
				"description":"A target position the GameObject will look at. If Transform Target is defined this is used as a local offset."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"For the shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only. Just put there strinc like 'x' or 'xz'"
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Look Update",
		"category":"iTween",
		"image":"./images/iTweenLookUpdate.png",
		"description":"Rotates a GameObject to look at a supplied Transform or Vector3 over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Transform Target",
				"description":"Look at a transform position."
			},
			{
				"name":"Vector Target",
				"description":"A target position the GameObject will look at. If Transform Target is defined this is used as a look offset."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only. Just put there strinc like 'x' or 'xz'"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Move Add",
		"category":"iTween",
		"image":"./images/iTweenMoveAdd.png",
		"description":"Translates a GameObject's position over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector that will be added to a GameObjects position."
			},
			{
				"name":"Time",
				"description":"For the time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"For the time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"For the shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"For the type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Orient To Path",
				"description":"For whether or not the GameObject will orient to its direction of travel. False by default."
			},
			{
				"name":"Look At Object",
				"description":"A target object the GameObject will look at."
			},
			{
				"name":"Look At Vector",
				"description":"A target position the GameObject will look at."
			},
			{
				"name":"Look Time",
				"description":"The time in seconds the object will take to look at either the Look At Target or Orient To Path. 0 by default"
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only. Just put there strinc like 'x' or 'xz'"
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Move By",
		"category":"iTween",
		"image":"./images/iTweenMoveBy.png",
		"description":"Adds the supplied vector to a GameObject's position.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"The vector to add to the GameObject's position."
			},
			{
				"name":"Time",
				"description":"For the time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"For the time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"For the shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"For the type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Orient To Path",
				"description":"For whether or not the GameObject will orient to its direction of travel. False by default."
			},
			{
				"name":"Look At Object",
				"description":"For a target the GameObject will look at."
			},
			{
				"name":"Look At Vector",
				"description":"For a target the GameObject will look at."
			},
			{
				"name":"Look Time",
				"description":"For the time in seconds the object will take to look at either the 'looktarget' or 'orienttopath'. 0 by default"
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only. Just put there strinc like 'x' or 'xz'"
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Move From",
		"category":"iTween",
		"image":"./images/iTweenMoveFrom.png",
		"description":"Instantly changes a GameObject's position to a supplied destination then returns it to it's starting position over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Transform Position",
				"description":"Move From a transform rotation."
			},
			{
				"name":"Vector Position",
				"description":"The position the GameObject will animate from. If Transform Position is defined this is used as a local offset."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"Whether to animate in local or world space."
			},
			{
				"name":"Orient To Path",
				"description":"Whether or not the GameObject will orient to its direction of travel. False by default."
			},
			{
				"name":"Look At Object",
				"description":"A target object the GameObject will look at."
			},
			{
				"name":"Look At Vector",
				"description":"A target position the GameObject will look at."
			},
			{
				"name":"Look Time",
				"description":"The time in seconds the object will take to look at either the Look At Target or Orient To Path. 0 by default"
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Move To",
		"category":"iTween",
		"image":"./images/iTweenMoveTo.png",
		"description":"Changes a GameObject's position over time to a supplied destination.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Transform Position",
				"description":"Move To a transform position."
			},
			{
				"name":"Vector Position",
				"description":"Position the GameObject will animate to. If Transform Position is defined this is used as a local offset."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Space",
				"description":"Whether to animate in local or world space."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Orient To Path",
				"description":"Whether or not the GameObject will orient to its direction of travel. False by default."
			},
			{
				"name":"Look At Object",
				"description":"A target object the GameObject will look at."
			},
			{
				"name":"Look At Vector",
				"description":"A target position the GameObject will look at."
			},
			{
				"name":"Look Time",
				"description":"The time in seconds the object will take to look at either the Look Target or Orient To Path. 0 by default"
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only."
			},
			{
				"name":"Move To Path",
				"description":"Whether to automatically generate a curve from the GameObject's current position to the beginning of the path. True by default."
			},
			{
				"name":"Look Ahead",
				"description":"How much of a percentage (from 0 to 1) to look ahead on a path to influence how strict Orient To Path is and how much the object will anticipate each curve."
			},
			{
				"name":"Transforms",
				"description":"A list of objects to draw a Catmull-Rom spline through for a curved animation path."
			},
			{
				"name":"Vectors",
				"description":"A list of positions to draw a Catmull-Rom through for a curved animation path. If Transform is defined, this value is added as a local offset."
			},
			{
				"name":"Reverse",
				"description":"Reverse the path so object moves from End to Start node."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Move Update",
		"category":"iTween",
		"image":"./images/iTweenMoveUpdate.png",
		"description":"Similar to MoveTo but incredibly less expensive for usage inside the Update function or similar looping situations involving a 'live' set of changing values. Does not utilize an EaseType.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Transform Position",
				"description":"Move From a transform rotation."
			},
			{
				"name":"Vector Position",
				"description":"The position the GameObject will animate from.  If transformPosition is set, this is used as an offset."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Space",
				"description":"Whether to animate in local or world space."
			},
			{
				"name":"Orient To Path",
				"description":"Whether or not the GameObject will orient to its direction of travel. False by default."
			},
			{
				"name":"Look At Object",
				"description":"A target object the GameObject will look at."
			},
			{
				"name":"Look At Vector",
				"description":"A target position the GameObject will look at."
			},
			{
				"name":"Look Time",
				"description":"The time in seconds the object will take to look at either the Look At Target or Orient To Path. 0 by default"
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Pause",
		"category":"iTween",
		"image":"./images/iTweenPause.png",
		"description":"Pause an iTween action.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"I Tween Type",
				"description":"TODO"
			},
			{
				"name":"Include Children",
				"description":"TODO"
			},
			{
				"name":"In Scene",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Punch Position",
		"category":"iTween",
		"image":"./images/iTweenPunchPosition.png",
		"description":"Applies a jolt of force to a GameObject's position and wobbles it back to its initial position.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector punch range."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Punch Rotation",
		"category":"iTween",
		"image":"./images/iTweenPunchRotation.png",
		"description":"Applies a jolt of force to a GameObject's rotation and wobbles it back to its initial rotation. NOTE: Due to the way iTween utilizes the Transform.Rotate method, PunchRotation works best with single axis usage rather than punching with a Vector3.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector punch range."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Punch Scale",
		"category":"iTween",
		"image":"./images/iTweenPunchScale.png",
		"description":"Applies a jolt of force to a GameObject's scale and wobbles it back to its initial scale.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector punch range."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Resume",
		"category":"iTween",
		"image":"./images/iTweenResume.png",
		"description":"Resume an iTween action.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"I Tween Type",
				"description":"TODO"
			},
			{
				"name":"Include Children",
				"description":"TODO"
			},
			{
				"name":"In Scene",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Rotate Add",
		"category":"iTween",
		"image":"./images/iTweenRotateAdd.png",
		"description":"Adds supplied Euler angles in degrees to a GameObject's rotation over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector that will be added to a GameObjects rotation."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Rotate By",
		"category":"iTween",
		"image":"./images/iTweenRotateBy.png",
		"description":"Multiplies supplied values by 360 and rotates a GameObject by calculated amount over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector that will multiply current GameObjects rotation."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"For the shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Rotate From",
		"category":"iTween",
		"image":"./images/iTweenRotateFrom.png",
		"description":"Instantly changes a GameObject's Euler angles in degrees then returns it to it's starting rotation over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Transform Rotation",
				"description":"A rotation from a GameObject."
			},
			{
				"name":"Vector Rotation",
				"description":"A rotation vector the GameObject will animate from."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"Whether to animate in local or world space."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Rotate To",
		"category":"iTween",
		"image":"./images/iTweenRotateTo.png",
		"description":"Rotates a GameObject to the supplied Euler angles in degrees over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Transform Rotation",
				"description":"Rotate to a transform rotation."
			},
			{
				"name":"Vector Rotation",
				"description":"A rotation the GameObject will animate from."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"Whether to animate in local or world space."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Rotate Update",
		"category":"iTween",
		"image":"./images/iTweenRotateUpdate.png",
		"description":"Similar to RotateTo but incredibly less expensive for usage inside the Update function or similar looping situations involving a 'live' set of changing values. Does not utilize an EaseType.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Transform Rotation",
				"description":"Rotate to a transform rotation."
			},
			{
				"name":"Vector Rotation",
				"description":"A rotation the GameObject will animate from."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete. If transformRotation is set, this is used as an offset."
			},
			{
				"name":"Space",
				"description":"Whether to animate in local or world space."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Scale Add",
		"category":"iTween",
		"image":"./images/iTweenScaleAdd.png",
		"description":"Adds to a GameObject's scale over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector that will be added to the GameObjects scale."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Scale By",
		"category":"iTween",
		"image":"./images/iTweenScaleBy.png",
		"description":"Multiplies a GameObject's scale over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector that will multiply current GameObjects scale."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Scale From",
		"category":"iTween",
		"image":"./images/iTweenScaleFrom.png",
		"description":"Instantly changes a GameObject's scale then returns it to it's starting scale over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Transform Scale",
				"description":"Scale From a transform scale."
			},
			{
				"name":"Vector Scale",
				"description":"A scale vector the GameObject will animate From."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Scale To",
		"category":"iTween",
		"image":"./images/iTweenScaleTo.png",
		"description":"Changes a GameObject's scale over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Transform Scale",
				"description":"Scale To a transform scale."
			},
			{
				"name":"Vector Scale",
				"description":"A scale vector the GameObject will animate To."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Speed",
				"description":"Can be used instead of time to allow animation based on speed. When you define speed the time variable is ignored."
			},
			{
				"name":"Ease Type",
				"description":"The shape of the easing curve applied to the animation."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Scale Update",
		"category":"iTween",
		"image":"./images/iTweenScaleUpdate.png",
		"description":"CSimilar to ScaleTo but incredibly less expensive for usage inside the Update function or similar looping situations involving a 'live' set of changing values. Does not utilize an EaseType.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Transform Scale",
				"description":"Scale To a transform scale."
			},
			{
				"name":"Vector Scale",
				"description":"A scale vector the GameObject will animate To."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete. If transformScale is set, this is used as an offset."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Shake Position",
		"category":"iTween",
		"image":"./images/iTweenShakePosition.png",
		"description":"Randomly shakes a GameObject's position by a diminishing amount over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector shake range."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Axis",
				"description":"Restricts rotation to the supplied axis only. Just put there strinc like 'x' or 'xz'"
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Shake Rotation",
		"category":"iTween",
		"image":"./images/iTweenShakeRotation.png",
		"description":"Randomly shakes a GameObject's rotation by a diminishing amount over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector shake range."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Space",
				"description":"TODO"
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Shake Scale",
		"category":"iTween",
		"image":"./images/iTweenShakeScale.png",
		"description":"Randomly shakes a GameObject's scale by a diminishing amount over time.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"iTween ID. If set you can use iTween Stop action to stop it by its id."
			},
			{
				"name":"Vector",
				"description":"A vector shake range."
			},
			{
				"name":"Time",
				"description":"The time in seconds the animation will take to complete."
			},
			{
				"name":"Delay",
				"description":"The time in seconds the animation will wait before beginning."
			},
			{
				"name":"Loop Type",
				"description":"The type of loop to apply once the animation has completed."
			},
			{
				"name":"Start Event",
				"description":"TODO"
			},
			{
				"name":"Finish Event",
				"description":"TODO"
			},
			{
				"name":"Real Time",
				"description":"Setting this to true will allow the animation to continue independent of the current time which is helpful for animating menus after a game has been paused by setting Time.timeScale=0."
			},
			{
				"name":"Stop On Exit",
				"description":"TODO"
			},
			{
				"name":"Loop Dont Finish",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"iTween Stop",
		"category":"iTween",
		"image":"./images/iTweenStop.png",
		"description":"Stop an iTween action.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Id",
				"description":"TODO"
			},
			{
				"name":"I Tween Type",
				"description":"TODO"
			},
			{
				"name":"Include Children",
				"description":"TODO"
			},
			{
				"name":"In Scene",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Dont Destroy On Load",
		"category":"Level",
		"image":"./images/DontDestroyOnLoad.png",
		"description":"Makes the Game Object not be destroyed automatically when loading a new scene.\nSee unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Object.DontDestroyOnLoad.html\">DontDestroyOnLoad</a>.",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to mark as DontDestroyOnLoad."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load Level",
		"category":"Level",
		"image":"./images/LoadLevel.png",
		"description":"Loads a Level by Name. NOTE: Before you can load a level, you have to add it to the list of levels defined in File->Build Settings...",
		"params": [
			{
				"name":"Level Name",
				"description":"The name of the level to load. NOTE: Must be in the list of levels defined in File->Build Settings... "
			},
			{
				"name":"Additive",
				"description":"Load the level additively, keeping the current scene."
			},
			{
				"name":"Async",
				"description":"Load the level asynchronously in the background."
			},
			{
				"name":"Loaded Event",
				"description":"Event to send when the level has loaded. NOTE: This only makes sense if the FSM is still in the scene!"
			},
			{
				"name":"Dont Destroy On Load",
				"description":"Keep this GameObject in the new level. NOTE: The GameObject and components is disabled then enabled on load; uncheck Reset On Disable to keep the active state."
			},
			{
				"name":"Failed Event",
				"description":"Event to send if the level cannot be loaded."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load Level Num",
		"category":"Level",
		"image":"./images/LoadLevelNum.png",
		"description":"Loads a Level by Index number. Before you can load a level, you have to add it to the list of levels defined in File->Build Settings...",
		"params": [
			{
				"name":"Level Index",
				"description":"The level index in File->Build Settings"
			},
			{
				"name":"Additive",
				"description":"Load the level additively, keeping the current scene."
			},
			{
				"name":"Loaded Event",
				"description":"Event to send after the level is loaded."
			},
			{
				"name":"Dont Destroy On Load",
				"description":"Keep this GameObject in the new level. NOTE: The GameObject and components is disabled then enabled on load; uncheck Reset On Disable to keep the active state."
			},
			{
				"name":"Failed Event",
				"description":"Event to send if the level cannot be loaded."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Restart Level",
		"category":"Level",
		"image":"./images/RestartLevel.png",
		"description":"Reloads the current scene.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Light Color",
		"category":"Lights",
		"image":"./images/SetLightColor.png",
		"description":"Sets the Color of a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Light Component."
			},
			{
				"name":"Light Color",
				"description":"The color of the light."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the color is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Light Cookie",
		"category":"Lights",
		"image":"./images/SetLightCookie.png",
		"description":"Sets the Texture projected by a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Light Component."
			},
			{
				"name":"Light Cookie",
				"description":"The texture to project."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Light Flare",
		"category":"Lights",
		"image":"./images/SetLightFlare.png",
		"description":"Sets the Flare effect used by a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Light Component."
			},
			{
				"name":"Light Flare",
				"description":"The flare to use."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Light Intensity",
		"category":"Lights",
		"image":"./images/SetLightIntensity.png",
		"description":"Sets the Intensity of a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Light Component."
			},
			{
				"name":"Light Intensity",
				"description":"The intensity of the light."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the intensity is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Light Range",
		"category":"Lights",
		"image":"./images/SetLightRange.png",
		"description":"Sets the Range of a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Light Component."
			},
			{
				"name":"Light Range",
				"description":"The range of the light."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the range is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Light Spot Angle",
		"category":"Lights",
		"image":"./images/SetLightSpotAngle.png",
		"description":"Sets the Spot Angle of a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Light Component."
			},
			{
				"name":"Light Spot Angle",
				"description":"The angle of the spot light beam."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the spot angle is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Light Type",
		"category":"Lights",
		"image":"./images/SetLightType.png",
		"description":"Set Spot, Directional, or Point Light type.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Light Component."
			},
			{
				"name":"Light Type",
				"description":"Spot, directional, or point light."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Shadow Strength",
		"category":"Lights",
		"image":"./images/SetShadowStrength.png",
		"description":"Sets the strength of the shadows cast by a Light.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the Light Component."
			},
			{
				"name":"Shadow Strength",
				"description":"The strength of the shadows. 1 = opaque, 0 = transparent."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the shadow strength is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool All True",
		"category":"Logic",
		"image":"./images/BoolAllTrue.png",
		"description":"Tests if all the given Bool Variables are True.",
		"params": [
			{
				"name":"Bool Variables",
				"description":"The Bool variables to check."
			},
			{
				"name":"Send Event",
				"description":"Event to send if all the Bool variables are True."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active. Useful if you're waiting for all to be true."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Any True",
		"category":"Logic",
		"image":"./images/BoolAnyTrue.png",
		"description":"Tests if any of the given Bool Variables are True.",
		"params": [
			{
				"name":"Bool Variables",
				"description":"The Bool variables to check."
			},
			{
				"name":"Send Event",
				"description":"Event to send if any of the Bool variables are True."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active. Useful if you're waiting for any to be true."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Changed",
		"category":"Logic",
		"image":"./images/BoolChanged.png",
		"description":"Tests if the value of a Bool Variable has changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to watch for changes."
			},
			{
				"name":"Changed Event",
				"description":"Event to send if the variable changes."
			},
			{
				"name":"Store Result",
				"description":"Set to True if changed."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool None True",
		"category":"Logic",
		"image":"./images/BoolNoneTrue.png",
		"description":"Tests if all the Bool Variables are False.\nSend an event or store the result.",
		"params": [
			{
				"name":"Bool Variables",
				"description":"The Bool variables to check."
			},
			{
				"name":"Send Event",
				"description":"Event to send if none of the Bool variables are True."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Operator",
		"category":"Math",
		"image":"./images/BoolOperator.png",
		"description":"Performs boolean operations on 2 Bool Variables.",
		"params": [
			{
				"name":"Bool 1",
				"description":"The first Bool variable."
			},
			{
				"name":"Bool 2",
				"description":"The second Bool variable."
			},
			{
				"name":"Operation",
				"description":"Boolean Operation."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Test",
		"category":"Logic",
		"image":"./images/BoolTest.png",
		"description":"Sends Events based on the value of a Boolean Variable.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to test."
			},
			{
				"name":"Is True",
				"description":"Event to send if the Bool variable is True."
			},
			{
				"name":"Is False",
				"description":"Event to send if the Bool variable is False."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Color Compare",
		"category":"Logic",
		"image":"./images/ColorCompare.png",
		"description":"Sends Events based on the comparison of 2 Colors.",
		"params": [
			{
				"name":"Color 1",
				"description":"The first Color."
			},
			{
				"name":"Color 2",
				"description":"The second Color."
			},
			{
				"name":"Tolerance",
				"description":"Tolerance of test, to test for 'almost equals' or to ignore small floating point rounding differences."
			},
			{
				"name":"Equal",
				"description":"Event sent if Color 1 equals Color 2 (within Tolerance)"
			},
			{
				"name":"Not Equal",
				"description":"Event sent if Color 1 does not equal Color 2 (within Tolerance)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enum Compare",
		"category":"Logic",
		"image":"./images/EnumCompare.png",
		"description":"Compares 2 Enum values and sends Events based on the result.",
		"params": [
			{
				"name":"Enum Variable",
				"description":"The first Enum Variable."
			},
			{
				"name":"Compare To",
				"description":"The second Enum Variable."
			},
			{
				"name":"Equal Event",
				"description":"Event to send if the values are equal."
			},
			{
				"name":"Not Equal Event",
				"description":"Event to send if the values are not equal."
			},
			{
				"name":"Store Result",
				"description":"Store the true/false result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the enum is changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enum Switch",
		"category":"Logic",
		"image":"./images/EnumSwitch.png",
		"description":"Sends an Event based on the value of an Enum Variable.",
		"params": [
			{
				"name":"Enum Variable",
				"description":"The Enum Variable to use."
			},
			{
				"name":"Compare To",
				"description":"Compare Enum Values"
			},
			{
				"name":"Send Event",
				"description":"Event to send if the Enum Variable value is equal."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Changed",
		"category":"Logic",
		"image":"./images/FloatChanged.png",
		"description":"Tests if the value of a Float variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to watch for a change."
			},
			{
				"name":"Changed Event",
				"description":"Event to send if the float variable changes."
			},
			{
				"name":"Store Result",
				"description":"Set to True if the float variable changes."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Compare",
		"category":"Logic",
		"image":"./images/FloatCompare.png",
		"description":"Sends Events based on the comparison of 2 Floats.",
		"params": [
			{
				"name":"Float 1",
				"description":"The first float variable."
			},
			{
				"name":"Float 2",
				"description":"The second float variable."
			},
			{
				"name":"Tolerance",
				"description":"Tolerance for the Equal test (almost equal).\nNOTE: Floats that look the same are often not exactly the same, so you often need to use a small tolerance."
			},
			{
				"name":"Equal",
				"description":"Event sent if Float 1 equals Float 2 (within Tolerance)"
			},
			{
				"name":"Less Than",
				"description":"Event sent if Float 1 is less than Float 2"
			},
			{
				"name":"Greater Than",
				"description":"Event sent if Float 1 is greater than Float 2"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Sign Test",
		"category":"Logic",
		"image":"./images/FloatSignTest.png",
		"description":"Sends Events based on the sign of a Float (positive or negative).",
		"params": [
			{
				"name":"Float Value",
				"description":"The float variable to test."
			},
			{
				"name":"Is Positive",
				"description":"Event to send if the float variable is positive."
			},
			{
				"name":"Is Negative",
				"description":"Event to send if the float variable is negative."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you want to wait until a float is positive/negative."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Switch",
		"category":"Logic",
		"image":"./images/FloatSwitch.png",
		"description":"Sends an Event based on the value of a Float Variable. The float could represent distance, angle to a target, health left... The array sets up float ranges that correspond to Events.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to test."
			},
			{
				"name":"Less Than",
				"description":"Test if the float is less than a value. Each entry in the array defines a range between it and the previous entry."
			},
			{
				"name":"Send Event",
				"description":"Event to send if true."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm Has Variable",
		"category":"Logic",
		"image":"./images/FsmHasVariable.png",
		"description":"Tests if an FSM has a variable with the given name.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of Fsm on Game Object. Useful if there is more than one FSM on the GameObject."
			},
			{
				"name":"Variable Name",
				"description":"Check to see if the FSM has this variable."
			},
			{
				"name":"True Event",
				"description":"Event to send if the FSM has the variable."
			},
			{
				"name":"False Event",
				"description":"Event to send if the FSM does NOT have the variable."
			},
			{
				"name":"Store Result",
				"description":"Store the result of this test in a bool variable. Useful if other actions depend on this test."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm State Switch",
		"category":"Logic",
		"image":"./images/FsmStateSwitch.png",
		"description":"Sends Events based on the current State of an FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of Fsm on GameObject. Useful if there is more than one FSM on the GameObject."
			},
			{
				"name":"Compare To",
				"description":"Compare the current State to this State."
			},
			{
				"name":"Send Event",
				"description":"Send this event if the same."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Fsm State Test",
		"category":"Logic",
		"image":"./images/FsmStateTest.png",
		"description":"Tests if an FSM is in the specified State.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of Fsm on Game Object. Useful if there is more than one FSM on the GameObject."
			},
			{
				"name":"State Name",
				"description":"Check to see if the FSM is in this state."
			},
			{
				"name":"True Event",
				"description":"Event to send if the FSM is in the specified state."
			},
			{
				"name":"False Event",
				"description":"Event to send if the FSM is NOT in the specified state."
			},
			{
				"name":"Store Result",
				"description":"Store the result of this test in a bool variable. Useful if other actions depend on this test."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you want to wait for an FSM to be in a particular state before sending an event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Changed",
		"category":"Logic",
		"image":"./images/GameObjectChanged.png",
		"description":"Tests if the value of a GameObject variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Game Object Variable",
				"description":"The GameObject variable to watch for a change."
			},
			{
				"name":"Changed Event",
				"description":"Event to send if the variable changes."
			},
			{
				"name":"Store Result",
				"description":"Set to True if the variable changes."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Compare",
		"category":"Logic",
		"image":"./images/GameObjectCompare.png",
		"description":"Compares 2 Game Objects and sends Events based on the result.",
		"params": [
			{
				"name":"Game Object Variable",
				"description":"A Game Object variable to compare."
			},
			{
				"name":"Compare To",
				"description":"Compare the variable with this Game Object"
			},
			{
				"name":"Equal Event",
				"description":"Send this event if Game Objects are equal"
			},
			{
				"name":"Not Equal Event",
				"description":"Send this event if Game Objects are not equal"
			},
			{
				"name":"Store Result",
				"description":"Store the result of the check in a Bool Variable. (True if equal, false if not equal)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're waiting for a true or false result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Compare Tag",
		"category":"Logic",
		"image":"./images/GameObjectCompareTag.png",
		"description":"Tests if a Game Object has a tag.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"Tag",
				"description":"The Tag to check for."
			},
			{
				"name":"True Event",
				"description":"Event to send if the GameObject has the Tag."
			},
			{
				"name":"False Event",
				"description":"Event to send if the GameObject does not have the Tag."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Has Children",
		"category":"Logic",
		"image":"./images/GameObjectHasChildren.png",
		"description":"Tests if a GameObject has children.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"True Event",
				"description":"Event to send if the GameObject has children."
			},
			{
				"name":"False Event",
				"description":"Event to send if the GameObject does not have children."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Is Child Of",
		"category":"Logic",
		"image":"./images/GameObjectIsChildOf.png",
		"description":"Tests if a game object is a child of another game object and stores the result in a bool variable.\nE.g., Uses this to check if a collision object is the child of another object.",
		"params": [
			{
				"name":"Game Object",
				"description":"GameObject to test."
			},
			{
				"name":"Is Child Of",
				"description":"Is it a child of this GameObject?"
			},
			{
				"name":"True Event",
				"description":"Event to send if GameObject is a child."
			},
			{
				"name":"False Event",
				"description":"Event to send if GameObject is NOT a child."
			},
			{
				"name":"Store Result",
				"description":"Store result in a bool variable"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Is Null",
		"category":"Logic",
		"image":"./images/GameObjectIsNull.png",
		"description":"Tests if a GameObject Variable has a null value. E.g., If the FindGameObject action failed to find an object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject variable to test."
			},
			{
				"name":"Is Null",
				"description":"Event to send if the GamObject is null."
			},
			{
				"name":"Is Not Null",
				"description":"Event to send if the GamObject is NOT null."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you want to wait for a GameObject variable to be not null (or null) then send an event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Is Visible",
		"category":"Logic",
		"image":"./images/GameObjectIsVisible.png",
		"description":"Tests if a Game Object is visible to any camera.\nNOTE: In the editor this includes the Scene View camera!",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"True Event",
				"description":"Event to send if the GameObject is visible."
			},
			{
				"name":"False Event",
				"description":"Event to send if the GameObject is NOT visible."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Is Visible To Camera",
		"category":"Logic",
		"image":"./images/GameObjectIsVisibleToCamera.png",
		"description":"Tests if a Game Object is visible to a specific camera. Note, using bounds is a little more expensive than using the center point.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"Camera",
				"description":"The GameObject with the Camera component."
			},
			{
				"name":"Use Bounds",
				"description":"Use the bounds of the GameObject. Otherwise uses just the center point."
			},
			{
				"name":"True Event",
				"description":"Event to send if the GameObject is visible."
			},
			{
				"name":"False Event",
				"description":"Event to send if the GameObject is NOT visible."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Game Object Tag Switch",
		"category":"Logic",
		"image":"./images/GameObjectTagSwitch.png",
		"description":"Sends an Event based on a Game Object's Tag.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to test."
			},
			{
				"name":"Compare To",
				"description":"Compare GameObject's Tag."
			},
			{
				"name":"Send Event",
				"description":"Send this event if Tag matches."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Changed",
		"category":"Logic",
		"image":"./images/IntChanged.png",
		"description":"Tests if the value of an integer variable changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The int variable to test."
			},
			{
				"name":"Changed Event",
				"description":"Event to send if changed."
			},
			{
				"name":"Store Result",
				"description":"Set to true if changed, otherwise False."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Compare",
		"category":"Logic",
		"image":"./images/IntCompare.png",
		"description":"Sends Events based on the comparison of 2 Integers.",
		"params": [
			{
				"name":"Integer 1",
				"description":"The first integer."
			},
			{
				"name":"Integer 2",
				"description":"The second integer."
			},
			{
				"name":"Equal",
				"description":"Event sent if Integer 1 equals Integer 2"
			},
			{
				"name":"Less Than",
				"description":"Event sent if Integer 1 is less than Integer 2"
			},
			{
				"name":"Greater Than",
				"description":"Event sent if Integer 1 is greater than Integer 2"
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame. Useful if you want to wait for a comparison to be true before sending an event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Switch",
		"category":"Logic",
		"image":"./images/IntSwitch.png",
		"description":"Sends an Event based on the value of an Integer Variable.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The integer variable to test."
			},
			{
				"name":"Compare To",
				"description":"The integer variable to test."
			},
			{
				"name":"Send Event",
				"description":"Event to send if true."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Object Compare",
		"category":"Logic",
		"image":"./images/ObjectCompare.png",
		"description":"Compare 2 Object Variables and send events based on the result.",
		"params": [
			{
				"name":"Object Variable",
				"description":"The Object Variable to compare."
			},
			{
				"name":"Compare To",
				"description":"The value to compare it to."
			},
			{
				"name":"Equal Event",
				"description":"Event to send if the 2 object values are equal."
			},
			{
				"name":"Not Equal Event",
				"description":"Event to send if the 2 object values are not equal."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Compare",
		"category":"Logic",
		"image":"./images/RectCompare.png",
		"description":"Sends Events based on the comparison of 2 Rect variables.",
		"params": [
			{
				"name":"Rect 1",
				"description":"The first Rect variable."
			},
			{
				"name":"Rect 2",
				"description":"The second Rect variable."
			},
			{
				"name":"Tolerance",
				"description":"Tolerance for the Equal test (almost equal)."
			},
			{
				"name":"Equal",
				"description":"Event sent if Rect 1 equals Rect 2 (within Tolerance)"
			},
			{
				"name":"Not Equal",
				"description":"Event sent if Rect 1 does not equal Rect 2 (within Tolerance)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Changed",
		"category":"Logic",
		"image":"./images/StringChanged.png",
		"description":"Tests if the value of a string variable has changed. Use this to send an event on change, or store a bool that can be used in other operations.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String Variable to test."
			},
			{
				"name":"Changed Event",
				"description":"Event to send if changed."
			},
			{
				"name":"Store Result",
				"description":"Set to True if changed, otherwise False."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Compare",
		"category":"Logic",
		"image":"./images/StringCompare.png",
		"description":"Compares 2 Strings and sends Events based on the result.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String Variable to compare."
			},
			{
				"name":"Compare To",
				"description":"Compare to this text."
			},
			{
				"name":"Equal Event",
				"description":"Event to send if strings are equal."
			},
			{
				"name":"Not Equal Event",
				"description":"Event to send if strings are not equal."
			},
			{
				"name":"Store Result",
				"description":"Store the true/false result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the strings are changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Contains",
		"category":"Logic",
		"image":"./images/StringContains.png",
		"description":"Tests if a String contains another String.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String variable to test."
			},
			{
				"name":"Contains String",
				"description":"Test if the String variable contains this string."
			},
			{
				"name":"True Event",
				"description":"Event to send if true."
			},
			{
				"name":"False Event",
				"description":"Event to send if false."
			},
			{
				"name":"Store Result",
				"description":"Store the true/false result in a bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the strings are changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Switch",
		"category":"Logic",
		"image":"./images/StringSwitch.png",
		"description":"Sends an Event based on the value of a String Variable.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String Variable to test."
			},
			{
				"name":"Compare To",
				"description":"Compare to a string value."
			},
			{
				"name":"Send Event",
				"description":"Send this event if string matches."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Compare",
		"category":"Logic",
		"image":"./images/Vector2Compare.png",
		"description":"Sends Events based on the comparison of 2 Vector2 variables.",
		"params": [
			{
				"name":"Vector 1",
				"description":"The first Vector2 variable."
			},
			{
				"name":"Vector 2",
				"description":"The second Vector2 variable."
			},
			{
				"name":"Tolerance",
				"description":"Tolerance for the Equal test (almost equal)."
			},
			{
				"name":"Equal",
				"description":"Event sent if Rect 1 equals Rect 2 (within Tolerance)"
			},
			{
				"name":"Not Equal",
				"description":"Event sent if Rect 1 does not equal Rect 2 (within Tolerance)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Compare",
		"category":"Logic",
		"image":"./images/Vector3Compare.png",
		"description":"Sends Events based on the comparison of 2 Vector3 variables.",
		"params": [
			{
				"name":"Vector 1",
				"description":"The first Vector3 variable."
			},
			{
				"name":"Vector 2",
				"description":"The second Vector3 variable."
			},
			{
				"name":"Tolerance",
				"description":"Tolerance for the Equal test (almost equal)."
			},
			{
				"name":"Equal",
				"description":"Event sent if Rect 1 equals Rect 2 (within Tolerance)"
			},
			{
				"name":"Not Equal",
				"description":"Event sent if Rect 1 does not equal Rect 2 (within Tolerance)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing and you're waiting for a particular result."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material",
		"category":"Material",
		"image":"./images/GetMaterial.png",
		"description":"Get a material at index on a gameObject and store it in a variable",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject the Material is applied to."
			},
			{
				"name":"Material Index",
				"description":"The index of the Material in the Materials array."
			},
			{
				"name":"Material",
				"description":"Store the material in a variable."
			},
			{
				"name":"Get Shared Material",
				"description":"Get the shared material of this object. NOTE: Modifying the shared material will change the appearance of all objects using this material, and change material settings that are stored in the project too."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Material Texture",
		"category":"Material",
		"image":"./images/GetMaterialTexture.png",
		"description":"Get a texture from a material on a GameObject",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject the Material is applied to."
			},
			{
				"name":"Material Index",
				"description":"The index of the Material in the Materials array."
			},
			{
				"name":"Named Texture",
				"description":"The texture to get. See Unity Shader docs for names."
			},
			{
				"name":"Stored Texture",
				"description":"Store the texture in a variable."
			},
			{
				"name":"Get From Shared Material",
				"description":"Get the shared version of the texture."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material",
		"category":"Material",
		"image":"./images/SetMaterial.png",
		"description":"Sets the material on a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"A Game Object with a Renderer component."
			},
			{
				"name":"Material Index",
				"description":"The index of the material on the object."
			},
			{
				"name":"Material",
				"description":"The material to apply."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Color",
		"category":"Material",
		"image":"./images/SetMaterialColor.png",
		"description":"Sets a named color value in a Game Object's material.\n\nNote: With URP and HDRP set NamedColor to _BaseColor instead of _Color",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Named Color",
				"description":"The named color.\nNote: With URP and HDRP set NamedColor to _BaseColor instead of _Color.\nSee unity docs: <a href=\"https://docs.unity3d.com/ScriptReference/Material.SetColor.html\" rel=\"nofollow\">Material.SetColor</a>"
			},
			{
				"name":"Color",
				"description":"Set the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Float",
		"category":"Material",
		"image":"./images/SetMaterialFloat.png",
		"description":"Sets a named float in a game object's material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Named Float",
				"description":"A named float parameter in the shader."
			},
			{
				"name":"Float Value",
				"description":"Set the parameter value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Movie Texture",
		"category":"Material",
		"image":"./images/SetMaterialMovieTexture.png",
		"description":"Sets a named texture in a game object's material to a movie texture.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Named Texture",
				"description":"A named texture in the shader."
			},
			{
				"name":"Movie Texture",
				"description":"The Movie Texture to use."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Texture",
		"category":"Material",
		"image":"./images/SetMaterialTexture.png",
		"description":"Sets a named texture in a game object's material.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"GameObjects can have multiple materials. Specify an index to target a specific material."
			},
			{
				"name":"Material",
				"description":"Alternatively specify a Material instead of a GameObject and Index."
			},
			{
				"name":"Named Texture",
				"description":"A named parameter in the shader. Common names include: _MainTex, _BumpMap, _Cube..."
			},
			{
				"name":"Texture",
				"description":"The texture to use."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Material Value",
		"category":"Material",
		"image":"./images/SetMaterialValue.png",
		"description":"Sets the value of a Material Variable.",
		"params": [
			{
				"name":"Material Variable",
				"description":"The Material Variable."
			},
			{
				"name":"Material Value",
				"description":"Material Value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Random Material",
		"category":"Material",
		"image":"./images/SetRandomMaterial.png",
		"description":"Sets a Game Object's material randomly from an array of Materials.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that the material is applied to."
			},
			{
				"name":"Material Index",
				"description":"The index of the material on the object."
			},
			{
				"name":"Materials",
				"description":"Array of materials to randomly select from."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Texture Offset",
		"category":"Material",
		"image":"./images/SetTextureOffset.png",
		"description":"Sets the Offset of a named texture in a Game Object's Material. Useful for scrolling texture effects.",
		"params": [
			{
				"name":"Game Object",
				"description":"The target Game Object."
			},
			{
				"name":"Material Index",
				"description":"The index of the material on the object."
			},
			{
				"name":"Named Texture",
				"description":"The named texture. See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Material.SetTextureOffset.html\" rel=\"nofollow\">SetTextureOffset</a>"
			},
			{
				"name":"Offset X",
				"description":"The amount to offset in X axis. 1 = full width of texture."
			},
			{
				"name":"Offset Y",
				"description":"The amount to offset in Y axis. 1 = full height of texture."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Texture Scale",
		"category":"Material",
		"image":"./images/SetTextureScale.png",
		"description":"Sets the Scale of a named texture in a Game Object's Material. Useful for special effects.",
		"params": [
			{
				"name":"Game Object",
				"description":"The target Game Object."
			},
			{
				"name":"Material Index",
				"description":"The index of the material on the object."
			},
			{
				"name":"Named Texture",
				"description":"The named texture. See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Material.SetTextureScale.html\" rel=\"nofollow\">SetTextureScale</a>"
			},
			{
				"name":"Scale X",
				"description":"Scale in X axis. 2 = double the texture's width."
			},
			{
				"name":"Scale Y",
				"description":"Scale in Y axis. 2 = double the texture's height."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Texture Value",
		"category":"Material",
		"image":"./images/SetTextureValue.png",
		"description":"Sets the value of a Texture Variable.",
		"params": [
			{
				"name":"Texture Variable",
				"description":"The Texture Variable."
			},
			{
				"name":"Texture Value",
				"description":"Texture Value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Visibility",
		"category":"Material",
		"image":"./images/SetVisibility.png",
		"description":"Sets the visibility of a GameObject. Note: this action sets the GameObject Renderer's enabled state.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to effect. Note: Needs a Renderer component."
			},
			{
				"name":"Toggle",
				"description":"Should the object visibility be toggled?\nHas priority over the 'visible' setting"
			},
			{
				"name":"Visible",
				"description":"Should the object be set to visible or invisible?"
			},
			{
				"name":"Reset On Exit",
				"description":"Resets to the initial visibility when it leaves the state"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Bool Flip",
		"category":"Math",
		"image":"./images/BoolFlip.png",
		"description":"Flips the value of a Bool Variable. True becomes False, False becomes True.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"The Bool variable to flip. True becomes False, False becomes True."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Abs",
		"category":"Math",
		"image":"./images/FloatAbs.png",
		"description":"Sets a Float variable to its absolute value.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Float variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Add",
		"category":"Math",
		"image":"./images/FloatAdd.png",
		"description":"Adds a value to a Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The Float variable to add to."
			},
			{
				"name":"Add",
				"description":"Amount to add."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			},
			{
				"name":"Per Second",
				"description":"Used with Every Frame. Adds the value over one second to make the operation frame rate independent."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Add Multiple",
		"category":"Math",
		"image":"./images/FloatAddMultiple.png",
		"description":"Adds multiple float variables to float variable.",
		"params": [
			{
				"name":"Float Variables",
				"description":"The float variables to add."
			},
			{
				"name":"Add To",
				"description":"Add to this variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Clamp",
		"category":"Math",
		"image":"./images/FloatClamp.png",
		"description":"Clamps the value of Float Variable to a Min/Max range.",
		"params": [
			{
				"name":"Float Variable",
				"description":"Float variable to clamp."
			},
			{
				"name":"Min Value",
				"description":"The minimum value allowed."
			},
			{
				"name":"Max Value",
				"description":"The maximum value allowed."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the float variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Delta Angle",
		"category":"Math",
		"image":"./images/FloatDeltaAngle.png",
		"description":"Gets the shortest angle between two angles.",
		"params": [
			{
				"name":"From Angle",
				"description":"First angle in degrees."
			},
			{
				"name":"To Angle",
				"description":"Second Angle in degrees."
			},
			{
				"name":"Delta Angle",
				"description":"Store the shortest angle between the two angles. This takes account wrapping around 360."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the angles are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Divide",
		"category":"Math",
		"image":"./images/FloatDivide.png",
		"description":"Divides one Float by another.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to divide."
			},
			{
				"name":"Divide By",
				"description":"Divide the float variable by this value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Interpolate",
		"category":"Math",
		"image":"./images/FloatInterpolate.png",
		"description":"Interpolates between 2 Float values over a specified Time.",
		"params": [
			{
				"name":"Mode",
				"description":"Interpolation mode: Linear or EaseInOut."
			},
			{
				"name":"From Float",
				"description":"Interpolate from this value."
			},
			{
				"name":"To Float",
				"description":"Interpolate to this value."
			},
			{
				"name":"Time",
				"description":"Interpolate over this amount of time in seconds."
			},
			{
				"name":"Store Result",
				"description":"Store the current value in a float variable."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the interpolation is finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused (Time scaled to 0)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Multiply",
		"category":"Math",
		"image":"./images/FloatMultiply.png",
		"description":"Multiplies one Float by another.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to multiply."
			},
			{
				"name":"Multiply By",
				"description":"Multiply the float variable by this value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Operator",
		"category":"Math",
		"image":"./images/FloatOperator.png",
		"description":"Performs math operations on 2 Floats: Add, Subtract, Multiply, Divide, Min, Max.",
		"params": [
			{
				"name":"Float 1",
				"description":"The first float."
			},
			{
				"name":"Float 2",
				"description":"The second float."
			},
			{
				"name":"Operation",
				"description":"The math operation to perform on the floats."
			},
			{
				"name":"Store Result",
				"description":"Store the result of the operation in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Subtract",
		"category":"Math",
		"image":"./images/FloatSubtract.png",
		"description":"Subtracts a value from a Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"The float variable to subtract from."
			},
			{
				"name":"Subtract",
				"description":"Value to subtract from the float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			},
			{
				"name":"Per Second",
				"description":"Used with Every Frame. Adds the value over one second to make the operation frame rate independent."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Float Wrap",
		"category":"Math",
		"image":"./images/FloatWrap.png",
		"description":"Wraps the value of Float Variable so it stays in a Min/Max range.\n\nExamples:\nWrap 120 between 0 and 100 -> 20\nWrap -10 between 0 and 100 -> 90",
		"params": [
			{
				"name":"Float Variable",
				"description":"Float variable to wrap."
			},
			{
				"name":"Min Value",
				"description":"The minimum value allowed."
			},
			{
				"name":"Max Value",
				"description":"The maximum value allowed."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the float variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Add",
		"category":"Math",
		"image":"./images/IntAdd.png",
		"description":"Adds a value to an Integer Variable.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The variable to add to."
			},
			{
				"name":"Add",
				"description":"The value to add."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. NOTE: This operation will NOT be frame rate independent!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Clamp",
		"category":"Math",
		"image":"./images/IntClamp.png",
		"description":"Clamp the value of an Integer Variable to a Min/Max range.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The variable to clamp."
			},
			{
				"name":"Min Value",
				"description":"Minimum allowed value."
			},
			{
				"name":"Max Value",
				"description":"Maximum allowed value."
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Operator",
		"category":"Math",
		"image":"./images/IntOperator.png",
		"description":"Performs math operation on 2 Integers: Add, Subtract, Multiply, Divide, Min, Max.",
		"params": [
			{
				"name":"Integer 1",
				"description":"The first integer."
			},
			{
				"name":"Integer 2",
				"description":"The second integer."
			},
			{
				"name":"Operation",
				"description":"The operation to perform on the 2 integers."
			},
			{
				"name":"Store Result",
				"description":"Store the result in an Integer Variable."
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame. Useful if you're using variables that are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Int Wrap",
		"category":"Math",
		"image":"./images/IntWrap.png",
		"description":"Wraps the value of Int Variable so it stays in a Min/Max range.\n\nExamples:\nWrap 120 between 0 and 100 -> 20\nWrap -10 between 0 and 100 -> 90",
		"params": [
			{
				"name":"Int Variable",
				"description":"Int variable to wrap."
			},
			{
				"name":"Min Value",
				"description":"The minimum value allowed."
			},
			{
				"name":"Max Value",
				"description":"The maximum value allowed."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the int variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Bool",
		"category":"Math",
		"image":"./images/RandomBool.png",
		"description":"Sets a Bool Variable to True or False randomly.",
		"params": [
			{
				"name":"Store Result",
				"description":"Store the result in a bool variable. Hint: Use a {{Bool Test}} action to branch based on this \"coin toss\""
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Float",
		"category":"Math",
		"image":"./images/RandomFloat.png",
		"description":"Sets a Float Variable to a random value between Min/Max.",
		"params": [
			{
				"name":"Min",
				"description":"Minimum value for the random number."
			},
			{
				"name":"Max",
				"description":"Maximum value for the random number."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Float variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Int",
		"category":"Math",
		"image":"./images/RandomInt.png",
		"description":"Sets an Integer Variable to a random value between Min/Max.",
		"params": [
			{
				"name":"Min",
				"description":"Minimum value for the random number."
			},
			{
				"name":"Max",
				"description":"Maximum value for the random number."
			},
			{
				"name":"Store Result",
				"description":"Store the result in an Integer variable."
			},
			{
				"name":"Inclusive Max",
				"description":"Should the Max value be included in the possible results?"
			},
			{
				"name":"No Repeat",
				"description":"Don't repeat the same value twice."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sample Curve",
		"category":"Math",
		"image":"./images/SampleCurve.png",
		"description":"Gets the value of a curve at a given time and stores it in a Float Variable. NOTE: This can be used for more than just animation! It's a general way to transform an input number into an output number using a curve (e.g., linear input -> bell curve).",
		"params": [
			{
				"name":"Curve",
				"description":"Click to edit the curve."
			},
			{
				"name":"Sample At",
				"description":"Sample the curve at this point."
			},
			{
				"name":"Store Value",
				"description":"Store the sampled value in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Do it every frame. Useful if Sample At is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random Float",
		"category":"Math",
		"image":"./images/SelectRandomFloat.png",
		"description":"Select a random float from an array of floats.",
		"params": [
			{
				"name":"Floats",
				"description":"A possible float choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this float being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Store Float",
				"description":"Store the selected float in a Float Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random Int",
		"category":"Math",
		"image":"./images/SelectRandomInt.png",
		"description":"Select a random Int from an array of Ints.",
		"params": [
			{
				"name":"Ints",
				"description":"A possible int choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this int being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Store Int",
				"description":"Store the selected int in an Int Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Bool Value",
		"category":"Math",
		"image":"./images/SetBoolValue.png",
		"description":"Sets the value of a Bool Variable.",
		"params": [
			{
				"name":"Bool Variable",
				"description":"Bool Variable to set."
			},
			{
				"name":"Bool Value",
				"description":"Value to set it to: Check to set to True, Uncheck to set to False."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Float Value",
		"category":"Math",
		"image":"./images/SetFloatValue.png",
		"description":"Sets the value of a Float Variable.",
		"params": [
			{
				"name":"Float Variable",
				"description":"Variable to set."
			},
			{
				"name":"Float Value",
				"description":"Value to set it to."
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame. Useful if the Value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Int From Float",
		"category":"Math",
		"image":"./images/SetIntFromFloat.png",
		"description":"Sets the value of an integer variable using a float value.",
		"params": [
			{
				"name":"Int Variable",
				"description":"The int variable to set."
			},
			{
				"name":"Float Value",
				"description":"The float value."
			},
			{
				"name":"Every Frame",
				"description":"Do it every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Int Value",
		"category":"Math",
		"image":"./images/SetIntValue.png",
		"description":"Sets the value of an Integer Variable.",
		"params": [
			{
				"name":"Int Variable",
				"description":"Int Variable to Set"
			},
			{
				"name":"Int Value",
				"description":"Int Value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Random Value",
		"category":"Vector2",
		"image":"./images/Vector2RandomValue.png",
		"description":"Sets a Vector2 Variable to a random value.",
		"params": [
			{
				"name":"Shape",
				"description":"Controls the distribution of the random Vector2 values."
			},
			{
				"name":"Min Length",
				"description":"The minimum length for the random Vector2 value."
			},
			{
				"name":"Max Length",
				"description":"The maximum length for the random Vector2 value."
			},
			{
				"name":"Float Param 1",
				"description":"Context sensitive parameter. Depends on the Shape."
			},
			{
				"name":"Float Param 2",
				"description":"Context sensitive parameter. Depends on the Shape."
			},
			{
				"name":"Y Scale",
				"description":"Scale the vector in Y (e.g., to squash a circle into an oval)"
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Vector2 variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Math Expression",
		"category":"Math",
		"image":"./images/MathExpression.png",
		"description":"Math expression action. Enter the expression using variable names and common math syntax. Uses Mathos parser.",
		"params": [
			{
				"name":"Expression",
				"description":"Expression to evaluate. Accepts float, int, and bool variable names. Also: Time.deltaTime, "
			},
			{
				"name":"Store Result As Float",
				"description":"Store the result in a float variable"
			},
			{
				"name":"Store Result As Int",
				"description":"Store the result in an int variable"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Vertex Count",
		"category":"Mesh",
		"image":"./images/GetVertexCount.png",
		"description":"Gets the number of vertices in a GameObject's mesh. Useful in conjunction with GetVertexPosition.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to check."
			},
			{
				"name":"Store Count",
				"description":"Store the vertex count in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Vertex Position",
		"category":"Mesh",
		"image":"./images/GetVertexPosition.png",
		"description":"Gets the position of a vertex in a GameObject's mesh. Hint: Use GetVertexCount to get the number of vertices in a mesh.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to check."
			},
			{
				"name":"Vertex Index",
				"description":"The index of the vertex."
			},
			{
				"name":"Space",
				"description":"Coordinate system to use."
			},
			{
				"name":"Store Position",
				"description":"Store the vertex position in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the mesh is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Movie Texture Audio Settings",
		"category":"Movie",
		"image":"./images/MovieTextureAudioSettings.png",
		"description":"Sets the Game Object to use to play the audio source associated with a movie texture. Note: the Game Object must have an <a href=\"http://unity3d.com/support/documentation/Components/class-AudioSource.html\">AudioSource</a> component.",
		"params": [
			{
				"name":"Movie Texture",
				"description":"The movie texture to set."
			},
			{
				"name":"Game Object",
				"description":"The Game Object to use to play audio. Should have an AudioSource component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Pause Movie Texture",
		"category":"Movie",
		"image":"./images/PauseMovieTexture.png",
		"description":"Pauses a Movie Texture.",
		"params": [
			{
				"name":"Movie Texture",
				"description":"The Movie Texture to pause."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Play Movie Texture",
		"category":"Movie",
		"image":"./images/PlayMovieTexture.png",
		"description":"Plays a Movie Texture. Use the Movie Texture in a Material, or in the GUI.",
		"params": [
			{
				"name":"Movie Texture",
				"description":"The movie texture."
			},
			{
				"name":"Loop",
				"description":"Set looping true/false."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Stop Movie Texture",
		"category":"Movie",
		"image":"./images/StopMovieTexture.png",
		"description":"Stops playing the Movie Texture, and rewinds it to the beginning.",
		"params": [
			{
				"name":"Movie Texture",
				"description":"The Movie Texture to stop."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Explosion Force",
		"category":"Physics",
		"image":"./images/AddExplosionForce.png",
		"description":"Applies a force to a Game Object that simulates explosion effects. The explosion force will fall off linearly with distance. Hint: Use the Explosion Action instead to apply an explosion force to all objects in a blast radius.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to add the explosion force to."
			},
			{
				"name":"Center",
				"description":"The center of the explosion. Hint: this is often the position returned from a GetCollisionInfo action."
			},
			{
				"name":"Force",
				"description":"The strength of the explosion."
			},
			{
				"name":"Radius",
				"description":"The radius of the explosion. Force falls off linearly with distance."
			},
			{
				"name":"Upwards Modifier",
				"description":"Applies the force as if it was applied from beneath the object. This is useful because explosions that throw things up instead of pushing things to the side look cooler. A value of 2 will apply a force as if it is applied from 2 meters below while not changing the actual explosion position."
			},
			{
				"name":"Force Mode",
				"description":"The type of force to apply. See Unity Physics docs."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Force",
		"category":"Physics",
		"image":"./images/AddForce.png",
		"description":"Adds a force to a Game Object. Use Vector3 variable and/or Float variables for each axis.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the force to."
			},
			{
				"name":"At Position",
				"description":"Optionally apply the force at a position on the object. This will also add some torque. The position is often returned from MousePick or GetCollisionInfo actions."
			},
			{
				"name":"Vector",
				"description":"A Vector3 force to add. Optionally override any axis with the X, Y, Z parameters."
			},
			{
				"name":"X",
				"description":"Force along the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"Force along the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Z",
				"description":"Force along the Z axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Space",
				"description":"Apply the force in world or local space."
			},
			{
				"name":"Force Mode",
				"description":"The type of force to apply. See Unity Physics docs."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Torque",
		"category":"Physics",
		"image":"./images/AddTorque.png",
		"description":"Adds torque (rotational force) to a Game Object. NOTE: The game object requires a Rigid Body.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to add torque (rotational force) to."
			},
			{
				"name":"Vector",
				"description":"A Vector3 torque. Optionally override any axis with the X, Y, Z parameters."
			},
			{
				"name":"X",
				"description":"Torque around the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"Torque around the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Z",
				"description":"Torque around the Z axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Space",
				"description":"Apply the force in world or local space."
			},
			{
				"name":"Force Mode",
				"description":"The type of force to apply. See Unity Physics docs."
			},
			{
				"name":"Every Frame",
				"description":"Apply the force every frame that the State is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Collision Event",
		"category":"Physics",
		"image":"./images/CollisionEvent.png",
		"description":"Sends the specified event when the owner collides with a tagged object. Optionally store the collider and collision force in variables for later use. NOTE: Collisions are processed after other actions, so this action should be ordered last in the action list.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to detect collisions on. Unlike regular MonoBehaviour scripts, PlayMaker lets you easily detect collisions on other objects. This lets you organize your behaviours the way you want."
			},
			{
				"name":"Collision",
				"description":"The type of collision to detect."
			},
			{
				"name":"Collide Tag",
				"description":"Tags to collide with."
			},
			{
				"name":"Send Event",
				"description":"Event to send if a collision is detected."
			},
			{
				"name":"Store Collider",
				"description":"Store the Game Object collided with in a {{Game Object Variable}}."
			},
			{
				"name":"Store Force",
				"description":"Store the force of the collision. NOTE: Use Get Collision Info to get more info about the collision."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Explosion",
		"category":"Physics",
		"image":"./images/Explosion.png",
		"description":"Applies an explosion Force to all Game Objects with a Rigid Body inside a Radius.",
		"params": [
			{
				"name":"Center",
				"description":"The world position of the center of the explosion."
			},
			{
				"name":"Force",
				"description":"The strength of the explosion."
			},
			{
				"name":"Radius",
				"description":"The radius of the explosion. Force falls of linearly with distance."
			},
			{
				"name":"Upwards Modifier",
				"description":"Applies the force as if it was applied from beneath the object. This is useful because explosions that throw things up instead of pushing things to the side look cooler. A value of 2 will apply a force as if it is applied from 2 meters below while not changing the actual explosion position."
			},
			{
				"name":"Force Mode",
				"description":"The type of force to apply."
			},
			{
				"name":"Layer Mask",
				"description":"Layers to effect."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you effect all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Find Overlaps",
		"category":"Physics",
		"image":"./images/FindOverlaps.png",
		"description":"Find overlaps with GameObject colliders in the scene.",
		"params": [
			{
				"name":"Position",
				"description":"GameObject position to use for the test shape. Set to none to use world origin (0,0,0)."
			},
			{
				"name":"Offset",
				"description":"Offset position of the shape."
			},
			{
				"name":"Shape",
				"description":"Shape to find overlaps against."
			},
			{
				"name":"Radius",
				"description":"Radius of sphere/capsule."
			},
			{
				"name":"Box",
				"description":"Size of box."
			},
			{
				"name":"Height",
				"description":"The height of the capsule."
			},
			{
				"name":"Max Overlaps",
				"description":"Maximum number of overlaps to detect."
			},
			{
				"name":"Layer Mask",
				"description":"LayerMask name to filter the overlapping objects"
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Include Self",
				"description":"Include self in the array."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nBecause Overlaps can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Store Overlapping",
				"description":"Store overlapping GameObjects in an array."
			},
			{
				"name":"Found Overlaps",
				"description":"Event to send if overlaps were found."
			},
			{
				"name":"No Overlaps",
				"description":"Event to send if no overlaps were found."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a gizmo in the scene view to visualize the shape."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Collision Info",
		"category":"Physics",
		"image":"./images/GetCollisionInfo.png",
		"description":"Gets info on the last collision event. Typically used after a COLLISION ENTER, COLLISION STAY, or COLLISION EXIT system event or Collision Event action to get more info on the collision.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"Get the GameObject hit."
			},
			{
				"name":"Relative Velocity",
				"description":"Get the relative velocity of the collision."
			},
			{
				"name":"Relative Speed",
				"description":"Get the relative speed of the collision. Useful for controlling reactions. E.g., selecting an appropriate sound fx."
			},
			{
				"name":"Contact Point",
				"description":"Get the world position of the collision contact. Useful for spawning effects etc."
			},
			{
				"name":"Contact Normal",
				"description":"Get the collision normal vector. Useful for aligning spawned effects etc."
			},
			{
				"name":"Physics Material Name",
				"description":"Get the name of the physics material on the Game Object Hit. Useful for triggering different effects. Audio, particles..."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Joint Break Info",
		"category":"Physics",
		"image":"./images/GetJointBreakInfo.png",
		"description":"Gets info on the last joint break event.",
		"params": [
			{
				"name":"Break Force",
				"description":"Get the force that broke the joint."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mass",
		"category":"Physics",
		"image":"./images/GetMass.png",
		"description":"Gets the Mass of a Game Object's Rigid Body.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Rigidbody"
			},
			{
				"name":"Store Result",
				"description":"Store the mass in a float variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Particle Collision Info",
		"category":"Physics",
		"image":"./images/GetParticleCollisionInfo.png",
		"description":"Gets info on the last particle collision event. See Unity Particle System docs.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"Get the GameObject hit."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Raycast All Info",
		"category":"Physics",
		"image":"./images/GetRaycastAllInfo.png",
		"description":"Gets info on the last RaycastAll and store in array variables.",
		"params": [
			{
				"name":"Store Hit Objects",
				"description":"Store the GameObjects hit in an array variable."
			},
			{
				"name":"Points",
				"description":"Get the world position of all ray hit point and store them in an array variable."
			},
			{
				"name":"Normals",
				"description":"Get the normal at all hit points and store them in an array variable."
			},
			{
				"name":"Distances",
				"description":"Get the distance along the ray to all hit points and store them in an array variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Warning, this could be affecting performances"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Raycast Hit Info",
		"category":"Physics",
		"image":"./images/GetRaycastHitInfo.png",
		"description":"Gets info on the last Raycast and store in variables.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"Get the GameObject hit by the last Raycast and store it in a variable."
			},
			{
				"name":"Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Speed",
		"category":"Physics",
		"image":"./images/GetSpeed.png",
		"description":"Gets the Speed of a Game Object and stores it in a Float Variable. NOTE: The Game Object must have a RigidBody component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a RigidBody component."
			},
			{
				"name":"Store Result",
				"description":"Store the speed in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Trigger Info",
		"category":"Physics",
		"image":"./images/GetTriggerInfo.png",
		"description":"Gets info on the last trigger event. Typically used after a TRIGGER ENTER, TRIGGER STAY, or TRIGGER EXIT system event or a {{Trigger Event}} action. The owner of the FSM must have a trigger collider.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"The game object that collided with the owner's trigger."
			},
			{
				"name":"Physics Material Name",
				"description":"Useful for triggering different effects. Audio, particles..."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Velocity",
		"category":"Physics",
		"image":"./images/GetVelocity.png",
		"description":"Gets the Velocity of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable. NOTE: The Game Object must have a Rigid Body.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object."
			},
			{
				"name":"Vector",
				"description":"Store the velocity in a Vector3 Variable."
			},
			{
				"name":"X",
				"description":"Store the X component of the velocity in a Float Variable."
			},
			{
				"name":"Y",
				"description":"Store the Y component of the velocity in a Float Variable."
			},
			{
				"name":"Z",
				"description":"Store the Z component of the velocity in a Float Variable."
			},
			{
				"name":"Space",
				"description":"The coordinate space to get the velocity in."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Kinematic",
		"category":"Physics",
		"image":"./images/IsKinematic.png",
		"description":"Tests if a rigid body is controlled by physics. See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody-isKinematic.html\">IsKinematic</a>.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to test."
			},
			{
				"name":"True Event",
				"description":"Event sent if it is kinematic (not controlled by physics)."
			},
			{
				"name":"False Event",
				"description":"Event sent if it is not kinematic (controlled by physics)."
			},
			{
				"name":"Store",
				"description":"Store the result in a Bool Variable"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Sleeping",
		"category":"Physics",
		"image":"./images/IsSleeping.png",
		"description":"Tests if a rigid body is sleeping. See Unity docs: <a href=\"http://unity3d.com/support/documentation/Components/RigidbodySleeping.html\">Rigidbody Sleeping</a>.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to test."
			},
			{
				"name":"True Event",
				"description":"Event to send if sleeping."
			},
			{
				"name":"False Event",
				"description":"Event to send if not sleeping."
			},
			{
				"name":"Store",
				"description":"Store the result in a Bool Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Raycast",
		"category":"Physics",
		"image":"./images/Raycast.png",
		"description":"Casts a Ray against all Colliders in the scene. Use either a Game Object or Vector3 world position as the origin of the ray. Use {{Get Raycast Info}} to get more detailed info.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector3 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector3 direction vector"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specified, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable.\nNote, this is a direction vector not a rotation. Use Look At Direction to rotate a GameObject to this direction."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nBecause raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Raycast All",
		"category":"Physics",
		"image":"./images/RaycastAll.png",
		"description":"Casts a Ray against all Colliders in the scene. Use either a GameObject or Vector3 world position as the origin of the ray. Use GetRaycastAllInfo to get more detailed info.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector3 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector3 direction vector"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specified, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Objects",
				"description":"Store the GameObjects hit in an array variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the normal at the hit point and store it in a variable.\nNote, this is a direction vector not a rotation. Use Look At Direction to rotate a GameObject to this direction."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nBecause raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Drag",
		"category":"Physics",
		"image":"./images/SetDrag.png",
		"description":"Sets the Drag of a Game Object's Rigid Body.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the RigidBody."
			},
			{
				"name":"Drag",
				"description":"Set the Drag."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Gravity",
		"category":"Physics",
		"image":"./images/SetGravity.png",
		"description":"Sets the gravity vector, or individual axis.",
		"params": [
			{
				"name":"Vector",
				"description":"Set Gravity using a Vector3. Or set override individual axis below."
			},
			{
				"name":"X",
				"description":"X amount."
			},
			{
				"name":"Y",
				"description":"Y amount. The most common up/down axis for gravity."
			},
			{
				"name":"Z",
				"description":"Z amount."
			},
			{
				"name":"Every Frame",
				"description":"Update gravity every frame. Useful if you're changing gravity over a period of time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Is Kinematic",
		"category":"Physics",
		"image":"./images/SetIsKinematic.png",
		"description":"Controls whether physics affects the game object. See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody-isKinematic.html\">IsKinematic</a>.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to set."
			},
			{
				"name":"Is Kinematic",
				"description":"Set is kinematic true/false."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Joint Connected Body",
		"category":"Physics",
		"image":"./images/SetJointConnectedBody.png",
		"description":"Connect a joint to a game object.",
		"params": [
			{
				"name":"Joint",
				"description":"The joint to connect. Requires a Joint component."
			},
			{
				"name":"Rigid Body",
				"description":"The game object to connect to the Joint. Set to none to connect the Joint to the world."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Mass",
		"category":"Physics",
		"image":"./images/SetMass.png",
		"description":"Sets the mass of a game object's rigid body. See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody-mass.html\">Rigidbody.Mass</a>",
		"params": [
			{
				"name":"Game Object",
				"description":"A GameObject with a RigidBody component."
			},
			{
				"name":"Mass",
				"description":"Set the mass. Unity recommends a mass between 0.1 and 10."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Velocity",
		"category":"Physics",
		"image":"./images/SetVelocity.png",
		"description":"Sets the velocity of a game object with a rigid body. To leave any axis unchanged, set variable to 'None'.\nIn most cases you should not modify the velocity directly, as this can result in unrealistic behaviour. See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody-velocity.html\">Rigidbody.velocity</a>.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object with the RigidBody component."
			},
			{
				"name":"Vector",
				"description":"Set velocity using Vector3 variable and/or individual channels below."
			},
			{
				"name":"X",
				"description":"Velocity in X axis."
			},
			{
				"name":"Y",
				"description":"Velocity in Y axis."
			},
			{
				"name":"Z",
				"description":"Velocity in Z axis."
			},
			{
				"name":"Space",
				"description":"You can set velocity in world or local space."
			},
			{
				"name":"Every Frame",
				"description":"Set the velocity every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sleep",
		"category":"Physics",
		"image":"./images/Sleep.png",
		"description":"Forces a rigid body to sleep at least one frame. See unity docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody.Sleep.html\">Rigidbody.sleep</a>.",
		"params": [
			{
				"name":"Game Object",
				"description":"A Game Object with a Rigid Body."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Translate Position",
		"category":"Physics",
		"image":"./images/TranslatePosition.png",
		"description":"Translates a Game Object's RigidBody. Unlike Translate this will respect physics collisions.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to move."
			},
			{
				"name":"Vector",
				"description":"Movement vector."
			},
			{
				"name":"X",
				"description":"Movement in x axis."
			},
			{
				"name":"Y",
				"description":"Movement in y axis."
			},
			{
				"name":"Z",
				"description":"Movement in z axis."
			},
			{
				"name":"Space",
				"description":"Coordinate space to move in."
			},
			{
				"name":"Per Second",
				"description":"Translate over one second"
			},
			{
				"name":"Every Frame",
				"description":"Keep running every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger Event",
		"category":"Physics",
		"image":"./images/TriggerEvent.png",
		"description":"Sends an event when the owner collides with a tagged trigger (see Unity Tag and Trigger docs). Optionally send an event and store the collider for later use. NOTE: Collisions are processed after other actions, so this action should be ordered last in the list.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to detect trigger events on."
			},
			{
				"name":"Trigger",
				"description":"The type of trigger event to detect."
			},
			{
				"name":"Collide Tag",
				"description":"Only collide with triggers that have this tag."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the trigger event is detected."
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Use Gravity",
		"category":"Physics",
		"image":"./images/UseGravity.png",
		"description":"Sets whether a Game Object's Rigidbody is affected by Gravity.",
		"params": [
			{
				"name":"Game Object",
				"description":"A Game Object with a RigidBody component."
			},
			{
				"name":"Use Gravity",
				"description":"Enable/disable gravity for the Game Object."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Wake All Rigid Bodies",
		"category":"Physics",
		"image":"./images/WakeAllRigidBodies.png",
		"description":"Rigid bodies start sleeping when they come to rest. This action wakes up all rigid bodies in the scene. E.g., if you Set Gravity and want objects at rest to respond.See Unity Docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody.WakeUp.html\">Rigidbody.WakeUp</a>.",
		"params": [
			{
				"name":"Every Frame",
				"description":"Do it every frame - use with caution! Sleeping is an important physics optimization!"
			}
		]
		,"seeAlso": [
			{"li":"<a href =\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody.WakeUp.html\">Rigidbody.WakeUp</a>"}
		]
	},
	{
		"name":"Wake Up",
		"category":"Physics",
		"image":"./images/WakeUp.png",
		"description":"Forces a Game Object's Rigid Body to wake up. See Unity Docs: <a href=\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody.WakeUp.html\">Rigidbody.WakeUp</a>.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to wake up."
			}
		]
		,"seeAlso": [
			{"li":"<a href =\"http://unity3d.com/support/documentation/ScriptReference/Rigidbody.WakeUp.html\">Rigidbody.WakeUp</a>"}
		]
	},
	{
		"name":"Add Force 2d",
		"category":"Physics2D",
		"image":"./images/AddForce2d.png",
		"description":"Adds a 2d force to a Game Object. Use Vector2 variable and/or Float variables for each axis.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the force to."
			},
			{
				"name":"Force Mode",
				"description":"Option for applying the force"
			},
			{
				"name":"At Position",
				"description":"Optionally apply the force at a position on the object. This will also add some torque. The position is often returned from MousePick or GetCollision2dInfo actions."
			},
			{
				"name":"Vector",
				"description":"A Vector2 force to add. Optionally override any axis with the X, Y parameters."
			},
			{
				"name":"X",
				"description":"Force along the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"Force along the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Vector 3",
				"description":"A Vector3 force to add. z is ignored"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
			{"li":"To add a force in local space use {{Add Relative Force 2d}}"}
		]
	},
	{
		"name":"Add Relative Force 2d",
		"category":"Physics2D",
		"image":"./images/AddRelativeForce2d.png",
		"description":"Adds a relative 2d force to a Game Object. Use Vector2 variable and/or Float variables for each axis.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to apply the force to."
			},
			{
				"name":"Force Mode",
				"description":"Option for applying the force"
			},
			{
				"name":"Vector",
				"description":"A Vector2 force to add. Optionally override any axis with the X, Y parameters."
			},
			{
				"name":"X",
				"description":"Force along the X axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Y",
				"description":"Force along the Y axis. To leave unchanged, set to 'None'."
			},
			{
				"name":"Vector 3",
				"description":"A Vector3 force to add. z is ignored"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Torque 2d",
		"category":"Physics2D",
		"image":"./images/AddTorque2d.png",
		"description":"Adds a 2d torque (rotational force) to a Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to add torque to."
			},
			{
				"name":"Force Mode",
				"description":"Option for applying the force"
			},
			{
				"name":"Torque",
				"description":"Torque"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Collision2D Event",
		"category":"Physics2D",
		"image":"./images/Collision2dEvent.png",
		"description":"Detect collisions between the Owner of this FSM and other Game Objects that have RigidBody2D components. NOTE: The system events, COLLISION ENTER 2D, COLLISION STAY 2D, and COLLISION EXIT 2D are sent automatically on collisions with any object. Use this action instead to filter collisions by Tag.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to detect collisions on."
			},
			{
				"name":"Collision",
				"description":"The type of collision to detect."
			},
			{
				"name":"Ignore Disabled",
				"description":"If true, Collision that are not enabled will be ignored."
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag."
			},
			{
				"name":"Send Event",
				"description":"Event to send if a collision is detected."
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			},
			{
				"name":"Store Force",
				"description":"Store the force of the collision. NOTE: Use Get Collision 2D Info to get more info about the collision."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Collision2D Info",
		"category":"Physics2D",
		"image":"./images/GetCollision2dInfo.png",
		"description":"Gets info on the last collision 2D event and store in variables. See Unity and PlayMaker docs on Unity 2D physics.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"Get the GameObject hit."
			},
			{
				"name":"Enabled",
				"description":"Get the enabled state collision. if false, collision had no effect, like when using the PlatformEffector2D component set to one way"
			},
			{
				"name":"Relative Velocity",
				"description":"Get the relative velocity of the collision."
			},
			{
				"name":"Relative Speed",
				"description":"Get the relative speed of the collision. Useful for controlling reactions. E.g., selecting an appropriate sound fx."
			},
			{
				"name":"Contact Point",
				"description":"Get the world position of the collision contact. Useful for spawning effects etc."
			},
			{
				"name":"Contact Point 2d",
				"description":"Get the 2d world position of the collision contact. Useful for spawning effects etc."
			},
			{
				"name":"Contact Normal",
				"description":"Get the collision normal vector. Useful for aligning spawned effects etc."
			},
			{
				"name":"Contact Normal 2d",
				"description":"Get the 2d collision normal vector. Useful for aligning spawned effects etc."
			},
			{
				"name":"Shape Count",
				"description":"The number of separate shaped regions in the collider."
			},
			{
				"name":"Physics 2d Material Name",
				"description":"Get the name of the physics 2D material of the colliding GameObject. Useful for triggering different effects. Audio, particles..."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Joint Break 2d Info",
		"category":"Physics2D",
		"image":"./images/GetJointBreak2dInfo.png",
		"description":"Gets info on the last joint break 2D event.",
		"params": [
			{
				"name":"Broken Joint",
				"description":"Get the broken joint."
			},
			{
				"name":"Reaction Force",
				"description":"Get the reaction force exerted by the broken joint. Unity 5.3+"
			},
			{
				"name":"Reaction Force Magnitude",
				"description":"Get the magnitude of the reaction force exerted by the broken joint. Unity 5.3+"
			},
			{
				"name":"Reaction Torque",
				"description":"Get the reaction torque exerted by the broken joint. Unity 5.3+"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Mass 2d",
		"category":"Physics2D",
		"image":"./images/GetMass2d.png",
		"description":"Gets the Mass of a Game Object's Rigid Body 2D.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Rigidbody2D attached."
			},
			{
				"name":"Store Result",
				"description":"Store the mass of gameObject."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Line Cast 2d",
		"category":"Physics2D",
		"image":"./images/GetNextLineCast2d.png",
		"description":"Iterate through a list of all colliders detected by a LineCastThe colliders iterated are sorted in order of increasing Z coordinate. No iteration will take place if there are no colliders within the area.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector2 world position. \nOr use fromGameObject parameter. If both define, will add fromPosition to the fromGameObject position"
			},
			{
				"name":"To Game Object",
				"description":"End ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"To Position",
				"description":"End ray at a vector2 world position. \nOr use fromGameObject parameter. If both define, will add toPosition to the ToGameObject position"
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. leave to none for no effect"
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. leave to none"
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Colliders Count",
				"description":"Store the number of colliders found for this overlap."
			},
			{
				"name":"Store Next Collider",
				"description":"Store the next collider in a GameObject variable."
			},
			{
				"name":"Store Next Hit Point",
				"description":"Get the 2d position of the next ray hit point and store it in a variable."
			},
			{
				"name":"Store Next Hit Normal",
				"description":"Get the 2d normal at the next hit point and store it in a variable.\nNote, this is a direction vector not a rotation."
			},
			{
				"name":"Store Next Hit Distance",
				"description":"Get the distance along the ray to the next hit point and store it in a variable."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next collider."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more colliders to iterate."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Overlap Area 2d",
		"category":"Physics2D",
		"image":"./images/GetNextOverlapArea2d.png",
		"description":"Iterate through a list of all colliders that fall within a rectangular area.The colliders iterated are sorted in order of increasing Z coordinate. No iteration will take place if there are no colliders within the area.",
		"params": [
			{
				"name":"First Corner Game Object",
				"description":"First corner of the rectangle area using the game object position. \nOr use firstCornerPosition parameter."
			},
			{
				"name":"First Corner Position",
				"description":"First Corner of the rectangle area as a world position. \nOr use FirstCornerGameObject parameter. If both define, will add firstCornerPosition to the FirstCornerGameObject position"
			},
			{
				"name":"Second Corner Game Object",
				"description":"Second corner of the rectangle area using the game object position. \nOr use secondCornerPosition parameter."
			},
			{
				"name":"Second Corner Position",
				"description":"Second Corner rectangle area as a world position. \nOr use SecondCornerGameObject parameter. If both define, will add secondCornerPosition to the SecondCornerGameObject position"
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. leave to none for no effect"
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. leave to none"
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Colliders Count",
				"description":"Store the number of colliders found for this overlap."
			},
			{
				"name":"Store Next Collider",
				"description":"Store the next collider in a GameObject variable."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next collider."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more colliders to iterate."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Overlap Circle 2d",
		"category":"Physics2D",
		"image":"./images/GetNextOverlapCircle2d.png",
		"description":"Iterate through a list of all colliders that fall within a circular area.The colliders iterated are sorted in order of increasing Z coordinate. No iteration will take place if there are no colliders within the area.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Center of the circle area. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"CEnter of the circle area as a world position. \nOr use fromGameObject parameter. If both define, will add fromPosition to the fromGameObject position"
			},
			{
				"name":"Radius",
				"description":"The circle radius"
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. leave to none for no effect"
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. leave to none"
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Colliders Count",
				"description":"Store the number of colliders found for this overlap."
			},
			{
				"name":"Store Next Collider",
				"description":"Store the next collider in a GameObject variable."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next collider."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more colliders to iterate."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Overlap Point 2d",
		"category":"Physics2D",
		"image":"./images/GetNextOverlapPoint2d.png",
		"description":"Iterate through a list of all colliders that overlap a point in space.The colliders iterated are sorted in order of increasing Z coordinate. No iteration will take place if there are no colliders overlap this point.",
		"params": [
			{
				"name":"Game Object",
				"description":"Point using the gameObject position. \nOr use From Position parameter."
			},
			{
				"name":"Position",
				"description":"Point as a world position. \nOr use gameObject parameter. If both define, will add position to the gameObject position"
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. leave to none for no effect"
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. leave to none"
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Colliders Count",
				"description":"Store the number of colliders found for this overlap."
			},
			{
				"name":"Store Next Collider",
				"description":"Store the next collider in a GameObject variable."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next collider."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more colliders to iterate."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Next Ray Cast 2d",
		"category":"Physics2D",
		"image":"./images/GetNextRayCast2d.png",
		"description":"Iterate through a list of all colliders detected by a RayCastThe colliders iterated are sorted in order of increasing Z coordinate. No iteration will take place if there are no colliders within the area.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector2 world position. \nOr use Game Object parameter."
			},
			{
				"name":"Direction",
				"description":"A vector2 direction vector"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specified, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. leave to none for no effect"
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. leave to none"
			},
			{
				"name":"Reset Flag",
				"description":"If you want to reset the iteration, raise this flag to true when you enter the state, it will indicate you want to start from the beginning again"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Colliders Count",
				"description":"Store the number of colliders found for this overlap."
			},
			{
				"name":"Store Next Collider",
				"description":"Store the next collider in a GameObject variable."
			},
			{
				"name":"Store Next Hit Point",
				"description":"Get the 2d position of the next ray hit point and store it in a variable."
			},
			{
				"name":"Store Next Hit Normal",
				"description":"Get the 2d normal at the next hit point and store it in a variable.\nNote, this is a direction vector not a rotation."
			},
			{
				"name":"Store Next Hit Distance",
				"description":"Get the distance along the ray to the next hit point and store it in a variable."
			},
			{
				"name":"Store Next Hit Fraction",
				"description":"Get the fraction along the ray to the hit point and store it in a variable. If the ray's direction vector is normalized then this value is simply the distance between the origin and the hit point. If the direction is not normalized then this distance is expressed as a 'fraction' (which could be greater than 1) of the vector's magnitude."
			},
			{
				"name":"Loop Event",
				"description":"Event to send to get the next collider."
			},
			{
				"name":"Finished Event",
				"description":"Event to send when there are no more colliders to iterate."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Ray Cast Hit 2d Info",
		"category":"Physics2D",
		"image":"./images/GetRayCastHit2dInfo.png",
		"description":"Gets info on the last 2d Raycast or LineCast and store in variables.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"Get the GameObject hit by the last Raycast and store it in a variable."
			},
			{
				"name":"Point",
				"description":"Get the world position of the ray hit point and store it in a variable."
			},
			{
				"name":"Normal",
				"description":"Get the normal at the hit point and store it in a variable."
			},
			{
				"name":"Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Speed 2d",
		"category":"Physics2D",
		"image":"./images/GetSpeed2d.png",
		"description":"Gets the 2d Speed of a Game Object and stores it in a Float Variable. NOTE: The Game Object must have a rigid body 2D.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Rigidbody2D attached"
			},
			{
				"name":"Store Result",
				"description":"The speed, or in technical terms: velocity magnitude"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Trigger2D Info",
		"category":"Physics2D",
		"image":"./images/GetTrigger2dInfo.png",
		"description":"Gets info on the last Trigger 2d event and store in variables.  See Unity and PlayMaker docs on Unity 2D physics.",
		"params": [
			{
				"name":"Game Object Hit",
				"description":"Get the GameObject hit."
			},
			{
				"name":"Shape Count",
				"description":"The number of separate shaped regions in the collider."
			},
			{
				"name":"Physics 2d Material Name",
				"description":"Useful for triggering different effects. Audio, particles..."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Velocity 2d",
		"category":"Physics2D",
		"image":"./images/GetVelocity2d.png",
		"description":"Gets the 2d Velocity of a Game Object and stores it in a Vector2 Variable or each Axis in a Float Variable. NOTE: The Game Object must have a Rigid Body 2D.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Rigidbody2D attached"
			},
			{
				"name":"Vector",
				"description":"The velocity"
			},
			{
				"name":"X",
				"description":"The x value of the velocity"
			},
			{
				"name":"Y",
				"description":"The y value of the velocity"
			},
			{
				"name":"Space",
				"description":"The space reference to express the velocity"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Fixed Angle 2d",
		"category":"Physics2D",
		"image":"./images/IsFixedAngle2d.png",
		"description":"Is the rigidbody2D constrained from rotating? Note: Prefer SetRigidBody2dConstraints when working in Unity 5 or higher.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Rigidbody2D attached"
			},
			{
				"name":"True Event",
				"description":"Event sent if the Rigidbody2D does have fixed angle"
			},
			{
				"name":"False Event",
				"description":"Event sent if the Rigidbody2D doesn't have fixed angle"
			},
			{
				"name":"Store",
				"description":"Store the fixedAngle flag"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Kinematic 2d",
		"category":"Physics2D",
		"image":"./images/IsKinematic2d.png",
		"description":"Tests if a Game Object's Rigid Body 2D is Kinematic.",
		"params": [
			{
				"name":"Game Object",
				"description":"the GameObject with a Rigidbody2D attached"
			},
			{
				"name":"True Event",
				"description":"Event Sent if Kinematic"
			},
			{
				"name":"False Event",
				"description":"Event sent if not Kinematic"
			},
			{
				"name":"Store",
				"description":"Store the Kinematic state"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Is Sleeping 2d",
		"category":"Physics2D",
		"image":"./images/IsSleeping2d.png",
		"description":"Tests if a Game Object's Rigidbody 2D is sleeping.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Rigidbody2D attached"
			},
			{
				"name":"True Event",
				"description":"Event sent if sleeping"
			},
			{
				"name":"False Event",
				"description":"Event sent if not sleeping"
			},
			{
				"name":"Store",
				"description":"Store the value in a Boolean variable"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Line Cast 2d",
		"category":"Physics2D",
		"image":"./images/LineCast2d.png",
		"description":"Casts a Ray against all Colliders in the scene.A linecast is an imaginary line between two points in world space. Any object making contact with the beam can be detected and reported. This differs from the similar raycast in that raycasting specifies the line using an origin and direction.Use GetRaycastHit2dInfo to get more detailed info.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector2 world position. \nOr use fromGameObject parameter. If both define, will add fromPosition to the fromGameObject position"
			},
			{
				"name":"To Game Object",
				"description":"End ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"To Position",
				"description":"End ray at a vector2 world position. \nOr use fromGameObject parameter. If both define, will add toPosition to the ToGameObject position"
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. leave to none for no effect"
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. leave to none"
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the 2d position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the 2d normal at the hit point and store it in a variable.\nNote, this is a direction vector not a rotation."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nBecause raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Look At 2d",
		"category":"Transform",
		"image":"./images/LookAt2d.png",
		"description":"Rotates a 2d Game Object on it's z axis so its forward vector points at a 2d or 3d position.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Vector 2 Target",
				"description":"The 2d position to Look At."
			},
			{
				"name":"Vector 3 Target",
				"description":"The 3d position to Look At. If not set to none, will be added to the 2d target"
			},
			{
				"name":"Rotation Offset",
				"description":"Set the GameObject starting offset. In degrees. 0 if your object is facing right, 180 if facing left etc..."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line from the GameObject to the Target."
			},
			{
				"name":"Debug Line Color",
				"description":"Color to use for the debug line."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Look At 2d Game Object",
		"category":"Transform",
		"image":"./images/LookAt2dGameObject.png",
		"description":"Rotates a 2d Game Object on it's z axis so its forward vector points at a Target.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Target Object",
				"description":"The GameObject to Look At."
			},
			{
				"name":"Rotation Offset",
				"description":"Set the GameObject starting offset. In degrees. 0 if your object is facing right, 180 if facing left etc..."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line from the GameObject to the Target."
			},
			{
				"name":"Debug Line Color",
				"description":"Color to use for the debug line."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Pick 2d",
		"category":"Input",
		"image":"./images/MousePick2d.png",
		"description":"Perform a Mouse Pick on a 2d scene and stores the results. Use Ray Distance to set how close the camera must be to pick the 2d object.",
		"params": [
			{
				"name":"Store Did Pick Object",
				"description":"Store if a GameObject was picked in a Bool variable. True if a GameObject was picked, otherwise false."
			},
			{
				"name":"Store Game Object",
				"description":"Store the picked GameObject in a variable."
			},
			{
				"name":"Store Point",
				"description":"Store the picked point in a variable."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Mouse Pick 2d Event",
		"category":"Input",
		"image":"./images/MousePick2dEvent.png",
		"description":"Sends Events based on mouse interactions with a 2d Game Object: MouseOver, MouseDown, MouseUp, MouseOff.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Collider2D attached."
			},
			{
				"name":"Mouse Over",
				"description":"Event to send when the mouse is over the GameObject."
			},
			{
				"name":"Mouse Down",
				"description":"Event to send when the mouse is pressed while over the GameObject."
			},
			{
				"name":"Mouse Up",
				"description":"Event to send when the mouse is released while over the GameObject."
			},
			{
				"name":"Mouse Off",
				"description":"Event to send when the mouse moves off the GameObject."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Move Position 2d",
		"category":"Physics2D",
		"image":"./images/MovePosition2d.png",
		"description":"Moves a Game Object's RigidBody2D to a new position. Unlike SetPosition this will respect physics collisions.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to move."
			},
			{
				"name":"Vector",
				"description":"Movement vector."
			},
			{
				"name":"X",
				"description":"Movement in x axis."
			},
			{
				"name":"Y",
				"description":"Movement in y axis."
			},
			{
				"name":"Space",
				"description":"Coordinate space to move in."
			},
			{
				"name":"Every Frame",
				"description":"Keep running every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Ray Cast 2d",
		"category":"Physics2D",
		"image":"./images/RayCast2d.png",
		"description":"Casts a Ray against all Colliders in the scene. A raycast is conceptually like a laser beam that is fired from a point in space along a particular direction. Any object making contact with the beam can be detected and reported. Use GetRaycastHit2dInfo to get more detailed info.",
		"params": [
			{
				"name":"From Game Object",
				"description":"Start ray at game object position. \nOr use From Position parameter."
			},
			{
				"name":"From Position",
				"description":"Start ray at a vector2 world position, or offset from the GameObject's position."
			},
			{
				"name":"Direction",
				"description":"A vector2 direction vector"
			},
			{
				"name":"Space",
				"description":"Cast the ray in world or local space. Note if no Game Object is specified, the direction is in world space."
			},
			{
				"name":"Distance",
				"description":"The length of the ray. Set to -1 for infinity."
			},
			{
				"name":"Min Depth",
				"description":"Only include objects with a Z coordinate (depth) greater than this value. Leave as None for no filtering."
			},
			{
				"name":"Max Depth",
				"description":"Only include objects with a Z coordinate (depth) less than this value. Leave as none for no filtering."
			},
			{
				"name":"Hit Event",
				"description":"Event to send if the ray hits an object."
			},
			{
				"name":"Store Did Hit",
				"description":"Set a bool variable to true if hit something, otherwise false."
			},
			{
				"name":"Store Hit Object",
				"description":"Store the game object hit in a variable."
			},
			{
				"name":"Store Hit Point",
				"description":"Get the 2d position of the ray hit point and store it in a variable."
			},
			{
				"name":"Store Hit Normal",
				"description":"Get the 2d normal at the hit point and store it in a variable. \nNote, this is a direction vector not a rotation."
			},
			{
				"name":"Store Hit Distance",
				"description":"Get the distance along the ray to the hit point and store it in a variable."
			},
			{
				"name":"Store Hit Fraction",
				"description":"Get the fraction along the ray to the hit point and store it in a variable. If the ray's direction vector is normalized then this value is simply the distance between the origin and the hit point. If the direction is not normalized then this distance is expressed as a 'fraction' (which could be greater than 1) of the vector's magnitude."
			},
			{
				"name":"Repeat Interval",
				"description":"Set how often to cast a ray. 0 = once, don't repeat; 1 = everyFrame; 2 = every other frame... \nBecause raycasts can get expensive use the highest repeat interval you can get away with."
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Debug Color",
				"description":"The color to use for the debug line."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line. Note: Check Gizmos in the Game View to see it in game."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Screen Pick 2d",
		"category":"Input",
		"image":"./images/ScreenPick2d.png",
		"description":"Perform a raycast into the 2d scene using screen coordinates and stores the results. Use Ray Distance to set how close the camera must be to pick the 2d object. NOTE: Uses the MainCamera!",
		"params": [
			{
				"name":"Screen Vector",
				"description":"A Vector3 screen position. Commonly stored by other actions."
			},
			{
				"name":"Screen X",
				"description":"X position on screen."
			},
			{
				"name":"Screen Y",
				"description":"Y position on screen."
			},
			{
				"name":"Normalized",
				"description":"Are the supplied screen coordinates normalized (0-1), or in pixels."
			},
			{
				"name":"Store Did Pick Object",
				"description":"Store whether the Screen pick did pick a GameObject"
			},
			{
				"name":"Store Game Object",
				"description":"Store the picked GameObject"
			},
			{
				"name":"Store Point",
				"description":"Store the picked position in world Space"
			},
			{
				"name":"Layer Mask",
				"description":"Pick only from these layers."
			},
			{
				"name":"Invert Mask",
				"description":"Invert the mask, so you pick from all layers except those defined above."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Collider 2d Is Trigger",
		"category":"Physics2D",
		"image":"./images/SetCollider2dIsTrigger.png",
		"description":"Set the isTrigger option of a Collider2D. Optionally set all collider2D found on the gameobject Target.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Collider2D attached"
			},
			{
				"name":"Is Trigger",
				"description":"The flag value"
			},
			{
				"name":"Set All Colliders",
				"description":"Set all Colliders on the GameObject target"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Gravity 2d",
		"category":"Physics2D",
		"image":"./images/SetGravity2d.png",
		"description":"Sets the gravity vector, or individual axis.",
		"params": [
			{
				"name":"Vector",
				"description":"Gravity as Vector2."
			},
			{
				"name":"X",
				"description":"Override the x value of the gravity"
			},
			{
				"name":"Y",
				"description":"Override the y value of the gravity"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Gravity 2d Scale",
		"category":"Physics2D",
		"image":"./images/SetGravity2dScale.png",
		"description":"Sets The degree to which this object is affected by gravity.  NOTE: Game object must have a rigidbody 2D.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Rigidbody 2d attached"
			},
			{
				"name":"Gravity Scale",
				"description":"The gravity scale effect"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Hinge Joint 2d Properties",
		"category":"Physics2D",
		"image":"./images/SetHingeJoint2dProperties.png",
		"description":"Sets the various properties of a HingeJoint2d component",
		"params": [
			{
				"name":"Game Object",
				"description":"The HingeJoint2d target"
			},
			{
				"name":"Use Limits",
				"description":"Should limits be placed on the range of rotation?"
			},
			{
				"name":"Min",
				"description":"Lower angular limit of rotation."
			},
			{
				"name":"Max",
				"description":"Upper angular limit of rotation"
			},
			{
				"name":"Use Motor",
				"description":"Should a motor force be applied automatically to the Rigidbody2D?"
			},
			{
				"name":"Motor Speed",
				"description":"The desired speed for the Rigidbody2D to reach as it moves with the joint."
			},
			{
				"name":"Max Motor Torque",
				"description":"The maximum force that can be applied to the Rigidbody2D at the joint to attain the target speed."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Is Fixed Angle 2d",
		"category":"Physics2D",
		"image":"./images/SetIsFixedAngle2d.png",
		"description":"Controls whether the rigidbody 2D should be prevented from rotating",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Rigidbody2D attached"
			},
			{
				"name":"Is Fixed Angle",
				"description":"The flag value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Is Kinematic 2d",
		"category":"Physics2D",
		"image":"./images/SetIsKinematic2d.png",
		"description":"Controls whether 2D physics affects the Game Object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Rigidbody2D attached"
			},
			{
				"name":"Is Kinematic",
				"description":"The isKinematic value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Mass 2d",
		"category":"Physics2D",
		"image":"./images/SetMass2d.png",
		"description":"Sets the Mass of a Game Object's Rigid Body 2D.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Rigidbody2D attached"
			},
			{
				"name":"Mass",
				"description":"The Mass"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Velocity 2d",
		"category":"Physics2D",
		"image":"./images/SetVelocity2d.png",
		"description":"Sets the 2d Velocity of a Game Object. To leave any axis unchanged, set variable to 'None'. NOTE: Game object must have a rigidbody 2D.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Rigidbody2D attached"
			},
			{
				"name":"Vector",
				"description":"Use a Vector2 value for the velocity and/or set individual axis below. If set to None, keeps current velocity."
			},
			{
				"name":"X",
				"description":"Set the x value of the velocity. If None keep current x velocity."
			},
			{
				"name":"Y",
				"description":"Set the y value of the velocity. If None keep current y velocity."
			},
			{
				"name":"Space",
				"description":"Set velocity in local or word space."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Wheel Joint 2d Properties",
		"category":"Physics2D",
		"image":"./images/SetWheelJoint2dProperties.png",
		"description":"Sets the various properties of a WheelJoint2d component",
		"params": [
			{
				"name":"Game Object",
				"description":"The WheelJoint2d target"
			},
			{
				"name":"Use Motor",
				"description":"Should a motor force be applied automatically to the Rigidbody2D?"
			},
			{
				"name":"Motor Speed",
				"description":"The desired speed for the Rigidbody2D to reach as it moves with the joint."
			},
			{
				"name":"Max Motor Torque",
				"description":"The maximum force that can be applied to the Rigidbody2D at the joint to attain the target speed."
			},
			{
				"name":"Angle",
				"description":"The world angle along which the suspension will move. This provides 2D constrained motion similar to a SliderJoint2D. This is typically how suspension works in the real world."
			},
			{
				"name":"Damping Ratio",
				"description":"The amount by which the suspension spring force is reduced in proportion to the movement speed."
			},
			{
				"name":"Frequency",
				"description":"The frequency at which the suspension spring oscillates."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sleep 2d",
		"category":"Physics2D",
		"image":"./images/Sleep2d.png",
		"description":"Forces a Game Object's Rigid Body 2D to Sleep at least one frame.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Rigidbody2d attached"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Smooth Look At 2d",
		"category":"Transform",
		"image":"./images/SmoothLookAt2d.png",
		"description":"Smoothly Rotates a 2d Game Object so its right vector points at a Target. The target can be defined as a 2d Game Object or a 2d/3d world Position. If you specify both, then the position will be used as a local offset from the object's position.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate to face a target."
			},
			{
				"name":"Target Object",
				"description":"A target GameObject."
			},
			{
				"name":"Target Position 2d",
				"description":"A target position. If a Target Object is defined, this is used as a local offset."
			},
			{
				"name":"Target Position",
				"description":"A target position. If a Target Object is defined, this is used as a local offset."
			},
			{
				"name":"Rotation Offset",
				"description":"Set the GameObject starting offset. In degrees. 0 if your object is facing right, 180 if facing left etc..."
			},
			{
				"name":"Speed",
				"description":"How fast to rotate to look at the target. Higher numbers are faster. Note, you can enter numbers outside the slider range."
			},
			{
				"name":"Use Limits",
				"description":"Set min/max angle limits for the look at rotation. Note, you can use a scene gizmo to set the angles."
			},
			{
				"name":"Min Angle",
				"description":"Min angle limit."
			},
			{
				"name":"Max Angle",
				"description":"Max angle limit."
			},
			{
				"name":"Debug",
				"description":"Draw a line in the Scene View to the look at position."
			},
			{
				"name":"Finish Tolerance",
				"description":"If the angle to the target is less than this, send the Finish Event below. Measured in degrees."
			},
			{
				"name":"Finish Event",
				"description":"Event to send if the angle to target is less than the Finish Tolerance."
			},
			{
				"name":"Finish",
				"description":"Should the event stop running when it succeeds."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Touch Object 2d Event",
		"category":"Device",
		"image":"./images/TouchObject2dEvent.png",
		"description":"Sends events when a 2d object is touched. Optionally filter by a fingerID. NOTE: Uses the MainCamera!",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to detect touches on."
			},
			{
				"name":"Finger Id",
				"description":"Only detect touches that match this fingerID, or set to None."
			},
			{
				"name":"Touch Began",
				"description":"Event to send on touch began."
			},
			{
				"name":"Touch Moved",
				"description":"Event to send on touch moved."
			},
			{
				"name":"Touch Stationary",
				"description":"Event to send on stationary touch."
			},
			{
				"name":"Touch Ended",
				"description":"Event to send on touch ended."
			},
			{
				"name":"Touch Canceled",
				"description":"Event to send on touch cancel."
			},
			{
				"name":"Store Finger Id",
				"description":"Store the fingerId of the touch."
			},
			{
				"name":"Store Hit Point",
				"description":"Store the 2d position where the object was touched."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Translate Position 2d",
		"category":"Physics",
		"image":"./images/TranslatePosition2d.png",
		"description":"Translates a Game Object's RigidBody2d. Unlike Translate2d this will respect physics collisions.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to move."
			},
			{
				"name":"Vector",
				"description":"Movement vector."
			},
			{
				"name":"X",
				"description":"Movement in x axis."
			},
			{
				"name":"Y",
				"description":"Movement in y axis."
			},
			{
				"name":"Space",
				"description":"Coordinate space to move in."
			},
			{
				"name":"Per Second",
				"description":"Translate over one second"
			},
			{
				"name":"Every Frame",
				"description":"Keep running every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Trigger2D Event",
		"category":"Physics2D",
		"image":"./images/Trigger2dEvent.png",
		"description":"Detect 2D trigger collisions between the Owner of this FSM and other Game Objects that have RigidBody2D components. NOTE: The system events, TRIGGER ENTER 2D, TRIGGER STAY 2D, and TRIGGER EXIT 2D are sent automatically on collisions triggers with any object. Use this action to filter collision triggers by Tag.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to detect collisions on."
			},
			{
				"name":"Trigger",
				"description":"The type of trigger event to detect."
			},
			{
				"name":"Collide Tag",
				"description":"Filter by Tag."
			},
			{
				"name":"Send Event",
				"description":"Event to send if the trigger event is detected."
			},
			{
				"name":"Store Collider",
				"description":"Store the GameObject that collided with the Owner of this FSM."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Wake All Rigid Bodies 2d",
		"category":"Physics2D",
		"image":"./images/WakeAllRigidBodies2d.png",
		"description":"Rigid bodies 2D start sleeping when they come to rest. This action wakes up all rigid bodies 2D in the scene. E.g., if you Set Gravity 2D and want objects at rest to respond.",
		"params": [
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Note: This would be very expensive!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Wake Up 2d",
		"category":"Physics2D",
		"image":"./images/WakeUp2d.png",
		"description":"Forces a Game Object's Rigid Body 2D to wake up.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a Rigidbody2d attached"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Delete All",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsDeleteAll.png",
		"description":"Removes all keys and values from the preferences. Use with caution.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Delete Key",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsDeleteKey.png",
		"description":"Removes key and its corresponding value from the preferences.",
		"params": [
			{
				"name":"Key",
				"description":"The name of the PlayerPref."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Get Float",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsGetFloat.png",
		"description":"Returns the value corresponding to key in the preference file if it exists.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Variables",
				"description":"Store the float in a Float Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Get Int",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsGetInt.png",
		"description":"Returns the value corresponding to key in the preference file if it exists.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Variables",
				"description":"Store the integer in an Int Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Get String",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsGetString.png",
		"description":"Returns the value corresponding to key in the preference file if it exists.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Variables",
				"description":"Store the string in a String Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Has Key",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsHasKey.png",
		"description":"Returns true if PlayerPref key exists in the preferences.",
		"params": [
			{
				"name":"Key",
				"description":"The name of the PlayerPref to test for."
			},
			{
				"name":"Variable",
				"description":"Store the result in a bool variable."
			},
			{
				"name":"True Event",
				"description":"Event to send if the key exists."
			},
			{
				"name":"False Event",
				"description":"Event to send if the key does not exist."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Load Variable",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsLoadVariable.png",
		"description":"Load variable value saved with {{PlayerPrefs Save Variable}}. The Key should be a unique identifier for the variable.",
		"params": [
			{
				"name":"Key",
				"description":"Case sensitive key."
			},
			{
				"name":"Variable",
				"description":"The variable to load."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Save Variable",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsSaveVariable.png",
		"description":"Save a variable value in PlayerPrefs. You can load the value later with {{PlayerPrefs Load Variable}}.",
		"params": [
			{
				"name":"Key",
				"description":"Case sensitive key."
			},
			{
				"name":"Variable",
				"description":"The variable to save."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Set Float",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsSetFloat.png",
		"description":"Sets the value of the preference identified by key. Lets you save a float value that you can load later with {{PlayerPrefs Get Float}}.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Values",
				"description":"The value to save."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Set Int",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsSetInt.png",
		"description":"Sets the value of the preference identified by key. Lets you save an int value that you can load later with {{PlayerPrefs Get Int}}.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Values",
				"description":"The value to save."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"PlayerPrefs Set String",
		"category":"PlayerPrefs",
		"image":"./images/PlayerPrefsSetString.png",
		"description":"Sets the value of the preference identified by key. Lets you save a string that you can load later with {{PlayerPrefs Get String}}.",
		"params": [
			{
				"name":"Keys",
				"description":"Case sensitive key."
			},
			{
				"name":"Values",
				"description":"The value to save."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rebuild Textures",
		"category":"Substance",
		"image":"./images/RebuildTextures.png",
		"description":"Rebuilds all dirty textures. By default the rebuild is spread over multiple frames so it won't halt the game. Check Immediately to rebuild all textures in a single frame.",
		"params": [
			{
				"name":"Substance Material",
				"description":"The Substance material."
			},
			{
				"name":"Immediately",
				"description":"Rebuild now!"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if you're animating Substance parameters."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Procedural Boolean",
		"category":"Substance",
		"image":"./images/SetProceduralBoolean.png",
		"description":"Set a named bool property in a Substance material. NOTE: Use Rebuild Textures after setting Substance properties.",
		"params": [
			{
				"name":"Substance Material",
				"description":"The Substance Material."
			},
			{
				"name":"Bool Property",
				"description":"The named bool property in the material."
			},
			{
				"name":"Bool Value",
				"description":"The value to set the property to."
			},
			{
				"name":"Every Frame",
				"description":"NOTE: Updating procedural materials every frame can be very slow!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Procedural Color",
		"category":"Substance",
		"image":"./images/SetProceduralColor.png",
		"description":"Set a named color property in a Substance material. NOTE: Use Rebuild Textures after setting Substance properties.",
		"params": [
			{
				"name":"Substance Material",
				"description":"The Substance Material."
			},
			{
				"name":"Color Property",
				"description":"The named color property in the material."
			},
			{
				"name":"Color Value",
				"description":"The value to set the property to."
			},
			{
				"name":"Every Frame",
				"description":"NOTE: Updating procedural materials every frame can be very slow!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Procedural Float",
		"category":"Substance",
		"image":"./images/SetProceduralFloat.png",
		"description":"Set a named float property in a Substance material. NOTE: Use Rebuild Textures after setting Substance properties.",
		"params": [
			{
				"name":"Substance Material",
				"description":"The Substance Material."
			},
			{
				"name":"Float Property",
				"description":"The named float property in the material."
			},
			{
				"name":"Float Value",
				"description":"The value to set the property to."
			},
			{
				"name":"Every Frame",
				"description":"NOTE: Updating procedural materials every frame can be very slow!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Procedural Vector2",
		"category":"Substance",
		"image":"./images/SetProceduralVector2.png",
		"description":"Set a named Vector2 property in a Substance material. NOTE: Use Rebuild Textures after setting Substance properties.",
		"params": [
			{
				"name":"Substance Material",
				"description":"The Substance Material."
			},
			{
				"name":"Vector 2 Property",
				"description":"The named vector property in the material."
			},
			{
				"name":"Vector 2 Value",
				"description":"The Vector3 value to set the property to.\nNOTE: Use Set Procedural Vector2 for Vector3 values."
			},
			{
				"name":"Every Frame",
				"description":"NOTE: Updating procedural materials every frame can be very slow!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Procedural Vector3",
		"category":"Substance",
		"image":"./images/SetProceduralVector3.png",
		"description":"Set a named Vector3 property in a Substance material. NOTE: Use Rebuild Textures after setting Substance properties.",
		"params": [
			{
				"name":"Substance Material",
				"description":"The Substance Material."
			},
			{
				"name":"Vector 3 Property",
				"description":"The named vector property in the material."
			},
			{
				"name":"Vector 3 Value",
				"description":"The value to set the property to.\nNOTE: Use Set Procedural Vector3 for Vector3 values."
			},
			{
				"name":"Every Frame",
				"description":"NOTE: Updating procedural materials every frame can be very slow!"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Quaternion Euler Angles",
		"category":"Quaternion",
		"image":"./images/GetQuaternionEulerAngles.png",
		"description":"Gets a quaternion as euler angles.",
		"params": [
			{
				"name":"Quaternion",
				"description":"The rotation"
			},
			{
				"name":"Euler Angles",
				"description":"The euler angles of the quaternion."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Quaternion From Rotation",
		"category":"Quaternion",
		"image":"./images/GetQuaternionFromRotation.png",
		"description":"Creates a rotation which rotates from fromDirection to toDirection. Usually you use this to rotate a transform so that one of its axes, e.g., the y-axis - follows a target direction toDirection in world space.",
		"params": [
			{
				"name":"From Direction",
				"description":"the 'from' direction"
			},
			{
				"name":"To Direction",
				"description":"the 'to' direction"
			},
			{
				"name":"Result",
				"description":"the resulting quaternion"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Quaternion Multiplied By Quaternion",
		"category":"Quaternion",
		"image":"./images/GetQuaternionMultipliedByQuaternion.png",
		"description":"Get the quaternion from a quaternion multiplied by a quaternion.",
		"params": [
			{
				"name":"Quaternion A",
				"description":"The first quaternion to multiply"
			},
			{
				"name":"Quaternion B",
				"description":"The second quaternion to multiply"
			},
			{
				"name":"Result",
				"description":"The resulting quaternion"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Quaternion Multiplied By Vector",
		"category":"Quaternion",
		"image":"./images/GetQuaternionMultipliedByVector.png",
		"description":"Get the vector3 from a quaternion multiplied by a vector.",
		"params": [
			{
				"name":"Quaternion",
				"description":"The quaternion to multiply"
			},
			{
				"name":"Vector 3",
				"description":"The vector3 to multiply"
			},
			{
				"name":"Result",
				"description":"The resulting vector3"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Angle Axis",
		"category":"Quaternion",
		"image":"./images/QuaternionAngleAxis.png",
		"description":"Creates a rotation which rotates angle degrees around axis.",
		"params": [
			{
				"name":"Angle",
				"description":"The angle."
			},
			{
				"name":"Axis",
				"description":"The rotation axis."
			},
			{
				"name":"Result",
				"description":"Store the rotation of this quaternion variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Compare",
		"category":"Quaternion",
		"image":"./images/QuaternionCompare.png",
		"description":"Check if two quaternions are equals or not. Takes in account inversed representations of quaternions",
		"params": [
			{
				"name":"Quaternion 1",
				"description":"First Quaternion"
			},
			{
				"name":"Quaternion 2",
				"description":"Second Quaternion"
			},
			{
				"name":"Equal",
				"description":"true if Quaternions are equal"
			},
			{
				"name":"Equal Event",
				"description":"Event sent if Quaternions are equal"
			},
			{
				"name":"Not Equal Event",
				"description":"Event sent if Quaternions are not equal"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Euler",
		"category":"Quaternion",
		"image":"./images/QuaternionEuler.png",
		"description":"Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).",
		"params": [
			{
				"name":"Euler Angles",
				"description":"The Euler angles."
			},
			{
				"name":"Result",
				"description":"Store the euler angles of this quaternion variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Inverse",
		"category":"Quaternion",
		"image":"./images/QuaternionInverse.png",
		"description":"Inverse a quaternion",
		"params": [
			{
				"name":"Rotation",
				"description":"the rotation"
			},
			{
				"name":"Result",
				"description":"Store the inverse of the rotation variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Lerp",
		"category":"Quaternion",
		"image":"./images/QuaternionLerp.png",
		"description":"Interpolates between from and to by t and normalizes the result afterwards.",
		"params": [
			{
				"name":"From Quaternion",
				"description":"From Quaternion."
			},
			{
				"name":"To Quaternion",
				"description":"To Quaternion."
			},
			{
				"name":"Amount",
				"description":"Interpolate between fromQuaternion and toQuaternion by this amount. Value is clamped to 0-1 range. 0 = fromQuaternion; 1 = toQuaternion; 0.5 = half way between."
			},
			{
				"name":"Store Result",
				"description":"Store the result in this quaternion variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Look Rotation",
		"category":"Quaternion",
		"image":"./images/QuaternionLookRotation.png",
		"description":"Creates a rotation that looks along forward with the head upwards along upwards.",
		"params": [
			{
				"name":"Direction",
				"description":"the rotation direction"
			},
			{
				"name":"Up Vector",
				"description":"The up direction"
			},
			{
				"name":"Result",
				"description":"Store the inverse of the rotation variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Low Pass Filter",
		"category":"Quaternion",
		"image":"./images/QuaternionLowPassFilter.png",
		"description":"Use a low pass filter to reduce the influence of sudden changes in a quaternion Variable.",
		"params": [
			{
				"name":"Quaternion Variable",
				"description":"quaternion Variable to filter. Should generally come from some constantly updated input"
			},
			{
				"name":"Filtering Factor",
				"description":"Determines how much influence new changes have. E.g., 0.1 keeps 10 percent of the unfiltered quaternion and 90 percent of the previously filtered value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Rotate Towards",
		"category":"Quaternion",
		"image":"./images/QuaternionRotateTowards.png",
		"description":"Rotates a rotation from towards to. This is essentially the same as Quaternion.Slerp but instead the function will ensure that the angular speed never exceeds maxDegreesDelta. Negative values of maxDegreesDelta pushes the rotation away from to.",
		"params": [
			{
				"name":"From Quaternion",
				"description":"From Quaternion."
			},
			{
				"name":"To Quaternion",
				"description":"To Quaternion."
			},
			{
				"name":"Max Degrees Delta",
				"description":"The angular speed never exceeds maxDegreesDelta. Negative values of maxDegreesDelta pushes the rotation away from to."
			},
			{
				"name":"Store Result",
				"description":"Store the result in this quaternion variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Quaternion Slerp",
		"category":"Quaternion",
		"image":"./images/QuaternionSlerp.png",
		"description":"Spherically interpolates between from and to by t.",
		"params": [
			{
				"name":"From Quaternion",
				"description":"From Quaternion."
			},
			{
				"name":"To Quaternion",
				"description":"To Quaternion."
			},
			{
				"name":"Amount",
				"description":"Interpolate between fromQuaternion and toQuaternion by this amount. Value is clamped to 0-1 range. 0 = fromQuaternion; 1 = toQuaternion; 0.5 = half way between."
			},
			{
				"name":"Store Result",
				"description":"Store the result in this quaternion variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			},
			{
				"name":"Every Frame Option",
				"description":"Defines how to perform the action when 'every Frame' is enabled."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Rect Fields",
		"category":"Rect",
		"image":"./images/GetRectFields.png",
		"description":"Get the individual fields of a Rect Variable and store them in Float Variables.",
		"params": [
			{
				"name":"Rect Variable",
				"description":"The Rect Variable."
			},
			{
				"name":"Store X",
				"description":"Store the X value in a Float Variable."
			},
			{
				"name":"Store Y",
				"description":"Store the X value in a Float Variable."
			},
			{
				"name":"Store Width",
				"description":"Store the Width in a Float Variable."
			},
			{
				"name":"Store Height",
				"description":"Store the Height in a Float Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Contains",
		"category":"Rect",
		"image":"./images/RectContains.png",
		"description":"Tests if a point is inside a rectangle.",
		"params": [
			{
				"name":"Rectangle",
				"description":"Rectangle to test."
			},
			{
				"name":"Point",
				"description":"Point to test."
			},
			{
				"name":"X",
				"description":"Specify/override X value."
			},
			{
				"name":"Y",
				"description":"Specify/override Y value."
			},
			{
				"name":"True Event",
				"description":"Event to send if the Point is inside the Rectangle."
			},
			{
				"name":"False Event",
				"description":"Event to send if the Point is outside the Rectangle."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Overlaps",
		"category":"Rect",
		"image":"./images/RectOverlaps.png",
		"description":"Tests if 2 Rects overlap.",
		"params": [
			{
				"name":"Rect 1",
				"description":"First Rectangle."
			},
			{
				"name":"Rect 2",
				"description":"Second Rectangle."
			},
			{
				"name":"True Event",
				"description":"Event to send if the Rects overlap."
			},
			{
				"name":"False Event",
				"description":"Event to send if the Rects do not overlap."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rect Fields",
		"category":"Rect",
		"image":"./images/SetRectFields.png",
		"description":"Sets the individual fields of a Rect Variable. To leave any field unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Rect Variable",
				"description":"Rect Variable to set."
			},
			{
				"name":"X",
				"description":"Set X value."
			},
			{
				"name":"Y",
				"description":"Set Y value."
			},
			{
				"name":"Width",
				"description":"Set Width."
			},
			{
				"name":"Height",
				"description":"Set Height."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the fields are animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rect Value",
		"category":"Rect",
		"image":"./images/SetRectValue.png",
		"description":"Sets the value of a Rect Variable.",
		"params": [
			{
				"name":"Rect Variable",
				"description":"The Rect Variable to set."
			},
			{
				"name":"Rect Value",
				"description":"The value to set it to."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Contains Screen Point",
		"category":"RectTransform",
		"image":"./images/RectTransformContainsScreenPoint.png",
		"description":"Check if a RectTransform contains the screen point as seen from the given camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Screen Point Vector 2",
				"description":"The screenPoint as a Vector2. Leave to none if you want to use the Vector3 alternative"
			},
			{
				"name":"Or Screen Point Vector 3",
				"description":"The screenPoint as a Vector3. Leave to none if you want to use the Vector2 alternative"
			},
			{
				"name":"Normalized Screen Point",
				"description":"Define if screenPoint are expressed as normalized screen coordinates (0-1). Otherwise coordinates are in pixels."
			},
			{
				"name":"Camera",
				"description":"The Camera. For a RectTransform in a Canvas set to Screen Space - Overlay mode, the cam parameter should be set to null explicitly (default).\nLeave to none and the camera will be the one from EventSystem.current.camera"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Is Contained",
				"description":"Store the result."
			},
			{
				"name":"Is Contained Event",
				"description":"Event sent if screenPoint is contained in RectTransform."
			},
			{
				"name":"Is Not Contained Event",
				"description":"Event sent if screenPoint is NOT contained in RectTransform."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Flip Layout Axis",
		"category":"RectTransform",
		"image":"./images/RectTransformFlipLayoutAxis.png",
		"description":"Flips the horizontal and vertical axes of the RectTransform size and alignment, and optionally its children as well.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Axis",
				"description":"The axis to flip"
			},
			{
				"name":"Keep Positioning",
				"description":"Flips around the pivot if true. Flips within the parent rect if false."
			},
			{
				"name":"Recursive",
				"description":"Flip the children as well?"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Anchored Position",
		"category":"RectTransform",
		"image":"./images/RectTransformGetAnchoredPosition.png",
		"description":"Get the position of the pivot of this RectTransform relative to the anchor reference point.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Position",
				"description":"The anchored Position"
			},
			{
				"name":"X",
				"description":"The x component of the anchored Position"
			},
			{
				"name":"Y",
				"description":"The y component of the anchored Position"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Anchor Max",
		"category":"RectTransform",
		"image":"./images/RectTransformGetAnchorMax.png",
		"description":"Get the normalized position in the parent RectTransform that the upper right corner is anchored to.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Anchor Max",
				"description":"The anchorMax"
			},
			{
				"name":"X",
				"description":"The x component of the anchorMax"
			},
			{
				"name":"Y",
				"description":"The y component of the anchorMax"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Anchor Min",
		"category":"RectTransform",
		"image":"./images/RectTransformGetAnchorMin.png",
		"description":"Get the normalized position in the parent RectTransform that the lower left corner is anchored to.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Anchor Min",
				"description":"The anchorMin"
			},
			{
				"name":"X",
				"description":"The x component of the anchorMin"
			},
			{
				"name":"Y",
				"description":"The y component of the anchorMin"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Anchor Min And Max",
		"category":"RectTransform",
		"image":"./images/RectTransformGetAnchorMinAndMax.png",
		"description":"The normalized position in the parent RectTransform that the upper right corner is anchored to. This is relative screen space, values ranges from 0 to 1",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Anchor Max",
				"description":"The Vector2 anchor max. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"Anchor Min",
				"description":"The Vector2 anchor min. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"X Max",
				"description":"Setting only the x value. Overrides anchorMax x value if set. Set to none for no effect"
			},
			{
				"name":"Y Max",
				"description":"Setting only the x value. Overrides anchorMax x value if set. Set to none for no effect"
			},
			{
				"name":"X Min",
				"description":"Setting only the x value. Overrides anchorMin x value if set. Set to none for no effect"
			},
			{
				"name":"Y Min",
				"description":"Setting only the x value. Overrides anchorMin x value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Local Position",
		"category":"RectTransform",
		"image":"./images/RectTransformGetLocalPosition.png",
		"description":"Get the Local position of this RectTransform. This is Screen Space values using the anchoring as reference, so 0,0 is the center of the screen if the anchor is te center of the screen.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Reference",
				"description":"Get local position relative to Anchor or Center."
			},
			{
				"name":"Position",
				"description":"The position"
			},
			{
				"name":"Position 2d",
				"description":"The position in a Vector 2d "
			},
			{
				"name":"X",
				"description":"The x component of the Position"
			},
			{
				"name":"Y",
				"description":"The y component of the Position"
			},
			{
				"name":"Z",
				"description":"The z component of the Position"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Local Rotation",
		"category":"RectTransform",
		"image":"./images/RectTransformGetLocalRotation.png",
		"description":"Gets the local rotation of this RectTransform.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Rotation",
				"description":"The rotation"
			},
			{
				"name":"X",
				"description":"The x component of the rotation"
			},
			{
				"name":"Y",
				"description":"The y component of the rotation"
			},
			{
				"name":"Z",
				"description":"The z component of the rotation"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Offset Max",
		"category":"RectTransform",
		"image":"./images/RectTransformGetOffsetMax.png",
		"description":"Get the offset of the upper right corner of the rectangle relative to the upper right anchor",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Offset Max",
				"description":"The offsetMax"
			},
			{
				"name":"X",
				"description":"The x component of the offsetMax"
			},
			{
				"name":"Y",
				"description":"The y component of the offsetMax"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Offset Min",
		"category":"RectTransform",
		"image":"./images/RectTransformGetOffsetMin.png",
		"description":"Get the offset of the lower left corner of the rectangle relative to the lower left anchor",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Offset Min",
				"description":"The offsetMin"
			},
			{
				"name":"X",
				"description":"The x component of the offsetMin"
			},
			{
				"name":"Y",
				"description":"The y component of the offsetMin"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Pivot",
		"category":"RectTransform",
		"image":"./images/RectTransformGetPivot.png",
		"description":"Get the normalized position in this RectTransform that it rotates around.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Pivot",
				"description":"The pivot"
			},
			{
				"name":"X",
				"description":"The x component of the pivot"
			},
			{
				"name":"Y",
				"description":"The y component of the pivot"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Rect",
		"category":"RectTransform",
		"image":"./images/RectTransformGetRect.png",
		"description":"The calculated rectangle in the local space of the Transform.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Rect",
				"description":"Store the Rect in a Rect variable."
			},
			{
				"name":"X",
				"description":"Store the x coordinate in a float variable."
			},
			{
				"name":"Y",
				"description":"Store the y coordinate in a float variable."
			},
			{
				"name":"Width",
				"description":"Store the width in a float variable."
			},
			{
				"name":"Height",
				"description":"Store the height in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Get Size Delta",
		"category":"RectTransform",
		"image":"./images/RectTransformGetSizeDelta.png",
		"description":"Get the size of this RectTransform relative to the distances between the anchors. this is the 'Width' and 'Height' values in the RectTransform inspector.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Size Delta",
				"description":"The sizeDelta"
			},
			{
				"name":"Width",
				"description":"The x component of the sizeDelta, the width."
			},
			{
				"name":"Height",
				"description":"The y component of the sizeDelta, the height"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Pixel Adjust Point",
		"category":"RectTransform",
		"image":"./images/RectTransformPixelAdjustPoint.png",
		"description":"Convert a given point in screen space into a pixel correct point.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Canvas",
				"description":"The canvas. Leave to none to use the canvas of the gameObject"
			},
			{
				"name":"Screen Point",
				"description":"The screen position."
			},
			{
				"name":"Pixel Point",
				"description":"Pixel adjusted point from the screen position."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Pixel Adjust Rect",
		"category":"RectTransform",
		"image":"./images/RectTransformPixelAdjustRect.png",
		"description":"Given a rect transform, return the corner points in pixel accurate coordinates.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Canvas",
				"description":"The canvas. Leave to none to use the canvas of the gameObject"
			},
			{
				"name":"Pixel Rect",
				"description":"Pixel adjusted rect."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Screen Point To Local Point In Rectangle",
		"category":"RectTransform",
		"image":"./images/RectTransformScreenPointToLocalPointInRectangle.png",
		"description":"Transform a screen space point to a local position that is on the plane of the given RectTransform. Also check if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Screen Point Vector 2",
				"description":"The screenPoint as a Vector2. Leave to none if you want to use the Vector3 alternative"
			},
			{
				"name":"Or Screen Point Vector 3",
				"description":"The screenPoint as a Vector3. Leave to none if you want to use the Vector2 alternative"
			},
			{
				"name":"Normalized Screen Point",
				"description":"Define if screenPoint are expressed as normalized screen coordinates (0-1). Otherwise coordinates are in pixels."
			},
			{
				"name":"Camera",
				"description":"The Camera. For a RectTransform in a Canvas set to Screen Space - Overlay mode, the cam parameter should be set to null explicitly (default).\nLeave to none and the camera will be the one from EventSystem.current.camera"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Local Position",
				"description":"Store the local Position as a vector3 of the screenPoint on the RectTransform Plane."
			},
			{
				"name":"Local Position 2d",
				"description":"Store the local Position as a vector2 of the screenPoint on the RectTransform Plane."
			},
			{
				"name":"Is Hit",
				"description":"True if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle."
			},
			{
				"name":"Hit Event",
				"description":"Event sent if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle."
			},
			{
				"name":"No Hit Event",
				"description":"Event sent if the plane of the RectTransform is NOT hit, regardless of whether the point is inside the rectangle."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Screen Point To World Point In Rectangle",
		"category":"RectTransform",
		"image":"./images/RectTransformScreenPointToWorldPointInRectangle.png",
		"description":"Transform a screen space point to a world position that is on the plane of the given RectTransform. Also check if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Screen Point Vector 2",
				"description":"The screenPoint as a Vector2. Leave to none if you want to use the Vector3 alternative"
			},
			{
				"name":"Or Screen Point Vector 3",
				"description":"The screenPoint as a Vector3. Leave to none if you want to use the Vector2 alternative"
			},
			{
				"name":"Normalized Screen Point",
				"description":"Define if screenPoint are expressed as normalized screen coordinates (0-1). Otherwise coordinates are in pixels."
			},
			{
				"name":"Camera",
				"description":"The Camera. For a RectTransform in a Canvas set to Screen Space - Overlay mode, the cam parameter should be set to null explicitly (default).\nLeave to none and the camera will be the one from EventSystem.current.camera"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"World Position",
				"description":"Store the world Position of the screenPoint on the RectTransform Plane."
			},
			{
				"name":"Is Hit",
				"description":"True if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle."
			},
			{
				"name":"Hit Event",
				"description":"Event sent if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle."
			},
			{
				"name":"No Hit Event",
				"description":"Event sent if the plane of the RectTransform is NOT hit, regardless of whether the point is inside the rectangle."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Anchored Position",
		"category":"RectTransform",
		"image":"./images/RectTransformSetAnchoredPosition.png",
		"description":"The position of the pivot of this RectTransform relative to the anchor reference point.The anchor reference point is where the anchors are. If the anchor are not together, the four anchor positions are interpolated according to the pivot normalized values.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Position",
				"description":"The Vector2 position. Set to none for no effect, and/or set individual axis below. "
			},
			{
				"name":"X",
				"description":"Setting only the x value. Overrides position x value if set. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"Setting only the y value. Overrides position x value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Anchor Max",
		"category":"RectTransform",
		"image":"./images/RectTransformSetAnchorMax.png",
		"description":"The normalized position in the parent RectTransform that the upper right corner is anchored to. This is relative screen space, values ranges from 0 to 1",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Anchor Max",
				"description":"The Vector2 anchor. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Setting only the x value. Overrides anchorMax x value if set. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"Setting only the x value. Overrides anchorMax x value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Anchor Min",
		"category":"RectTransform",
		"image":"./images/RectTransformSetAnchorMin.png",
		"description":"The normalized position in the parent RectTransform that the lower left corner is anchored to. This is relative screen space, values ranges from 0 to 1",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Anchor Min",
				"description":"The Vector2 anchor. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Setting only the x value. Overrides anchorMin x value if set. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"Setting only the x value. Overrides anchorMin x value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Anchor Min And Max",
		"category":"RectTransform",
		"image":"./images/RectTransformSetAnchorMinAndMax.png",
		"description":"The normalized position in the parent RectTransform that the upper right corner is anchored to. This is relative screen space, values ranges from 0 to 1",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Anchor Max",
				"description":"The Vector2 anchor max. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"Anchor Min",
				"description":"The Vector2 anchor min. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"X Max",
				"description":"Setting only the x value. Overrides anchorMax x value if set. Set to none for no effect"
			},
			{
				"name":"Y Max",
				"description":"Setting only the x value. Overrides anchorMax x value if set. Set to none for no effect"
			},
			{
				"name":"X Min",
				"description":"Setting only the x value. Overrides anchorMin x value if set. Set to none for no effect"
			},
			{
				"name":"Y Min",
				"description":"Setting only the x value. Overrides anchorMin x value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Anchor Rect Position",
		"category":"RectTransform",
		"image":"./images/RectTransformSetAnchorRectPosition.png",
		"description":"The position ( normalized or not) in the parent RectTransform keeping the anchor rect size intact. This lets you position the whole Rect in one go. Use this to easily animate movement (like IOS sliding UIView)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Anchor Reference",
				"description":"The reference for the given position"
			},
			{
				"name":"Normalized",
				"description":"Are the supplied screen coordinates normalized (0-1), or in pixels."
			},
			{
				"name":"Anchor",
				"description":"The Vector2 position, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Anchor X position."
			},
			{
				"name":"Y",
				"description":"Anchor Y position."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Local Position",
		"category":"RectTransform",
		"image":"./images/RectTransformSetLocalPosition.png",
		"description":"Set the local position of this RectTransform.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Position 2d",
				"description":"The position. Set to none for no effect"
			},
			{
				"name":"Position",
				"description":"Or the 3d position. Set to none for no effect"
			},
			{
				"name":"X",
				"description":"The x component of the rotation. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"The y component of the rotation. Set to none for no effect"
			},
			{
				"name":"Z",
				"description":"The z component of the rotation. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Local Rotation",
		"category":"RectTransform",
		"image":"./images/RectTransformSetLocalRotation.png",
		"description":"Set the local rotation of this RectTransform.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Rotation",
				"description":"The rotation. Set to none for no effect"
			},
			{
				"name":"X",
				"description":"The x component of the rotation. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"The y component of the rotation. Set to none for no effect"
			},
			{
				"name":"Z",
				"description":"The z component of the rotation. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Offset Max",
		"category":"RectTransform",
		"image":"./images/RectTransformSetOffsetMax.png",
		"description":"\tThe offset of the upper right corner of the rectangle relative to the upper right anchor.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Offset Max",
				"description":"The Vector2 offsetMax. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Setting only the x value. Overrides offsetMax x value if set. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"Setting only the y value. Overrides offsetMax y value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Offset Min",
		"category":"RectTransform",
		"image":"./images/RectTransformSetOffsetMin.png",
		"description":"The offset of the lower left corner of the rectangle relative to the lower left anchor.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Offset Min",
				"description":"The Vector2 offsetMin. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Setting only the x value. Overrides offsetMin x value if set. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"Setting only the x value. Overrides offsetMin y value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Pivot",
		"category":"RectTransform",
		"image":"./images/RectTransformSetPivot.png",
		"description":"The normalized position in this RectTransform that it rotates around.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Pivot",
				"description":"The Vector2 pivot. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Setting only the x value. Overrides pivot x value if set. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"Setting only the x value. Overrides pivot y value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform Set Size Delta",
		"category":"RectTransform",
		"image":"./images/RectTransformSetSizeDelta.png",
		"description":"Set the size of this RectTransform relative to the distances between the anchors. this is the 'Width' and 'Height' values in the RectTransform inspector.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Size Delta",
				"description":"TheVector2 sizeDelta. Set to none for no effect, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Setting only the x value. Overrides sizeDelta x value if set. Set to none for no effect"
			},
			{
				"name":"Y",
				"description":"Setting only the x value. Overrides sizeDelta y value if set. Set to none for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rect Transform World To Screen Point",
		"category":"RectTransform",
		"image":"./images/RectTransformWorldToScreenPoint.png",
		"description":"RectTransforms position from world space into screen space. Leave the camera to none for default behavior.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject target."
			},
			{
				"name":"Camera",
				"description":"The camera to perform the calculation. Leave as None for default behavior."
			},
			{
				"name":"Screen Point",
				"description":"Store the screen position in a Vector3 Variable. Z will equal zero."
			},
			{
				"name":"Screen X",
				"description":"Store the screen X position in a Float Variable."
			},
			{
				"name":"Screen Y",
				"description":"Store the screen Y position in a Float Variable."
			},
			{
				"name":"Normalize",
				"description":"Normalize screen coordinates (0-1). Otherwise coordinates are in pixels."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Fog",
		"category":"RenderSettings",
		"image":"./images/EnableFog.png",
		"description":"Enables/Disables Fog in the scene.",
		"params": [
			{
				"name":"Enable Fog",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Enable Fog setting is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Ambient Light",
		"category":"RenderSettings",
		"image":"./images/SetAmbientLight.png",
		"description":"Sets the Ambient Light Color for the scene.",
		"params": [
			{
				"name":"Ambient Color",
				"description":"Color of the ambient light."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the color is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Flare Strength",
		"category":"RenderSettings",
		"image":"./images/SetFlareStrength.png",
		"description":"Sets the intensity of all Flares in the scene.",
		"params": [
			{
				"name":"Flare Strength",
				"description":"The intensity of flares in the scene."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the intensity is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fog Color",
		"category":"RenderSettings",
		"image":"./images/SetFogColor.png",
		"description":"Sets the color of the Fog in the scene.",
		"params": [
			{
				"name":"Fog Color",
				"description":"The color of the fog."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the color is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fog Density",
		"category":"RenderSettings",
		"image":"./images/SetFogDensity.png",
		"description":"Sets the density of the Fog in the scene.",
		"params": [
			{
				"name":"Fog Density",
				"description":"The density of the fog."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the fog density is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Halo Strength",
		"category":"RenderSettings",
		"image":"./images/SetHaloStrength.png",
		"description":"Sets the size of light halos.",
		"params": [
			{
				"name":"Halo Strength",
				"description":"The size of light halos."
			},
			{
				"name":"Every Frame",
				"description":"Update every frame. Useful if the size is animated."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Skybox",
		"category":"RenderSettings",
		"image":"./images/SetSkybox.png",
		"description":"Sets the global Skybox.",
		"params": [
			{
				"name":"Skybox",
				"description":"The skybox material."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the Skybox is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Allow Scene Activation",
		"category":"Scene",
		"image":"./images/AllowSceneActivation.png",
		"description":"Allow scenes to be activated. Use this after {{LoadSceneAsynch}} if you did not set the scene to activate after loading",
		"params": [
			{
				"name":"A Synch Operation Hash Code",
				"description":"The name of the new scene. It cannot be empty, null, or same as existing scenes."
			},
			{
				"name":"Allow Scene Activation",
				"description":"Allow the scene to be activated"
			},
			{
				"name":"Progress",
				"description":"The loading's progress."
			},
			{
				"name":"Is Done",
				"description":"True when loading is done"
			},
			{
				"name":"Done Event",
				"description":"Event sent when scene loading is done"
			},
			{
				"name":"Failure Event",
				"description":"Event sent when action could not be performed. Check Log for more information"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Create Scene",
		"category":"Scene",
		"image":"./images/CreateScene.png",
		"description":"Create an empty new scene with the given name additively. The path of the new scene will be empty",
		"params": [
			{
				"name":"Scene Name",
				"description":"The name of the new scene. It cannot be empty or null, or same as the name of the existing scenes."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Activate Changed Event Data",
		"category":"Scene",
		"image":"./images/GetSceneActivateChangedEventData.png",
		"description":"Get the last activateChanged Scene Event data when event was sent from the action 'SendSceneActiveChangedEvent",
		"params": [
			{
				"name":"New Name",
				"description":"The new active scene name"
			},
			{
				"name":"New Path",
				"description":"The new active scene path"
			},
			{
				"name":"New Is Valid",
				"description":"true if the new active scene is valid."
			},
			{
				"name":"New Build Index",
				"description":"The new active scene Build Index"
			},
			{
				"name":"New Is Loaded",
				"description":"true if the new active scene is loaded."
			},
			{
				"name":"New Is Dirty",
				"description":"true if the new active scene is modified."
			},
			{
				"name":"New Root Count",
				"description":"The new active scene RootCount"
			},
			{
				"name":"New Root Game Objects",
				"description":"The new active scene Root GameObjects"
			},
			{
				"name":"Previous Name",
				"description":"The previous active scene name"
			},
			{
				"name":"Previous Path",
				"description":"The previous active scene path"
			},
			{
				"name":"Previous Is Valid",
				"description":"true if the previous active scene is valid."
			},
			{
				"name":"Previous Build Index",
				"description":"The previous active scene Build Index"
			},
			{
				"name":"Previous Is Loaded",
				"description":"true if the previous active scene is loaded."
			},
			{
				"name":"Previous Is Dirty",
				"description":"true if the previous active scene is modified."
			},
			{
				"name":"Previous Root Count",
				"description":"The previous active scene RootCount"
			},
			{
				"name":"Previous Root Game Objects",
				"description":"The previous active scene Root GameObjects"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Build Index",
		"category":"Scene",
		"image":"./images/GetSceneBuildIndex.png",
		"description":"Returns the index of a scene in the Build Settings. Always returns -1 if the scene was loaded through an AssetBundle.",
		"params": [
			{
				"name":"Build Index",
				"description":"The scene Build Index"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Count",
		"category":"Scene",
		"image":"./images/GetSceneCount.png",
		"description":"Get the total number of currently loaded scenes.",
		"params": [
			{
				"name":"Scene Count",
				"description":"The number of currently loaded scenes."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every Frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Count In Build Settings",
		"category":"Scene",
		"image":"./images/GetSceneCountInBuildSettings.png",
		"description":"Get the number of scenes in Build Settings.",
		"params": [
			{
				"name":"Scene Count In Build Settings",
				"description":"The number of scenes in Build Settings."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Is Dirty",
		"category":"Scene",
		"image":"./images/GetSceneIsDirty.png",
		"description":"Get a scene isDirty flag. True if the scene is modified.",
		"params": [
			{
				"name":"Is Dirty",
				"description":"true if the scene is modified."
			},
			{
				"name":"Is Dirty Event",
				"description":"Event sent if the scene is modified."
			},
			{
				"name":"Is Not Dirty Event",
				"description":"Event sent if the scene is unmodified."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Is Loaded",
		"category":"Scene",
		"image":"./images/GetSceneIsLoaded.png",
		"description":"Get a scene isLoaded flag.",
		"params": [
			{
				"name":"Is Loaded",
				"description":"true if the scene is loaded."
			},
			{
				"name":"Is Loaded Event",
				"description":"Event sent if the scene is loaded."
			},
			{
				"name":"Is Not Loaded Event",
				"description":"Event sent if the scene is not loaded."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every Frame"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Is Valid",
		"category":"Scene",
		"image":"./images/GetSceneIsValid.png",
		"description":"Get a scene isValid flag. A scene may be invalid if, for example, you tried to open a scene that does not exist. In this case, the scene returned from EditorSceneManager.OpenScene would return False for IsValid. ",
		"params": [
			{
				"name":"Is Valid",
				"description":"true if the scene is loaded."
			},
			{
				"name":"Is Valid Event",
				"description":"Event sent if the scene is valid."
			},
			{
				"name":"Is Not Valid Event",
				"description":"Event sent if the scene is not valid."
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Loaded Event Data",
		"category":"Scene",
		"image":"./images/GetSceneLoadedEventData.png",
		"description":"Get the last Loaded Scene Event data when event was sent from the action 'SendSceneLoadedEvent",
		"params": [
			{
				"name":"Loaded Mode",
				"description":"The scene loaded mode"
			},
			{
				"name":"Name",
				"description":"The scene name"
			},
			{
				"name":"Path",
				"description":"The scene path"
			},
			{
				"name":"Is Valid",
				"description":"true if the scene is valid."
			},
			{
				"name":"Build Index",
				"description":"The scene Build Index"
			},
			{
				"name":"Is Loaded",
				"description":"true if the scene is loaded."
			},
			{
				"name":"Is Dirty",
				"description":"true if the scene is modified."
			},
			{
				"name":"Root Count",
				"description":"The scene RootCount"
			},
			{
				"name":"Root Game Objects",
				"description":"The scene Root GameObjects"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Name",
		"category":"Scene",
		"image":"./images/GetSceneName.png",
		"description":"Get a scene name.",
		"params": [
			{
				"name":"Name",
				"description":"The scene name"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Path",
		"category":"Scene",
		"image":"./images/GetScenePath.png",
		"description":"Get a scene path.",
		"params": [
			{
				"name":"Path",
				"description":"The scene path"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Properties",
		"category":"Scene",
		"image":"./images/GetSceneProperties.png",
		"description":"Get a scene isDirty flag. true if the scene is modified. ",
		"params": [
			{
				"name":"Name",
				"description":"The scene name"
			},
			{
				"name":"Path",
				"description":"The scene path"
			},
			{
				"name":"Build Index",
				"description":"The scene Build Index"
			},
			{
				"name":"Is Valid",
				"description":"true if the scene is valid."
			},
			{
				"name":"Is Loaded",
				"description":"true if the scene is loaded."
			},
			{
				"name":"Is Dirty",
				"description":"true if the scene is modified."
			},
			{
				"name":"Root Count",
				"description":"The scene RootCount"
			},
			{
				"name":"Root Game Objects",
				"description":"The scene Root GameObjects"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Root Count",
		"category":"Scene",
		"image":"./images/GetSceneRootCount.png",
		"description":"Get a scene RootCount, the number of root transforms of this scene.",
		"params": [
			{
				"name":"Root Count",
				"description":"The scene RootCount"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Root Game Objects",
		"category":"Scene",
		"image":"./images/GetSceneRootGameObjects.png",
		"description":"Get a scene Root GameObjects.",
		"params": [
			{
				"name":"Root Game Objects",
				"description":"The scene Root GameObjects"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every Frame"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scene Unloaded Event Data",
		"category":"Scene",
		"image":"./images/GetSceneUnloadedEventData.png",
		"description":"Get the last Unloaded Scene Event data when event was sent from the action 'SendSceneUnloadedEvent",
		"params": [
			{
				"name":"Name",
				"description":"The scene name"
			},
			{
				"name":"Path",
				"description":"The scene path"
			},
			{
				"name":"Build Index",
				"description":"The scene Build Index"
			},
			{
				"name":"Is Valid",
				"description":"true if the scene is valid."
			},
			{
				"name":"Is Loaded",
				"description":"true if the scene is loaded."
			},
			{
				"name":"Is Dirty",
				"description":"true if the scene is modified."
			},
			{
				"name":"Root Count",
				"description":"The scene RootCount"
			},
			{
				"name":"Root Game Objects",
				"description":"The scene Root GameObjects"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load Scene",
		"category":"Scene",
		"image":"./images/LoadScene.png",
		"description":"Loads the scene by its name or index in Build Settings. ",
		"params": [
			{
				"name":"Scene Reference",
				"description":"The reference options of the Scene"
			},
			{
				"name":"Scene By Name",
				"description":"The name of the scene to load. The given sceneName can either be the last part of the path, without .unity extension or the full path still without the .unity extension"
			},
			{
				"name":"Scene At Index",
				"description":"The index of the scene to load."
			},
			{
				"name":"Load Scene Mode",
				"description":"Allows you to specify whether or not to load the scene additively. See LoadSceneMode Unity doc for more information about the options."
			},
			{
				"name":"Success",
				"description":"True if the scene was loaded"
			},
			{
				"name":"Success Event",
				"description":"Event sent if the scene was loaded"
			},
			{
				"name":"Failure Event",
				"description":"Event sent if a problem occurred, check log for information"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Load Scene Asynch",
		"category":"Scene",
		"image":"./images/LoadSceneAsynch.png",
		"description":"Loads the scene by its name or index in Build Settings.",
		"params": [
			{
				"name":"Scene Reference",
				"description":"The reference options of the Scene"
			},
			{
				"name":"Scene By Name",
				"description":"The name of the scene to load. The given sceneName can either be the last part of the path, without .unity extension or the full path still without the .unity extension"
			},
			{
				"name":"Scene At Index",
				"description":"The index of the scene to load."
			},
			{
				"name":"Load Scene Mode",
				"description":"Allows you to specify whether or not to load the scene additively. See LoadSceneMode Unity doc for more information about the options."
			},
			{
				"name":"Allow Scene Activation",
				"description":"Allow the scene to be activated as soon as it's ready"
			},
			{
				"name":"Operation Priority",
				"description":"lets you tweak in which order async operation calls will be performed. Leave to none for default"
			},
			{
				"name":"A Sync Operation Hash Code",
				"description":"Use this hash to activate the Scene if you have set 'AllowSceneActivation' to false, you'll need to use it in the action 'AllowSceneActivation' to effectively load the scene."
			},
			{
				"name":"Progress",
				"description":"The loading's progress."
			},
			{
				"name":"Is Done",
				"description":"True when loading is done"
			},
			{
				"name":"Pending Activation",
				"description":"True when loading is done but still waiting for scene activation"
			},
			{
				"name":"Done Event",
				"description":"Event sent when scene loading is done"
			},
			{
				"name":"Pending Activation Event",
				"description":"Event sent when scene loading is done but scene not yet activated. Use aSyncOperationHashCode value in 'AllowSceneActivation' to proceed"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if the scene to load was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Merge Scenes",
		"category":"Scene",
		"image":"./images/MergeScenes.png",
		"description":"This will merge the source scene into the destinationScene. This function merges the contents of the source scene into the destination scene, and deletes the source scene. All GameObjects at the root of the source scene are moved to the root of the destination scene. NOTE: This function is destructive: The source scene will be destroyed once the merge has been completed.",
		"params": [
			{
				"name":"Source Reference",
				"description":"The reference options of the source Scene"
			},
			{
				"name":"Source At Index",
				"description":"The source scene Index."
			},
			{
				"name":"Source By Name",
				"description":"The source scene Name."
			},
			{
				"name":"Source By Path",
				"description":"The source scene Path."
			},
			{
				"name":"Source By Game Object",
				"description":"The source scene from GameObject"
			},
			{
				"name":"Destination Reference",
				"description":"The reference options of the destination Scene"
			},
			{
				"name":"Destination At Index",
				"description":"The destination scene Index."
			},
			{
				"name":"Destination By Name",
				"description":"The destination scene Name."
			},
			{
				"name":"Destination By Path",
				"description":"The destination scene Path."
			},
			{
				"name":"Destination By Game Object",
				"description":"The destination scene from GameObject"
			},
			{
				"name":"Success",
				"description":"True if the merge succeeded"
			},
			{
				"name":"Success Event",
				"description":"Event sent if merge succeeded"
			},
			{
				"name":"Failure Event",
				"description":"Event sent if merge failed"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Move Game Object To Scene",
		"category":"Scene",
		"image":"./images/MoveGameObjectToScene.png",
		"description":"Move a GameObject from its current scene to a new scene. It is required that the GameObject is at the root of its current scene.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Root GameObject to move to the referenced scene"
			},
			{
				"name":"Find Root If Necessary",
				"description":"Only root GameObject can be moved, set to true to get the root of the gameobject if necessary, else watch for failure events."
			},
			{
				"name":"Success",
				"description":"True if the merge succeeded"
			},
			{
				"name":"Success Event",
				"description":"Event sent if merge succeeded"
			},
			{
				"name":"Failure Event",
				"description":"Event sent if merge failed. Check log for information"
			},
			{
				"name":"Scene Reference",
				"description":"The reference option of the Scene"
			},
			{
				"name":"Scene At Index",
				"description":"The scene Index."
			},
			{
				"name":"Scene By Name",
				"description":"The scene Name."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The Scene of GameObject"
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Found Event",
				"description":"Event sent if SceneReference resolves to a scene"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Active Scene Changed Event",
		"category":"Scene",
		"image":"./images/SendActiveSceneChangedEvent.png",
		"description":"Send an event when the active scene has changed.",
		"params": [
			{
				"name":"Active Scene Changed",
				"description":"The event to send when an active scene changed"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Scene Loaded Event",
		"category":"Scene",
		"image":"./images/SendSceneLoadedEvent.png",
		"description":"Send an event when a scene was loaded. Use the Safe version when you want to access content of the loaded scene. Use GetSceneloadedEventData to find out about the loaded Scene and load mode",
		"params": [
			{
				"name":"Scene Loaded",
				"description":"The event to send when a scene was loaded"
			},
			{
				"name":"Scene Loaded Safe",
				"description":"The event to send when a scene was loaded, with a one frame delay to make sure the scene content was indeed initialized fully"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Scene Unloaded Event",
		"category":"Scene",
		"image":"./images/SendSceneUnloadedEvent.png",
		"description":"Send an event when a scene was unloaded.",
		"params": [
			{
				"name":"Scene Unloaded",
				"description":"The event to send when scene was unloaded"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Active Scene",
		"category":"Scene",
		"image":"./images/SetActiveScene.png",
		"description":"Set the scene to be active.",
		"params": [
			{
				"name":"Scene Reference",
				"description":"The reference options of the Scene."
			},
			{
				"name":"Scene By Name",
				"description":"The name of the scene to activate. The given sceneName can either be the last part of the path, without .unity extension or the full path still without the .unity extension"
			},
			{
				"name":"Scene At Build Index",
				"description":"The build index of the scene to activate."
			},
			{
				"name":"Scene At Index",
				"description":"The index of the scene to activate."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The GameObject scene to activate."
			},
			{
				"name":"Success",
				"description":"True if set active succeeded."
			},
			{
				"name":"Success Event",
				"description":"Event sent if setActive succeeded."
			},
			{
				"name":"Scene Found",
				"description":"True if SceneReference resolves to a scene."
			},
			{
				"name":"Scene Not Activated Event",
				"description":"Event sent if scene not activated yet."
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if SceneReference do not resolve to a scene."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unload Scene",
		"category":"Scene",
		"image":"./images/UnloadScene.png",
		"description":"Unload Scene. Note that assets are currently not unloaded, in order to free up asset memory call Resources.UnloadUnusedAssets.",
		"params": [
			{
				"name":"Scene Reference",
				"description":"The reference options of the Scene"
			},
			{
				"name":"Scene By Name",
				"description":"The name of the scene to load. The given sceneName can either be the last part of the path, without .unity extension or the full path still without the .unity extension"
			},
			{
				"name":"Scene At Build Index",
				"description":"The build index of the scene to unload."
			},
			{
				"name":"Scene At Index",
				"description":"The index of the scene to unload."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The GameObject unload scene of"
			},
			{
				"name":"Unloaded",
				"description":"True if scene was unloaded"
			},
			{
				"name":"Unloaded Event",
				"description":"Event sent if scene was unloaded "
			},
			{
				"name":"Failure Event",
				"description":"Event sent scene was not unloaded"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Unload Scene Asynch",
		"category":"Scene",
		"image":"./images/UnloadSceneAsynch.png",
		"description":"Unload a scene asynchronously by its name or index in Build Settings. Destroys all GameObjects associated with the given scene and removes the scene from the SceneManager.",
		"params": [
			{
				"name":"Scene Reference",
				"description":"The reference options of the Scene"
			},
			{
				"name":"Scene By Name",
				"description":"The name of the scene to load. The given sceneName can either be the last part of the path, without .unity extension or the full path still without the .unity extension"
			},
			{
				"name":"Scene At Build Index",
				"description":"The build index of the scene to unload."
			},
			{
				"name":"Scene At Index",
				"description":"The index of the scene to unload."
			},
			{
				"name":"Scene By Path",
				"description":"The scene Path."
			},
			{
				"name":"Scene By Game Object",
				"description":"The GameObject unload scene of"
			},
			{
				"name":"Operation Priority",
				"description":"lets you tweak in which order async operation calls will be performed. Leave to none for default"
			},
			{
				"name":"Progress",
				"description":"The loading's progress."
			},
			{
				"name":"Is Done",
				"description":"True when loading is done"
			},
			{
				"name":"Done Event",
				"description":"Event sent when scene loading is done"
			},
			{
				"name":"Scene Not Found Event",
				"description":"Event sent if the scene to load was not found"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Screen Wrap",
		"category":"Transform",
		"image":"./images/ScreenWrap.png",
		"description":"Wraps a GameObject's position across screen edges. For example, a GameObject that moves off the left side of the screen wraps to the right side. This is often used in 2d arcade style games like Asteroids.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to wrap."
			},
			{
				"name":"Camera",
				"description":"GameObject with a Camera component used to render the view (or MainCamera if not set). The Viewport Rect is used for wrapping."
			},
			{
				"name":"Wrap Left",
				"description":"Wrap the position of the GameObject if it moves off the left side of the screen."
			},
			{
				"name":"Wrap Right",
				"description":"Wrap the position of the GameObject if it moves off the right side of the screen."
			},
			{
				"name":"Wrap Top",
				"description":"Wrap the position of the GameObject if it moves off the top of the screen."
			},
			{
				"name":"Wrap Bottom",
				"description":"Wrap the position of the GameObject if it moves off the top of the screen."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Late Update",
				"description":"Use LateUpdate. Useful if you want to wrap after any other operations in Update."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Add Script",
		"category":"ScriptControl",
		"image":"./images/AddScript.png",
		"description":"Adds a Script to a Game Object. Use this to change the behaviour of objects on the fly. Optionally remove the Script on exiting the state.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to add the script to."
			},
			{
				"name":"Script",
				"description":"Select any script in your project. The script will be added to the Game Object when the state is entered."
			},
			{
				"name":"Remove On Exit",
				"description":"Remove the script from the GameObject when this State is exited."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Axis Event",
		"category":"Input",
		"image":"./images/AxisEvent.png",
		"description":"Sends events based on the direction of Input Axis (Left/Right/Up/Down...).",
		"params": [
			{
				"name":"Horizontal Axis",
				"description":"Horizontal axis as defined in the Input Manager"
			},
			{
				"name":"Vertical Axis",
				"description":"Vertical axis as defined in the Input Manager"
			},
			{
				"name":"Left Event",
				"description":"Event to send if input is to the left."
			},
			{
				"name":"Right Event",
				"description":"Event to send if input is to the right."
			},
			{
				"name":"Up Event",
				"description":"Event to send if input is to the up."
			},
			{
				"name":"Down Event",
				"description":"Event to send if input is to the down."
			},
			{
				"name":"Any Direction",
				"description":"Event to send if input is in any direction."
			},
			{
				"name":"No Direction",
				"description":"Event to send if no axis input (centered)."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Call Method",
		"category":"ScriptControl",
		"image":"./images/CallMethod.png",
		"description":"Lets you call a method in a script on a Game Object.\nUnlike {{Invoke Method}}, or {{Send Message}}, you can use multiple parameters and get a return value.",
		"params": [
			{
				"name":"Behaviour",
				"description":"The behaviour on a Game Object that has the method you want to call. Drag the script component from the Unity inspector into this slot. HINT: Use Lock if the script is on another GameObject.\n\nNOTE: Unity Object fields show the GameObject name, so for clarity we show the Behaviour name as well below."
			},
			{
				"name":"Method Name",
				"description":"Select from a list of available methods.\n\nNOTE: The full method signature is visible below."
			},
			{
				"name":"Parameters",
				"description":"Method parameters.\n\nNOTE: This UI is built automatically when you select the method."
			},
			{
				"name":"Store Result",
				"description":"If the Method has a return, use this to store it in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Manual UI",
				"description":"Revert to the old Manual UI where all parameters had to be configured manually."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Call Static Method",
		"category":"ScriptControl",
		"image":"./images/CallStaticMethod.png",
		"description":"Call a static method in a class.\nNOTE: This is an advanced action - you need to know the full method signature to use this action.",
		"params": [
			{
				"name":"Class Name",
				"description":"Full path to the class that contains the static method."
			},
			{
				"name":"Method Name",
				"description":"The static method to call."
			},
			{
				"name":"Parameters",
				"description":"Method parameters. NOTE: these must match the method's signature!"
			},
			{
				"name":"Store Result",
				"description":"Store the result of the method call."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable Behaviour",
		"category":"ScriptControl",
		"image":"./images/EnableBehaviour.png",
		"description":"Enables/Disables a Behaviour on a GameObject. Optionally reset the Behaviour on exiting the state. E.g., if you want the Behaviour to be active only while this state is active.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the Behaviour."
			},
			{
				"name":"Behaviour",
				"description":"The name of the Behaviour to enable/disable."
			},
			{
				"name":"Component",
				"description":"Optionally drag a component directly into this field (behavior name will be ignored)."
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the enabled state of the Behaviour when leaving this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Invoke Method",
		"category":"ScriptControl",
		"image":"./images/InvokeMethod.png",
		"description":"Invokes a Method in a Behaviour attached to a Game Object. See Unity InvokeMethod docs.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object that owns the behaviour."
			},
			{
				"name":"Behaviour",
				"description":"The behaviour that contains the method."
			},
			{
				"name":"Method Name",
				"description":"The name of the method to invoke."
			},
			{
				"name":"Delay",
				"description":"Optional time delay in seconds."
			},
			{
				"name":"Repeating",
				"description":"Call the method repeatedly."
			},
			{
				"name":"Repeat Delay",
				"description":"Delay between repeated calls in seconds."
			},
			{
				"name":"Cancel On Exit",
				"description":"Stop calling the method when the state is exited."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Message",
		"category":"ScriptControl",
		"image":"./images/SendMessage.png",
		"description":"Sends a Message to a Game Object. See Unity docs for SendMessage.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to send a message to."
			},
			{
				"name":"Delivery",
				"description":"Pick between <a href=\"http://unity3d.com/support/documentation/ScriptReference/GameObject.SendMessage.html\" rel=\"nofollow\">SendMessage</a>, <a href=\"http://unity3d.com/support/documentation/ScriptReference/GameObject.SendMessageUpwards.html\" rel=\"nofollow\">SendMessageUpwards</a>, or <a href=\"http://unity3d.com/support/documentation/ScriptReference/GameObject.BroadcastMessage.html\" rel=\"nofollow\">BroadcastMessage</a>."
			},
			{
				"name":"Options",
				"description":"Message delivery options. See <a href=\"http://unity3d.com/support/documentation/ScriptReference/SendMessageOptions.html\" rel=\"nofollow\">SendMessageOptions</a> in Unity Docs."
			},
			{
				"name":"Function Call",
				"description":"Select a Method Name first then Parameters."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Start Coroutine",
		"category":"ScriptControl",
		"image":"./images/StartCoroutine.png",
		"description":"Starts a Coroutine in a Behaviour on a Game Object.\nSee Unity <a href=\"http://unity3d.com/support/documentation/ScriptReference/MonoBehaviour.StartCoroutine.html\">StartCoroutine</a> docs for more details.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object that owns the Behaviour."
			},
			{
				"name":"Behaviour",
				"description":"The Behaviour that contains the method to start as a coroutine."
			},
			{
				"name":"Function Call",
				"description":"The name of the coroutine method."
			},
			{
				"name":"Stop On Exit",
				"description":"Stop the coroutine when the state is exited."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sprite",
		"category":"SpriteRenderer",
		"image":"./images/GetSprite.png",
		"description":"Gets the source image sprite of a SpriteRenderer component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sprite",
				"description":"The source sprite of the SpriteRenderer component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sprite Color",
		"category":"SpriteRenderer",
		"image":"./images/GetSpriteColor.png",
		"description":"Gets the color of a sprite renderer",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Color",
				"description":"Get The Color of the SpriteRenderer component"
			},
			{
				"name":"Red",
				"description":"Store the red channel in a float variable."
			},
			{
				"name":"Green",
				"description":"Store the green channel in a float variable."
			},
			{
				"name":"Blue",
				"description":"Store the blue channel in a float variable."
			},
			{
				"name":"Alpha",
				"description":"Store the alpha channel in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the color variable is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sprite Flip",
		"category":"SpriteRenderer",
		"image":"./images/GetSpriteFlip.png",
		"description":"Gets the Flips values of a of a SpriteRenderer component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"X",
				"description":"The X flip value"
			},
			{
				"name":"Y",
				"description":"The Y flip value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sprite Mask Interaction",
		"category":"SpriteRenderer",
		"image":"./images/GetSpriteMaskInteraction.png",
		"description":"Get the mode under which the sprite will interact with the masking system.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sprite Mask Interaction",
				"description":"Get the Mask Interactions of the SpriteRenderer component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sprite Order In Layer",
		"category":"SpriteRenderer",
		"image":"./images/GetSpriteOrderInLayer.png",
		"description":"Get the Order in Layer of a SpriteRenderer component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Order In Layer",
				"description":"The Order In Layer Value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sprite Sorting Layer",
		"category":"SpriteRenderer",
		"image":"./images/GetSpriteSortingLayer.png",
		"description":"Get the Sorting Layer name and/or Id of a of a SpriteRenderer component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sorting Layer Name",
				"description":"The sorting layer name"
			},
			{
				"name":"Sorting Layer Id",
				"description":"The sorting layer id"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Getsprite Sort Point",
		"category":"SpriteRenderer",
		"image":"./images/GetspriteSortPoint.png",
		"description":"Get the position of the Sprite used for sorting the Renderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sprite Sort Point",
				"description":"Get the Sprite Sorting Point value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite",
		"category":"SpriteRenderer",
		"image":"./images/SetSprite.png",
		"description":"Sets a Sprite on a GameObject. Object must have a Sprite Renderer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sprite",
				"description":"The source sprite of the UI Image component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Color",
		"category":"SpriteRenderer",
		"image":"./images/SetSpriteColor.png",
		"description":"Sets the color of a sprite renderer",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Color",
				"description":"Set the Color of the SpriteRenderer component"
			},
			{
				"name":"Red",
				"description":"Set the red channel"
			},
			{
				"name":"Green",
				"description":"Set the green channel"
			},
			{
				"name":"Blue",
				"description":"Set the blue channel"
			},
			{
				"name":"Alpha",
				"description":"Set the alpha channel"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Flip",
		"category":"SpriteRenderer",
		"image":"./images/SetSpriteFlip.png",
		"description":"Sets the Flips values of a of a SpriteRenderer component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"X",
				"description":"The X Flip value"
			},
			{
				"name":"Y",
				"description":"The Y Flip value"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset flip values when state exits"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Mask Interaction",
		"category":"SpriteRenderer",
		"image":"./images/SetSpriteMaskInteraction.png",
		"description":"Set the mode under which the sprite will interact with the masking system.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sprite Mask Interaction",
				"description":"Set the Mask Interactions of the SpriteRenderer component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Order In Layer",
		"category":"SpriteRenderer",
		"image":"./images/SetSpriteOrderInLayer.png",
		"description":"Set the Order in Layer of a SpriteRenderer component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Order In Layer",
				"description":"The Order In Layer Value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Sorting Layer By Id",
		"category":"SpriteRenderer",
		"image":"./images/SetSpriteSortingLayerById.png",
		"description":"Set the Sorting Layer of a SpriteRenderer component by Id (by id is faster than by name)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sorting Layer Id",
				"description":"The sorting Layer Name"
			},
			{
				"name":"Set All Sprites In Children",
				"description":"If true, set the sorting layer to all children"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Sorting Layer By Name",
		"category":"SpriteRenderer",
		"image":"./images/SetSpriteSortingLayerByName.png",
		"description":"Set the Sorting Layer of a SpriteRenderer component. by name",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sorting Layer Name",
				"description":"The sorting Layer Name"
			},
			{
				"name":"Set All Sprites In Children",
				"description":"If true, set the sorting layer to all children"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Sprite Sort Point",
		"category":"SpriteRenderer",
		"image":"./images/SetSpriteSortPoint.png",
		"description":"Determines the position of the Sprite used for sorting the Renderer. Unity 2018.2 or higher.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the SpriteRenderer component."
			},
			{
				"name":"Sprite Sort Point",
				"description":"Set the Sprite Sorting Point value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Block Events",
		"category":"StateMachine",
		"image":"./images/BlockEvents.png",
		"description":"Block events while this action is active.",
		"params": [
			{
				"name":"Condition",
				"description":"When to block events."
			},
			{
				"name":"Float Param",
				"description":"Context sensitive parameter. Depends on Condition."
			},
			{
				"name":"Bool Param",
				"description":"Context sensitive parameter. Depends on Condition."
			},
			{
				"name":"Event Param",
				"description":"Context sensitive parameter. Depends on Condition."
			},
			{
				"name":"Log Blocked Events",
				"description":"Log any events blocked by this action. Helpful for debugging."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Broadcast Event",
		"category":"StateMachine",
		"image":"./images/BroadcastEvent.png",
		"description":"Sends an Event to all FSMs in the scene or to all FSMs on a Game Object. NOTE: This action won't work on the very first frame of the game...",
		"params": [
			{
				"name":"Broadcast Event",
				"description":"The event to broadcast."
			},
			{
				"name":"Game Object",
				"description":"By default, the event is broadcast to all FSMs in the scene. Optionally you can specify a game object to target. The event will then be broadcast to all FSMs on that game object."
			},
			{
				"name":"Send To Children",
				"description":"Broadcast the event to all the Game Object's children too."
			},
			{
				"name":"Exclude Self",
				"description":"Don't send the event to self."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Enable FSM",
		"category":"StateMachine",
		"image":"./images/EnableFSM.png",
		"description":"Enables/Disables an FSM component on a GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM component."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on GameObject. Useful if you have more than one FSM on a GameObject. Leave blank to use the first FSM on the game object."
			},
			{
				"name":"Enable",
				"description":"Set to True to enable, False to disable."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset the initial enabled state when exiting the state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Finish FSM",
		"category":"StateMachine",
		"image":"./images/FinishFSM.png",
		"description":"Stop this FSM. If this FSM was launched by a {{Run FSM}} action, it will trigger a Finish event in that state.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Forward All Events",
		"category":"StateMachine",
		"image":"./images/ForwardAllEvents.png",
		"description":"Forwards all event received by this FSM to another target. Optionally specify a list of events to ignore.",
		"params": [
			{
				"name":"Forward To",
				"description":"Forward to this target."
			},
			{
				"name":"Except These",
				"description":"Don't forward these events."
			},
			{
				"name":"Eat Events",
				"description":"Should this action eat the events or pass them on."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Forward Event",
		"category":"StateMachine",
		"image":"./images/ForwardEvent.png",
		"description":"Forward an event received by this FSM to another target.",
		"params": [
			{
				"name":"Forward To",
				"description":"Forward to this target."
			},
			{
				"name":"Events To Forward",
				"description":"The events to forward."
			},
			{
				"name":"Eat Events",
				"description":"Should this action eat the events or pass them on."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event Bool Data",
		"category":"StateMachine",
		"image":"./images/GetEventBoolData.png",
		"description":"Gets the Bool data from the last Event.",
		"params": [
			{
				"name":"Get Bool Data",
				"description":"Store the bool data in a variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event Float Data",
		"category":"StateMachine",
		"image":"./images/GetEventFloatData.png",
		"description":"Gets the Float data from the last Event.",
		"params": [
			{
				"name":"Get Float Data",
				"description":"Store the float data in a variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event Info",
		"category":"StateMachine",
		"image":"./images/GetEventInfo.png",
		"description":"Gets info on the last event that caused a state change. See also: {{Set Event Data}} action.",
		"params": [
			{
				"name":"Sent By Game Object",
				"description":"The Game Object that sent the Event."
			},
			{
				"name":"Fsm Name",
				"description":"The name of the FSM that sent the Event."
			},
			{
				"name":"Get Bool Data",
				"description":"Custom Bool data."
			},
			{
				"name":"Get Int Data",
				"description":"Custom Int data."
			},
			{
				"name":"Get Float Data",
				"description":"Custom Float data."
			},
			{
				"name":"Get Vector 2 Data",
				"description":"Custom Vector2 data."
			},
			{
				"name":"Get Vector 3 Data",
				"description":"Custom Vector3 data."
			},
			{
				"name":"Get String Data",
				"description":"Custom String data."
			},
			{
				"name":"Get Game Object Data",
				"description":"Custom GameObject data."
			},
			{
				"name":"Get Rect Data",
				"description":"Custom Rect data."
			},
			{
				"name":"Get Quaternion Data",
				"description":"Custom Quaternion data."
			},
			{
				"name":"Get Material Data",
				"description":"Custom Material data."
			},
			{
				"name":"Get Texture Data",
				"description":"Custom Texture data."
			},
			{
				"name":"Get Color Data",
				"description":"Custom Color data."
			},
			{
				"name":"Get Object Data",
				"description":"Custom Object data."
			}
		]
		,"seeAlso": [
			{"li":"{{SetEventData}}"}
		]
	},
	{
		"name":"Get Event Int Data",
		"category":"StateMachine",
		"image":"./images/GetEventIntData.png",
		"description":"Gets the Int data from the last Event.",
		"params": [
			{
				"name":"Get Int Data",
				"description":"Store the int data in a variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event Sent By",
		"category":"StateMachine",
		"image":"./images/GetEventSentBy.png",
		"description":"Gets the sender of the last event.",
		"params": [
			{
				"name":"Sent By Game Object",
				"description":"Store the GameObject that sent the event."
			},
			{
				"name":"Game Object Name",
				"description":"Store the name of the GameObject that sent the event."
			},
			{
				"name":"Fsm Name",
				"description":"Store the name of the FSM that sent the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event String Data",
		"category":"StateMachine",
		"image":"./images/GetEventStringData.png",
		"description":"Gets the String data from the last Event.",
		"params": [
			{
				"name":"Get String Data",
				"description":"Store the string data in a variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event Vector2 Data",
		"category":"StateMachine",
		"image":"./images/GetEventVector2Data.png",
		"description":"Gets the Vector2 data from the last Event.",
		"params": [
			{
				"name":"Get Vector 2 Data",
				"description":"Store the vector2 data in a variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Event Vector3 Data",
		"category":"StateMachine",
		"image":"./images/GetEventVector3Data.png",
		"description":"Gets the Vector3 data from the last Event.",
		"params": [
			{
				"name":"Get Vector 3 Data",
				"description":"Store the vector3 data in a variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Bool",
		"category":"StateMachine",
		"image":"./images/GetFsmBool.png",
		"description":"Get the value of a Bool Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Bool variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Color",
		"category":"StateMachine",
		"image":"./images/GetFsmColor.png",
		"description":"Get the value of a Color Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Color variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Enum",
		"category":"StateMachine",
		"image":"./images/GetFsmEnum.png",
		"description":"Get the value of an Enum Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in an Enum variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Float",
		"category":"StateMachine",
		"image":"./images/GetFsmFloat.png",
		"description":"Get the value of a Float Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Float variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Game Object",
		"category":"StateMachine",
		"image":"./images/GetFsmGameObject.png",
		"description":"Get the value of a Game Object Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a GameObject variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Int",
		"category":"StateMachine",
		"image":"./images/GetFsmInt.png",
		"description":"Get the value of an Integer Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in an Int variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Material",
		"category":"StateMachine",
		"image":"./images/GetFsmMaterial.png",
		"description":"Get the value of a Material Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Material variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Object",
		"category":"StateMachine",
		"image":"./images/GetFsmObject.png",
		"description":"Get the value of an Object Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in an Object variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Quaternion",
		"category":"StateMachine",
		"image":"./images/GetFsmQuaternion.png",
		"description":"Get the value of a Quaternion Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Quaternion variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Rect",
		"category":"StateMachine",
		"image":"./images/GetFsmRect.png",
		"description":"Get the value of a Rect Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Rect variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm State",
		"category":"StateMachine",
		"image":"./images/GetFsmState.png",
		"description":"Gets the name of the specified FSMs current state. Either reference the fsm component directly, or find it on a game object.",
		"params": [
			{
				"name":"Fsm Component",
				"description":"Choose a PlayMakerFSM component. If you set a component here it overrides the Game Object and Fsm Name settings."
			},
			{
				"name":"Game Object",
				"description":"If not specifying the component above, specify the GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object. If left blank it will find the first PlayMakerFSM on the GameObject."
			},
			{
				"name":"Store Result",
				"description":"Store the FSM's current State in a string variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. E.g.,  useful if you're waiting for the State to change."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm String",
		"category":"StateMachine",
		"image":"./images/GetFsmString.png",
		"description":"Get the value of a String Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a String variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Texture",
		"category":"StateMachine",
		"image":"./images/GetFsmTexture.png",
		"description":"Get the value of a Texture Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Texture variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Variable",
		"category":"StateMachine",
		"image":"./images/GetFsmVariable.png",
		"description":"Get the value of a variable in another FSM and store it in a variable of the same name in this FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Store Value",
				"description":"Store the value of the FsmVariable"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Variables",
		"category":"StateMachine",
		"image":"./images/GetFsmVariables.png",
		"description":"Get the values of multiple variables in another FSM and store in variables of the same name in this FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Get Variables",
				"description":"Store the values of the FsmVariables"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Vector2",
		"category":"StateMachine",
		"image":"./images/GetFsmVector2.png",
		"description":"Get the value of a Vector2 Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Vector2 variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Fsm Vector3",
		"category":"StateMachine",
		"image":"./images/GetFsmVector3.png",
		"description":"Get the value of a Vector3 Variable from another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable to get."
			},
			{
				"name":"Store Value",
				"description":"Store the value in a Vector3 variable in this FSM."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Last Event",
		"category":"StateMachine",
		"image":"./images/GetLastEvent.png",
		"description":"Gets the event that caused the transition to the current state, and stores it in a String Variable.",
		"params": [
			{
				"name":"Store Event",
				"description":"Store the name of the last event in a String Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Previous State Name",
		"category":"StateMachine",
		"image":"./images/GetPreviousStateName.png",
		"description":"Gets the name of the previously active state and stores it in a String Variable.",
		"params": [
			{
				"name":"Store Name",
				"description":"Store the name in a String Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Goto Previous State",
		"category":"StateMachine",
		"image":"./images/GotoPreviousState.png",
		"description":"Immediately return to the previously active state.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Ignore Events",
		"category":"StateMachine",
		"image":"./images/IgnoreEvents.png",
		"description":"Ignore specified events while this action is active.",
		"params": [
			{
				"name":"Event Types",
				"description":"Type of events to ignore."
			},
			{
				"name":"Events",
				"description":"Event names to ignore."
			},
			{
				"name":"Log Ignored Events",
				"description":"Log any events blocked by this action. Helpful for debugging."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Kill Delayed Events",
		"category":"StateMachine",
		"image":"./images/KillDelayedEvents.png",
		"description":"Kill all queued delayed events. Normally delayed events are automatically killed when the active state is exited, but you can override this behaviour in FSM settings. If you choose to keep delayed events you can use this action to kill them when needed.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Late Update Event",
		"category":"StateMachine",
		"image":"./images/LateUpdateEvent.png",
		"description":"Sends an Event in LateUpdate, after the Update loop.",
		"params": [
			{
				"name":"Send Event",
				"description":"Event to send in LateUpdate."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Loop",
		"category":"StateMachine",
		"image":"./images/Loop.png",
		"description":"Sends the Loop Event when the action runs. It loops the specified number of times then sends the Finish Event. ",
		"params": [
			{
				"name":"Loops",
				"description":"How many times to loop."
			},
			{
				"name":"Store Current Loop",
				"description":"Store the current loop count. Starts at 0. Useful for iterating through arrays."
			},
			{
				"name":"Loop Event",
				"description":"Event that starts a loop."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the loops have finished."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Loop State",
		"category":"StateMachine",
		"image":"./images/LoopState.png",
		"description":"Loops through the state the specified number of times then sends the Finish Event.",
		"params": [
			{
				"name":"Loops",
				"description":"How many times to loop through the state."
			},
			{
				"name":"Store Current Loop",
				"description":"Store the current loop count. Starts at 0. Useful for iterating through arrays."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the loops have finished."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Next Frame Event",
		"category":"StateMachine",
		"image":"./images/NextFrameEvent.png",
		"description":"Sends an Event in the next frame. Useful if you want to loop states every frame.",
		"params": [
			{
				"name":"Send Event",
				"description":"The Event to send."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Event",
		"category":"StateMachine",
		"image":"./images/RandomEvent.png",
		"description":"Sends a Random State Event after an optional delay. Use this to transition to a random state connected to the current state.",
		"params": [
			{
				"name":"Delay",
				"description":"Delay before sending the event (seconds)."
			},
			{
				"name":"No Repeat",
				"description":"Don't repeat the same event twice in a row."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Run FSM",
		"category":"StateMachine",
		"image":"./images/RunFSM.png",
		"description":"Creates an FSM at runtime from a saved {{Template}}. The FSM is only active while the state is active. This lets you nest FSMs inside states.\nThis is a very powerful action! It allows you to create a library of FSM Templates that can be re-used in your project. You can edit the template in one place and the changes are reflected everywhere.\nNOTE: You can also specify a template in the {{FSM Inspector}}.",
		"params": [
			{
				"name":"Fsm Template Control",
				"description":"The Template to use. You can drag and drop, use the Unity object browser, or the categorized popup browser to select a template."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the FSM has finished (usually because it ran a {{Finish FSM}} action)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Waits for the sub Fsm to finish before calling it again."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event",
		"category":"StateMachine",
		"image":"./images/SendEvent.png",
		"description":"Sends an Event after an optional delay. NOTE: To send events between FSMs they must be marked as Global in the {{Event Browser}}.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Rarely needed, but can be useful when sending events to other FSMs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event By Name",
		"category":"StateMachine",
		"image":"./images/SendEventByName.png",
		"description":"Sends an Event by name after an optional delay. NOTE: Use this over Send Event if you store events as string variables.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"The event to send. NOTE: Events must be marked Global to send between FSMs."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Rarely needed, but can be useful when sending events to other FSMs."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Event To Fsm",
		"category":"StateMachine",
		"image":"./images/SendEventToFsm.png",
		"description":"Sends an Event to another Fsm after an optional delay. Specify an Fsm Name or use the first Fsm on the object.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object that owns the other FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Send Event",
				"description":"The Event to send."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Send Random Event",
		"category":"StateMachine",
		"image":"./images/SendRandomEvent.png",
		"description":"Sends a Random Event picked from an array of Events. Optionally set the relative weight of each event.",
		"params": [
			{
				"name":"Events",
				"description":"A possible Event choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this Event being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds before sending the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Sequence Event",
		"category":"StateMachine",
		"image":"./images/SequenceEvent.png",
		"description":"Sends the next event on the state each time the state is entered.",
		"params": [
			{
				"name":"Delay",
				"description":"Delay before sending the event in seconds."
			},
			{
				"name":"Reset",
				"description":"Assign a variable to control reset. Set it to True to reset the sequence. Value is set to False after resetting."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Event Data",
		"category":"StateMachine",
		"image":"./images/SetEventData.png",
		"description":"Sets Event Data before sending an event. Get the Event Data, along with sender information, using the {{Get Event Info}} action.",
		"params": [
			{
				"name":"Set Game Object Data",
				"description":"Custom Game Object data."
			},
			{
				"name":"Set Int Data",
				"description":"Custom Int data."
			},
			{
				"name":"Set Float Data",
				"description":"Custom Float data."
			},
			{
				"name":"Set String Data",
				"description":"Custom String data."
			},
			{
				"name":"Set Bool Data",
				"description":"Custom Bool data."
			},
			{
				"name":"Set Vector 2 Data",
				"description":"Custom Vector2 data."
			},
			{
				"name":"Set Vector 3 Data",
				"description":"Custom Vector3 data."
			},
			{
				"name":"Set Rect Data",
				"description":"Custom Rect data."
			},
			{
				"name":"Set Quaternion Data",
				"description":"Custom Quaternion data."
			},
			{
				"name":"Set Color Data",
				"description":"Custom Color data."
			},
			{
				"name":"Set Material Data",
				"description":"Custom Material data."
			},
			{
				"name":"Set Texture Data",
				"description":"Custom Texture data."
			},
			{
				"name":"Set Object Data",
				"description":"Custom Object data."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Event Float Data",
		"category":"StateMachine",
		"image":"./images/SetEventFloatData.png",
		"description":"Sets the Float data to send with the next event. Get the Event Data, along with sender information, using the {{Get Event Info}} action.",
		"params": [
			{
				"name":"Float Data",
				"description":"The float value to send."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Event Int Data",
		"category":"StateMachine",
		"image":"./images/SetEventIntData.png",
		"description":"Sets the Int data to send with the next event. Get the Event Data, along with sender information, using the {{Get Event Info}} action.",
		"params": [
			{
				"name":"Int Data",
				"description":"The int value to send."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Event String Data",
		"category":"StateMachine",
		"image":"./images/SetEventStringData.png",
		"description":"Sets the String data to send with the next event. Get the Event Data, along with sender information, using the {{Get Event Info}} action.",
		"params": [
			{
				"name":"String Data",
				"description":"The string value to send."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Event Target",
		"category":"StateMachine",
		"image":"./images/SetEventTarget.png",
		"description":"Sets the target FSM for all subsequent events sent by this state. The default 'Self' sends events to this FSM.",
		"params": [
			{
				"name":"Event Target",
				"description":"Set the target."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Bool",
		"category":"StateMachine",
		"image":"./images/SetFsmBool.png",
		"description":"Set the value of a Bool Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Color",
		"category":"StateMachine",
		"image":"./images/SetFsmColor.png",
		"description":"Set the value of a Color Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Enum",
		"category":"StateMachine",
		"image":"./images/SetFsmEnum.png",
		"description":"Set the value of an Enum Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object."
			},
			{
				"name":"Variable Name",
				"description":"Enum variable name needs to match the FSM variable name on Game Object."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the Enum Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Float",
		"category":"StateMachine",
		"image":"./images/SetFsmFloat.png",
		"description":"Set the value of a Float Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Game Object",
		"category":"StateMachine",
		"image":"./images/SetFsmGameObject.png",
		"description":"Set the value of a Game Object Variable in another FSM. Accept null reference",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Int",
		"category":"StateMachine",
		"image":"./images/SetFsmInt.png",
		"description":"Set the value of an Integer Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Material",
		"category":"StateMachine",
		"image":"./images/SetFsmMaterial.png",
		"description":"Set the value of a Material Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Object",
		"category":"StateMachine",
		"image":"./images/SetFsmObject.png",
		"description":"Set the value of an Object Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Quaternion",
		"category":"StateMachine",
		"image":"./images/SetFsmQuaternion.png",
		"description":"Set the value of a Quaternion Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Rect",
		"category":"StateMachine",
		"image":"./images/SetFsmRect.png",
		"description":"Set the value of a Rect Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm String",
		"category":"StateMachine",
		"image":"./images/SetFsmString.png",
		"description":"Set the value of a String Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object."
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Texture",
		"category":"StateMachine",
		"image":"./images/SetFsmTexture.png",
		"description":"Set the value of a Texture Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Variable",
		"category":"StateMachine",
		"image":"./images/SetFsmVariable.png",
		"description":"Set the value of a variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM"
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the variable in the target FSM."
			},
			{
				"name":"Set Value",
				"description":"Set the value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Vector2",
		"category":"StateMachine",
		"image":"./images/SetFsmVector2.png",
		"description":"Set the value of a Vector2 Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Fsm Vector3",
		"category":"StateMachine",
		"image":"./images/SetFsmVector3.png",
		"description":"Set the value of a Vector3 Variable in another FSM.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the FSM."
			},
			{
				"name":"Fsm Name",
				"description":"Optional name of FSM on Game Object"
			},
			{
				"name":"Variable Name",
				"description":"The name of the FSM variable."
			},
			{
				"name":"Set Value",
				"description":"Set the value of the variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the value is changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Build String",
		"category":"String",
		"image":"./images/BuildString.png",
		"description":"Builds a String from other Strings.",
		"params": [
			{
				"name":"String Parts",
				"description":"Array of Strings to combine."
			},
			{
				"name":"Separator",
				"description":"Separator to insert between each String. E.g. space character."
			},
			{
				"name":"Add To End",
				"description":"Add Separator to end of built string."
			},
			{
				"name":"Store Result",
				"description":"Store the final String in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame while the state is active."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Format String",
		"category":"String",
		"image":"./images/FormatString.png",
		"description":"Replaces each format item in a specified string with the text equivalent of variable's value. Stores the result in a string variable.\nSee C# <a href=\"http://msdn.microsoft.com/en-us/library/system.string.format(v=vs.90).aspx\" rel=\"nofollow\">string.Format documentation</a> for usage.",
		"params": [
			{
				"name":"Format",
				"description":"E.g. Hello {0} and {1}\nWith 2 variables that replace {0} and {1}\nSee C# string.Format docs."
			},
			{
				"name":"Variables",
				"description":"Variables to use for each formatting item."
			},
			{
				"name":"Store Result",
				"description":"Store the formatted result in a string variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the variables are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get String Left",
		"category":"String",
		"image":"./images/GetStringLeft.png",
		"description":"Gets the Left n characters from a String Variable.",
		"params": [
			{
				"name":"String Variable",
				"description":"The string to get characters from."
			},
			{
				"name":"Char Count",
				"description":"Number of characters to get."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a string variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get String Length",
		"category":"String",
		"image":"./images/GetStringLength.png",
		"description":"Gets the Length of a String.",
		"params": [
			{
				"name":"String Variable",
				"description":"The string to measure."
			},
			{
				"name":"Store Result",
				"description":"Store the result in an Int Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get String Right",
		"category":"String",
		"image":"./images/GetStringRight.png",
		"description":"Gets the Right n characters from a String.",
		"params": [
			{
				"name":"String Variable",
				"description":"The string to get characters from."
			},
			{
				"name":"Char Count",
				"description":"Number of characters to get."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a string variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Substring",
		"category":"String",
		"image":"./images/GetSubstring.png",
		"description":"Gets a sub-string from a String Variable.",
		"params": [
			{
				"name":"String Variable",
				"description":"The string to get characters from."
			},
			{
				"name":"Start Index",
				"description":"The start of the substring (0 = first character)."
			},
			{
				"name":"Length",
				"description":"The number of characters to get."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a string variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random String",
		"category":"String",
		"image":"./images/SelectRandomString.png",
		"description":"Select a Random String from an array of Strings.",
		"params": [
			{
				"name":"Strings",
				"description":"A possible String choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this string being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Store String",
				"description":"Store the chosen String in a String Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set String Value",
		"category":"String",
		"image":"./images/SetStringValue.png",
		"description":"Sets the value of a String Variable.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String Variable to set."
			},
			{
				"name":"String Value",
				"description":"The value to set the variable to."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Append",
		"category":"String",
		"image":"./images/StringAppend.png",
		"description":"Adds a String to the end of a String.",
		"params": [
			{
				"name":"String Variable",
				"description":"Strings to add to."
			},
			{
				"name":"Append String",
				"description":"String to append"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Join",
		"category":"String",
		"image":"./images/StringJoin.png",
		"description":"Join an array of strings into a single string.",
		"params": [
			{
				"name":"String Array",
				"description":"Array of string to join into a single string."
			},
			{
				"name":"Separator",
				"description":"Separator to add between each string."
			},
			{
				"name":"Store Result",
				"description":"Store the joined string in string variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Replace",
		"category":"String",
		"image":"./images/StringReplace.png",
		"description":"Replace a substring with a new String.",
		"params": [
			{
				"name":"String Variable",
				"description":"The String Variable to examine."
			},
			{
				"name":"Replace",
				"description":"Replace this string..."
			},
			{
				"name":"With",
				"description":"... with this string."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a string variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"String Split",
		"category":"String",
		"image":"./images/StringSplit.png",
		"description":"Splits a string into substrings using separator characters.",
		"params": [
			{
				"name":"String To Split",
				"description":"String to split."
			},
			{
				"name":"Separators",
				"description":"Characters used to split the string.\nUse '\\n' for newline\nUse '\\t' for tab"
			},
			{
				"name":"Trim Strings",
				"description":"Remove all leading and trailing white-space characters from each separated string."
			},
			{
				"name":"Trim Chars",
				"description":"Optional characters used to trim each separated string."
			},
			{
				"name":"String Array",
				"description":"Store the split strings in a String Array."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get System Date Time",
		"category":"Time",
		"image":"./images/GetSystemDateTime.png",
		"description":"Gets system date and time info and stores it in a string variable. An optional format string gives you a lot of control over the formatting (see online docs for format syntax).",
		"params": [
			{
				"name":"Store String",
				"description":"Store System DateTime as a string."
			},
			{
				"name":"Format",
				"description":"Optional format string. E.g., MM/dd/yyyy HH:mm"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Time Info",
		"category":"Time",
		"image":"./images/GetTimeInfo.png",
		"description":"Gets various useful Time measurements.",
		"params": [
			{
				"name":"Get Info",
				"description":"Info to get."
			},
			{
				"name":"Store Value",
				"description":"Store the time info in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Per Second",
		"category":"Time",
		"image":"./images/PerSecond.png",
		"description":"Multiplies a Float by Time.deltaTime to use in frame-rate independent operations. E.g., 10 becomes 10 units per second.",
		"params": [
			{
				"name":"Float Value",
				"description":"The float value to multiply be Time.deltaTime."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Do it every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Random Wait",
		"category":"Time",
		"image":"./images/RandomWait.png",
		"description":"Delays a State from finishing by a random time. NOTE: Other actions continue running during this time.\nAfter the random time the specified Finish Event or FINISHED is sent.",
		"params": [
			{
				"name":"Min",
				"description":"Minimum amount of time to wait."
			},
			{
				"name":"Max",
				"description":"Maximum amount of time to wait."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when timer is finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore time scale."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Scale Time",
		"category":"Time",
		"image":"./images/ScaleTime.png",
		"description":"Scales time: 1 = normal, 0.5 = half speed, 2 = double speed.",
		"params": [
			{
				"name":"Time Scale",
				"description":"Scales time: 1 = normal, 0.5 = half speed, 2 = double speed."
			},
			{
				"name":"Adjust Fixed Delta Time",
				"description":"Adjust the fixed physics time step to match the time scale."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful when animating the value."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Wait",
		"category":"Time",
		"image":"./images/Wait.png",
		"description":"Delays a State from finishing. Optionally send an event after the specified time. NOTE: Other actions continue running and can send events before this action finishes.",
		"params": [
			{
				"name":"Time",
				"description":"Time to wait in seconds."
			},
			{
				"name":"Finish Event",
				"description":"Event to send after the specified time."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. E.g., if the game is paused using Scale Time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Align To Direction",
		"category":"Transform",
		"image":"./images/AlignToDirection.png",
		"description":"Align a GameObject to the specified Direction.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Target Direction",
				"description":"The direction to look at. E.g. the Hit Normal from a Raycast."
			},
			{
				"name":"Align Axis",
				"description":"The GameObject axis to align to the direction."
			},
			{
				"name":"Flip Axis",
				"description":"Flip the alignment axis. So x becomes -x."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every update."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This can help eliminate jitters in some situations."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Clamp Position",
		"category":"Transform",
		"image":"./images/ClampPosition.png",
		"description":"Clamps a position to min/max ranges. Set any limit to None to leave un-clamped.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to clamp position."
			},
			{
				"name":"Min X",
				"description":"Clamp the minimum value of x."
			},
			{
				"name":"Max X",
				"description":"Clamp the maximum value of x."
			},
			{
				"name":"Min Y",
				"description":"Clamp the minimum value of y."
			},
			{
				"name":"Max Y",
				"description":"Clamp the maximum value of y."
			},
			{
				"name":"Min Z",
				"description":"Clamp the minimum value of z."
			},
			{
				"name":"Max Z",
				"description":"Clamp the maximum value of z."
			},
			{
				"name":"Space",
				"description":"Clamp position in local (relative to parent) or world space."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This is useful if you want to clamp the position of objects that are animated or otherwise positioned in Update."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Clamp Rotation",
		"category":"Transform",
		"image":"./images/ClampRotation.png",
		"description":"Clamps a rotation around a local axis. Optionally define the default rotation. Clamp is done on LateUpdate",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to clamp rotation."
			},
			{
				"name":"Default Rotation",
				"description":"The default rotation. If none, will use the GameObject target."
			},
			{
				"name":"Constraint Axis",
				"description":"The axis to constraint the rotation"
			},
			{
				"name":"Min Angle",
				"description":"The minimum angle allowed"
			},
			{
				"name":"Max Angle",
				"description":"The maximum angle allowed"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Angle To Target",
		"category":"Transform",
		"image":"./images/GetAngleToTarget.png",
		"description":"Gets the Angle between a GameObject's forward axis and a Target. The Target can be defined as a GameObject or a world Position. If you specify both, then the Position will be used as a local offset from the Target Object's position.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object whose forward axis we measure from. If the target is dead ahead the angle will be 0."
			},
			{
				"name":"Target Object",
				"description":"The target object to measure the angle to. Or use target position."
			},
			{
				"name":"Target Position",
				"description":"The world position to measure an angle to. If Target Object is also specified, this vector is used as an offset from that object's position."
			},
			{
				"name":"Ignore Height",
				"description":"Ignore height differences when calculating the angle."
			},
			{
				"name":"Store Angle",
				"description":"Store the angle in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Position",
		"category":"Transform",
		"image":"./images/GetPosition.png",
		"description":"Gets the Position of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to examine."
			},
			{
				"name":"Vector",
				"description":"Store the position in a Vector3 Variable."
			},
			{
				"name":"X",
				"description":"Store the X coordinate in a Float Variable."
			},
			{
				"name":"Y",
				"description":"Store the Y coordinate in a Float Variable."
			},
			{
				"name":"Z",
				"description":"Store the Z coordinate in a Float Variable."
			},
			{
				"name":"Space",
				"description":"Use world or local coordinates."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Position 2d",
		"category":"Transform",
		"image":"./images/GetPosition2d.png",
		"description":"Gets the 2D Position of a GameObject and stores it in a Vector2 Variable or each Axis in a Float Variable",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to examine."
			},
			{
				"name":"Vector_2d",
				"description":"Store the position in a Vector2 Variable."
			},
			{
				"name":"X",
				"description":"Store the X coordinate in a Float Variable."
			},
			{
				"name":"Y",
				"description":"Store the Y coordinate in a Float Variable."
			},
			{
				"name":"Space",
				"description":"Use world or local coordinates."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Rotation",
		"category":"Transform",
		"image":"./images/GetRotation.png",
		"description":"Gets the Rotation of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object."
			},
			{
				"name":"Quaternion",
				"description":"Get the rotation as a Quaternion."
			},
			{
				"name":"Vector",
				"description":"Get the rotation as Euler angles (rotation around each axis) and store in a Vector3 Variable."
			},
			{
				"name":"X Angle",
				"description":"Get the angle around the X axis."
			},
			{
				"name":"Y Angle",
				"description":"Get the angle around the Y axis."
			},
			{
				"name":"Z Angle",
				"description":"Get the angle around the Z axis."
			},
			{
				"name":"Space",
				"description":"The coordinate space to get the rotation in."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Scale",
		"category":"Transform",
		"image":"./images/GetScale.png",
		"description":"Gets the Scale of a Game Object and stores it in a Vector3 Variable or each Axis in a Float Variable",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object."
			},
			{
				"name":"Vector",
				"description":"Store the scale in a Vector3 variable."
			},
			{
				"name":"X Scale",
				"description":"Store the X scale in a Float variable."
			},
			{
				"name":"Y Scale",
				"description":"Store the Y scale in a Float variable."
			},
			{
				"name":"Z Scale",
				"description":"Store the Z scale in a Float variable."
			},
			{
				"name":"Space",
				"description":"The coordinate space to get the rotation in."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Inverse Transform Direction",
		"category":"Transform",
		"image":"./images/InverseTransformDirection.png",
		"description":"Transforms a Direction from world space to a Game Object's local space. The opposite of TransformDirection.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object that defines local space."
			},
			{
				"name":"World Direction",
				"description":"The direction in world space."
			},
			{
				"name":"Store Result",
				"description":"Store the result in a Vector3 Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Inverse Transform Point",
		"category":"Transform",
		"image":"./images/InverseTransformPoint.png",
		"description":"Transforms position from world space to a Game Object's local space. The opposite of TransformPoint.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object that defines local space."
			},
			{
				"name":"World Position",
				"description":"The world position vector."
			},
			{
				"name":"Store Result",
				"description":"Store the transformed vector in a Vector3 Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Look At",
		"category":"Transform",
		"image":"./images/LookAt.png",
		"description":"Rotates a Game Object so its forward vector points at a Target. The Target can be specified as a GameObject or a world Position. If you specify both, then Position specifies a local offset from the target object's Position.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Target Object",
				"description":"The GameObject to Look At."
			},
			{
				"name":"Target Position",
				"description":"World position to look at, or local offset from Target Object if specified."
			},
			{
				"name":"Up Vector",
				"description":"Rotate the GameObject to point its up direction vector in the direction hinted at by the Up Vector. See Unity Look At docs for more details."
			},
			{
				"name":"Keep Vertical",
				"description":"Don't rotate vertically."
			},
			{
				"name":"Debug",
				"description":"Draw a debug line from the GameObject to the Target."
			},
			{
				"name":"Debug Line Color",
				"description":"Color to use for the debug line."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Look At Direction",
		"category":"Transform",
		"image":"./images/LookAtDirection.png",
		"description":"Rotates a Game Object so its forward vector points in the specified Direction.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Target Direction",
				"description":"The direction to look at."
			},
			{
				"name":"Up Vector",
				"description":"Keep this vector pointing up as the GameObject rotates."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every update."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This can help eliminate jitters in some situations."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Move Object",
		"category":"Transform",
		"image":"./images/MoveObject.png",
		"description":"Move a GameObject to another GameObject using easing functions. Works like iTween Move To, but with better performance.",
		"params": [
			{
				"name":"Object To Move",
				"description":"The GameObject to move."
			},
			{
				"name":"Destination",
				"description":"The target GamObject."
			},
			{
				"name":"Time",
				"description":"How long the ease should take in seconds"
			},
			{
				"name":"Speed",
				"description":"Optionally, use speed instead of time."
			},
			{
				"name":"Delay",
				"description":"Optional delay in seconds before starting to ease."
			},
			{
				"name":"Ease Type",
				"description":"The easing function to use."
			},
			{
				"name":"Reverse",
				"description":"Reverse the ease."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send an Event when the animation finishes."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale. Useful if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Move Position",
		"category":"Physics",
		"image":"./images/MovePosition.png",
		"description":"Moves a Game Object's Rigid Body to a new position. Unlike Set Position this will respect physics collisions.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to move."
			},
			{
				"name":"Vector",
				"description":"Movement vector."
			},
			{
				"name":"X",
				"description":"Movement in x axis."
			},
			{
				"name":"Y",
				"description":"Movement in y axis."
			},
			{
				"name":"Z",
				"description":"Movement in z axis."
			},
			{
				"name":"Space",
				"description":"Coordinate space to move in."
			},
			{
				"name":"Every Frame",
				"description":"Keep running every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Move Towards",
		"category":"Transform",
		"image":"./images/MoveTowards.png",
		"description":"Moves a Game Object towards a Target. Optionally sends an event when successful. The Target can be specified as a Game Object or a world Position. If you specify both, then the Position is used as a local offset from the Object's Position.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to Move"
			},
			{
				"name":"Target Object",
				"description":"A target GameObject to move towards. Or use a world Target Position below."
			},
			{
				"name":"Target Position",
				"description":"A world position to move towards, if no Target Object is set. Otherwise used as a local offset from the Target Object."
			},
			{
				"name":"Ignore Vertical",
				"description":"Ignore any height difference in the target."
			},
			{
				"name":"Max Speed",
				"description":"The maximum movement speed (Unity units per second). HINT: You can make this a variable to change it over time."
			},
			{
				"name":"Finish Distance",
				"description":"Distance at which the move is considered finished, and the Finish Event is sent."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the Finish Distance is reached. Use this to transition to the next state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Rotate",
		"category":"Transform",
		"image":"./images/Rotate.png",
		"description":"Rotates a Game Object around each Axis. Use a Vector3 Variable and/or XYZ components. To leave any axis unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to rotate."
			},
			{
				"name":"Vector",
				"description":"A rotation vector specifying rotation around x, y, and z axis. NOTE: You can override individual axis below."
			},
			{
				"name":"X Angle",
				"description":"Rotation around x axis."
			},
			{
				"name":"Y Angle",
				"description":"Rotation around y axis."
			},
			{
				"name":"Z Angle",
				"description":"Rotation around z axis."
			},
			{
				"name":"Space",
				"description":"Rotate in local or world space."
			},
			{
				"name":"Per Second",
				"description":"Rotation is specified in degrees per second. In other words, the amount to rotate in over one second. This allows rotations to be frame rate independent. It is the same as multiplying the rotation by Time.deltaTime."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Late Update",
				"description":"Perform the rotation in LateUpdate. This is useful if you want to override the rotation of objects that are animated or otherwise rotated in Update."
			},
			{
				"name":"Fixed Update",
				"description":"Perform the rotation in FixedUpdate. This is useful when working with rigid bodies and physics."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Position",
		"category":"Transform",
		"image":"./images/SetPosition.png",
		"description":"Sets the Position of a Game Object. To leave any axis unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to position."
			},
			{
				"name":"Vector",
				"description":"Use a stored Vector3 position, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Set the X position."
			},
			{
				"name":"Y",
				"description":"Set the Y position."
			},
			{
				"name":"Z",
				"description":"Set the Z position."
			},
			{
				"name":"Space",
				"description":"Set position in local (relative to parent) or world space."
			},
			{
				"name":"Every Frame",
				"description":"Perform this action every frame. Useful if position is changing."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This is useful if you want to override the position of objects that are animated or otherwise positioned in Update."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Position 2d",
		"category":"Transform",
		"image":"./images/SetPosition2d.png",
		"description":"Sets the 2d Position of a Game Object. To leave any axis unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to position."
			},
			{
				"name":"Vector",
				"description":"Use a stored Vector2 position, and/or set individual axis below."
			},
			{
				"name":"X",
				"description":"Set the X position."
			},
			{
				"name":"Y",
				"description":"Set the Y position."
			},
			{
				"name":"Space",
				"description":"Use local or world space."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This is useful if you want to override the position of objects that are animated or otherwise positioned in Update."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Random Rotation",
		"category":"Transform",
		"image":"./images/SetRandomRotation.png",
		"description":"Sets Random Rotation for a Game Object. Uncheck an axis to keep the current rotation around that axis.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object to randomly rotate."
			},
			{
				"name":"X",
				"description":"Use X axis."
			},
			{
				"name":"Y",
				"description":"Use Y axis."
			},
			{
				"name":"Z",
				"description":"Use Z axis."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Rotation",
		"category":"Transform",
		"image":"./images/SetRotation.png",
		"description":"Sets the Rotation of a Game Object. To leave any axis unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Quaternion",
				"description":"Use a stored quaternion, or vector angles below."
			},
			{
				"name":"Vector",
				"description":"Use euler angles stored in a Vector3 variable, and/or set each axis below."
			},
			{
				"name":"X Angle",
				"description":"Angle around the X axis in degrees."
			},
			{
				"name":"Y Angle",
				"description":"Angle around the Y axis in degrees."
			},
			{
				"name":"Z Angle",
				"description":"Angle around the Z axis in degrees."
			},
			{
				"name":"Space",
				"description":"Use local or world space."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This is useful if you want to override the position of objects that are animated or otherwise positioned in Update."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Scale",
		"category":"Transform",
		"image":"./images/SetScale.png",
		"description":"Sets the Scale of a Game Object. To leave any axis unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to scale."
			},
			{
				"name":"Vector",
				"description":"Use stored Vector3 value, and/or set each axis below."
			},
			{
				"name":"X",
				"description":"Scale along the X axis (1 = normal)."
			},
			{
				"name":"Y",
				"description":"Scale along the Y axis (1 = normal)."
			},
			{
				"name":"Z",
				"description":"Scale along the Z axis (1 = normal)."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This is useful if you want to override the position of objects that are animated or otherwise positioned in Update."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Smooth Follow Action",
		"category":"Transform",
		"image":"./images/SmoothFollowAction.png",
		"description":"Action version of Unity's Smooth Follow script.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to control. E.g. The camera."
			},
			{
				"name":"Target Object",
				"description":"The GameObject to follow."
			},
			{
				"name":"Distance",
				"description":"The distance in the x-z plane to the target."
			},
			{
				"name":"Height",
				"description":"The height we want the camera to be above the target"
			},
			{
				"name":"Height Damping",
				"description":"How much to dampen height movement."
			},
			{
				"name":"Rotation Damping",
				"description":"How much to dampen rotation changes."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Smooth Look At",
		"category":"Transform",
		"image":"./images/SmoothLookAt.png",
		"description":"Smoothly Rotates a Game Object so its forward vector points at a Target. The target can be defined as a Game Object or a world Position. If you specify both, then the position will be used as a local offset from the object's position.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate to face a target."
			},
			{
				"name":"Target Object",
				"description":"A target GameObject."
			},
			{
				"name":"Target Position",
				"description":"A world position, or local offset if a Target Object is defined."
			},
			{
				"name":"Up Vector",
				"description":"Used to keep the game object generally upright. If left undefined the world y axis is used."
			},
			{
				"name":"Keep Vertical",
				"description":"Force the game object to remain vertical. Useful for characters."
			},
			{
				"name":"Speed",
				"description":"How fast the look at moves."
			},
			{
				"name":"Debug",
				"description":"Draw a line in the Scene View to the look at position."
			},
			{
				"name":"Finish Tolerance",
				"description":"If the angle to the target is less than this, send the Finish Event below. Measured in degrees."
			},
			{
				"name":"Finish Event",
				"description":"Event to send if the angle to target is less than the Finish Tolerance."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Smooth Look At Direction",
		"category":"Transform",
		"image":"./images/SmoothLookAtDirection.png",
		"description":"Smoothly Rotates a Game Object so its forward vector points in the specified Direction. Lets you fire an event when minmagnitude is reached",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to rotate."
			},
			{
				"name":"Target Direction",
				"description":"The direction to smoothly rotate towards."
			},
			{
				"name":"Min Magnitude",
				"description":"Only rotate if Target Direction Vector length is greater than this threshold."
			},
			{
				"name":"Up Vector",
				"description":"Keep this vector pointing up as the GameObject rotates."
			},
			{
				"name":"Keep Vertical",
				"description":"Eliminate any tilt up/down as the GameObject rotates."
			},
			{
				"name":"Speed",
				"description":"How quickly to rotate."
			},
			{
				"name":"Late Update",
				"description":"Perform in LateUpdate. This can help eliminate jitters in some situations."
			},
			{
				"name":"Finish Event",
				"description":"Event to send if the direction difference is less than Min Magnitude."
			},
			{
				"name":"Finish",
				"description":"Stop running the action if the direction difference is less than Min Magnitude."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Transform Direction",
		"category":"Transform",
		"image":"./images/TransformDirection.png",
		"description":"Transforms a Direction from a Game Object's local space to world space.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object that defines local space."
			},
			{
				"name":"Local Direction",
				"description":"A direction vector in the object's local space."
			},
			{
				"name":"Store Result",
				"description":"Store the transformed direction vector, now in world space, in a Vector3 Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Transform Point",
		"category":"Transform",
		"image":"./images/TransformPoint.png",
		"description":"Transforms a Position from a Game Object's local space to world space.",
		"params": [
			{
				"name":"Game Object",
				"description":"The Game Object that defines local space."
			},
			{
				"name":"Local Position",
				"description":"A local position vector."
			},
			{
				"name":"Store Result",
				"description":"Store the transformed position, now in world space, in a Vector3 Variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Translate",
		"category":"Transform",
		"image":"./images/Translate.png",
		"description":"Translates a Game Object. Use a Vector3 variable and/or XYZ components. To leave any axis unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The game object to translate."
			},
			{
				"name":"Vector",
				"description":"A translation vector. NOTE: You can override individual axis below."
			},
			{
				"name":"X",
				"description":"Translation along x axis."
			},
			{
				"name":"Y",
				"description":"Translation along y axis."
			},
			{
				"name":"Z",
				"description":"Translation along z axis."
			},
			{
				"name":"Space",
				"description":"Translate in local or world space."
			},
			{
				"name":"Per Second",
				"description":"Translate over one second"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Late Update",
				"description":"Perform the translate in LateUpdate. This is useful if you want to override the position of objects that are animated or otherwise positioned in Update."
			},
			{
				"name":"Fixed Update",
				"description":"Perform the translate in FixedUpdate. This is useful when working with rigid bodies and physics."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get ACosine",
		"category":"Trigonometry",
		"image":"./images/GetACosine.png",
		"description":"Get the Arc Cosine. You can get the result in degrees, simply check on the RadToDeg conversion",
		"params": [
			{
				"name":"Value",
				"description":"The value of the cosine"
			},
			{
				"name":"Angle",
				"description":"The resulting angle. Note:If you want degrees, simply check RadToDeg"
			},
			{
				"name":"Rad To Deg",
				"description":"Check on if you want the angle expressed in degrees."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get ASine",
		"category":"Trigonometry",
		"image":"./images/GetASine.png",
		"description":"Get the Arc sine. You can get the result in degrees, simply check on the RadToDeg conversion",
		"params": [
			{
				"name":"Value",
				"description":"The value of the sine"
			},
			{
				"name":"Angle",
				"description":"The resulting angle. Note:If you want degrees, simply check RadToDeg"
			},
			{
				"name":"Rad To Deg",
				"description":"Check on if you want the angle expressed in degrees."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Atan",
		"category":"Trigonometry",
		"image":"./images/GetAtan.png",
		"description":"Get the Arc Tangent. You can get the result in degrees, simply check on the RadToDeg conversion",
		"params": [
			{
				"name":"Value",
				"description":"The value of the tan"
			},
			{
				"name":"Angle",
				"description":"The resulting angle. Note:If you want degrees, simply check RadToDeg"
			},
			{
				"name":"Rad To Deg",
				"description":"Check on if you want the angle expressed in degrees."
			},
			{
				"name":"Every Frame",
				"description":"Repeat Every Frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Atan2",
		"category":"Trigonometry",
		"image":"./images/GetAtan2.png",
		"description":"Get the Arc Tangent 2 as in atan2(y,x). You can get the result in degrees, simply check on the RadToDeg conversion",
		"params": [
			{
				"name":"X Value",
				"description":"The x value of the tan"
			},
			{
				"name":"Y Value",
				"description":"The y value of the tan"
			},
			{
				"name":"Angle",
				"description":"The resulting angle. Note:If you want degrees, simply check RadToDeg"
			},
			{
				"name":"Rad To Deg",
				"description":"Check on if you want the angle expressed in degrees."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Atan2 From Vector2",
		"category":"Trigonometry",
		"image":"./images/GetAtan2FromVector2.png",
		"description":"Get the Arc Tangent 2 as in atan2(y,x) from a vector 2. You can get the result in degrees, simply check on the RadToDeg conversion",
		"params": [
			{
				"name":"Vector 2",
				"description":"The vector2 of the tan"
			},
			{
				"name":"Angle",
				"description":"The resulting angle. Note:If you want degrees, simply check RadToDeg"
			},
			{
				"name":"Rad To Deg",
				"description":"Check on if you want the angle expressed in degrees."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Atan2 From Vector3",
		"category":"Trigonometry",
		"image":"./images/GetAtan2FromVector3.png",
		"description":"Get the Arc Tangent 2 as in atan2(y,x) from a vector 3, where you pick which is x and y from the vector 3. You can get the result in degrees, simply check on the RadToDeg conversion",
		"params": [
			{
				"name":"Vector 3",
				"description":"The vector3 definition of the tan"
			},
			{
				"name":"X Axis",
				"description":"which axis in the vector3 to use as the x value of the tan"
			},
			{
				"name":"Y Axis",
				"description":"which axis in the vector3 to use as the y value of the tan"
			},
			{
				"name":"Angle",
				"description":"The resulting angle. Note:If you want degrees, simply check RadToDeg"
			},
			{
				"name":"Rad To Deg",
				"description":"Check on if you want the angle expressed in degrees."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Cosine",
		"category":"Trigonometry",
		"image":"./images/GetCosine.png",
		"description":"Get the Cosine.",
		"params": [
			{
				"name":"Angle",
				"description":"The angle. Note: Check Deg To Rad if the angle is expressed in degrees."
			},
			{
				"name":"Deg To Rad",
				"description":"Check if the angle is expressed in degrees."
			},
			{
				"name":"Result",
				"description":"The angle cosine."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Sine",
		"category":"Trigonometry",
		"image":"./images/GetSine.png",
		"description":"Get the sine. You can use degrees, simply check on the DegToRad conversion",
		"params": [
			{
				"name":"Angle",
				"description":"The angle. Note: You can use degrees, simply check DegtoRad if the angle is expressed in degrees."
			},
			{
				"name":"Deg To Rad",
				"description":"Check on if the angle is expressed in degrees."
			},
			{
				"name":"Result",
				"description":"The angle tan"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Tan",
		"category":"Trigonometry",
		"image":"./images/GetTan.png",
		"description":"Get the Tangent. You can use degrees, simply check on the DegToRad conversion",
		"params": [
			{
				"name":"Angle",
				"description":"The angle. Note: You can use degrees, simply check DegtoRad if the angle is expressed in degrees."
			},
			{
				"name":"Deg To Rad",
				"description":"Check on if the angle is expressed in degrees."
			},
			{
				"name":"Result",
				"description":"The angle tan"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Audio",
		"category":"Tween",
		"image":"./images/TweenAudio.png",
		"description":"Tween common AudioSource properties.",
		"params": [
			{
				"name":"Property",
				"description":"Audio property to tween."
			},
			{
				"name":"Tween Direction",
				"description":"Tween To/From values set below."
			},
			{
				"name":"Value",
				"description":"Value for the selected property."
			},
			{
				"name":"Game Object",
				"description":"The Game Object to tween."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Camera",
		"category":"Tween",
		"image":"./images/TweenCamera.png",
		"description":"Tween common Camera properties.",
		"params": [
			{
				"name":"Property",
				"description":"Camera property to tween."
			},
			{
				"name":"Tween Direction",
				"description":"Tween To/From values set below."
			},
			{
				"name":"Target Color",
				"description":"Context sensitive parameter. Depends on Property."
			},
			{
				"name":"Target Float",
				"description":"Context sensitive parameter. Depends on Property."
			},
			{
				"name":"Target Rect",
				"description":"Context sensitive parameter. Depends on Property."
			},
			{
				"name":"Game Object",
				"description":"The Game Object to tween."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Color",
		"category":"Tween",
		"image":"./images/TweenColor.png",
		"description":"Tween the color of a GameObject or a Color variable. The GameObject needs a Material, Sprite, Image, Text, or Light component.",
		"params": [
			{
				"name":"Target",
				"description":"What to tween."
			},
			{
				"name":"Game Object",
				"description":"A GameObject with a Material, Sprite, Image, Text, or Light component."
			},
			{
				"name":"Variable",
				"description":"The variable to tween."
			},
			{
				"name":"From Offset Blend Mode",
				"description":"How to apply the Offset Color. Similar to Photoshop Blend modes. \nNote: use the color alpha to fade the blend."
			},
			{
				"name":"To Offset Blend Mode",
				"description":"How to apply the Offset Color. Similar to Photoshop Blend modes. \nNote: use the color alpha to fade the blend."
			},
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Value",
				"description":"Tween from this value."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Value",
				"description":"Tween to this value."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Fade",
		"category":"Tween",
		"image":"./images/TweenFade.png",
		"description":"Fades a GameObject with a Material, Sprite, Image, Text, Light, AudioSource, or CanvasGroup component.\n\nNote: The Material Shader must support transparency. For example, in URP set the Surface Type to Transparent.\n\nTip: When using the Standard shader, set Rendering Mode to Fade for best fading effect.",
		"params": [
			{
				"name":"Game Object",
				"description":"A GameObject with a MeshRenderer, Sprite, Image, Text, Light, AudioSource, or CanvasGroup component."
			},
			{
				"name":"Tween Direction",
				"description":"Fade To or From value."
			},
			{
				"name":"Value",
				"description":"Value to fade to. E.g., alpha if fading an image, volume if fading audio..."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Float",
		"category":"Tween",
		"image":"./images/TweenFloat.png",
		"description":"Tween a float variable using a custom easing function.",
		"params": [
			{
				"name":"Variable",
				"description":"The variable to tween."
			},
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Value",
				"description":"Tween from this value."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Value",
				"description":"Tween to this value."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Int",
		"category":"Tween",
		"image":"./images/TweenInt.png",
		"description":"Tween an integer variable using a custom easing function. NOTE: Tweening is performed on float values and then rounded to the integer value.",
		"params": [
			{
				"name":"Variable",
				"description":"The variable to tween."
			},
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Value",
				"description":"Tween from this value."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Value",
				"description":"Tween to this value."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Position",
		"category":"Tween",
		"image":"./images/TweenPosition.png",
		"description":"Tween a GameObject's position. Note: This action assumes that GameObject targets do not change during the tween.",
		"params": [
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Target",
				"description":"Optionally use a GameObject as the from position."
			},
			{
				"name":"From Position",
				"description":"Position to tween from."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"To Target",
				"description":"Optionally use a GameObject as the to position."
			},
			{
				"name":"To Position",
				"description":"Position to tween to."
			},
			{
				"name":"Game Object",
				"description":"The Game Object to tween."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Punch",
		"category":"Tween",
		"image":"./images/TweenPunch.png",
		"description":"Punches a GameObject's position, rotation, or scale and springs back to starting state",
		"params": [
			{
				"name":"Punch Type",
				"description":"Punch position, rotation, or scale."
			},
			{
				"name":"Value",
				"description":"Punch magnitude."
			},
			{
				"name":"Game Object",
				"description":"The Game Object to tween."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Quaternion",
		"category":"Tween",
		"image":"./images/TweenQuaternion.png",
		"description":"Tween a Quaternion variable using a custom easing function.",
		"params": [
			{
				"name":"Interpolation",
				"description":"Type of interpolation. Linear is faster but looks worse if the rotations are far apart."
			},
			{
				"name":"Variable",
				"description":"The variable to tween."
			},
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Value",
				"description":"Tween from this value."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Value",
				"description":"Tween to this value."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Rect",
		"category":"Tween",
		"image":"./images/TweenRect.png",
		"description":"Tween a Rect variable using a custom easing function.",
		"params": [
			{
				"name":"Variable",
				"description":"The variable to tween."
			},
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Value",
				"description":"Tween from this value."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Value",
				"description":"Tween to this value."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Rotation",
		"category":"Tween",
		"image":"./images/TweenRotation.png",
		"description":"Tween a GameObject's rotation.",
		"params": [
			{
				"name":"From Options",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Target",
				"description":"Use this GameObject's rotation."
			},
			{
				"name":"From Rotation",
				"description":"Tween from this rotation"
			},
			{
				"name":"To Options",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Target",
				"description":"Use this GameObject's rotation"
			},
			{
				"name":"To Rotation",
				"description":"Tween to this rotation."
			},
			{
				"name":"Game Object",
				"description":"The Game Object to tween."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Scale",
		"category":"Tween",
		"image":"./images/TweenScale.png",
		"description":"Tween a GameObject's scale.",
		"params": [
			{
				"name":"From Options",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Target",
				"description":"Tween from this Target GameObject."
			},
			{
				"name":"From Scale",
				"description":"Tween from this Scale."
			},
			{
				"name":"To Options",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Target",
				"description":"Tween to this Target GameObject."
			},
			{
				"name":"To Scale",
				"description":"Tween to this Scale."
			},
			{
				"name":"Game Object",
				"description":"The Game Object to tween."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween UI Position",
		"category":"Tween",
		"image":"./images/TweenUiPosition.png",
		"description":"Tween position of UI GameObjects.",
		"params": [
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Target",
				"description":"Optionally use a GameObject as the from position."
			},
			{
				"name":"From Position",
				"description":"If a GameObject is specified, use this as an offset. Otherwise this is a world position."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"To Target",
				"description":"Optionally use a GameObject as the to position."
			},
			{
				"name":"To Position",
				"description":"If a GameObject is specified, use this as an offset. Otherwise this is a world position."
			},
			{
				"name":"Game Object",
				"description":"The Game Object to tween."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween UI Size",
		"category":"Tween",
		"image":"./images/TweenUiSize.png",
		"description":"Tween the Width and Height of a UI object. NOTE: The size is also influenced by anchors!",
		"params": [
			{
				"name":"Tween Direction",
				"description":"Tween To/From Target Size."
			},
			{
				"name":"Target Size",
				"description":"Target Size. NOTE: The size is also influenced by anchors!"
			},
			{
				"name":"Game Object",
				"description":"The Game Object to tween."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Vector2",
		"category":"Tween",
		"image":"./images/TweenVector2.png",
		"description":"Tween a Vector2 variable using a custom easing function.",
		"params": [
			{
				"name":"Variable",
				"description":"The variable to tween."
			},
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Value",
				"description":"Tween from this value."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Value",
				"description":"Tween to this value."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Tween Vector3",
		"category":"Tween",
		"image":"./images/TweenVector3.png",
		"description":"Tween a Vector3 variable using a custom easing function.",
		"params": [
			{
				"name":"Variable",
				"description":"The variable to tween."
			},
			{
				"name":"From Option",
				"description":"Setup where to tween from."
			},
			{
				"name":"From Value",
				"description":"Tween from this value."
			},
			{
				"name":"To Option",
				"description":"Setup where to tween to."
			},
			{
				"name":"To Value",
				"description":"Tween to this value."
			},
			{
				"name":"Start Delay",
				"description":"Delay before starting the tween."
			},
			{
				"name":"Ease Type",
				"description":"The type of easing to apply."
			},
			{
				"name":"Custom Curve",
				"description":"Custom tween curve. Note: Typically you would use the 0-1 range."
			},
			{
				"name":"Time",
				"description":"Length of tween in seconds."
			},
			{
				"name":"Real Time",
				"description":"Ignore any time scaling."
			},
			{
				"name":"Loop Type",
				"description":"Looping options."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when tween is finished."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Update Type",
				"description":"When to update the action.\nOnUpdate: The most common setting.\nOnLateUpdate: Update after everything else. Useful if dependent on another GameObect, e.g. following.\nOnFixedUpdate: Used to update physics e.g., GameObjects with RigidBody components."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Canvas Enable Raycast",
		"category":"UI",
		"image":"./images/UiCanvasEnableRaycast.png",
		"description":"Enable or disable Canvas Raycasting. Optionally reset on state exit",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to enable or disable Canvas Raycasting on."
			},
			{
				"name":"Enable Raycasting",
				"description":"Enable/disable raycasting. Uncheck to disable."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Canvas Force Update Canvases",
		"category":"UI",
		"image":"./images/UiCanvasForceUpdateCanvases.png",
		"description":"Force all canvases to update their content.\nCode that relies on up-to-date layout or content can call this method to ensure it before executing code that relies on it.",
		"params": [
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Canvas Group Set Alpha",
		"category":"UI",
		"image":"./images/UiCanvasGroupSetAlpha.png",
		"description":"Set Group Alpha.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a UI CanvasGroup component."
			},
			{
				"name":"Alpha",
				"description":"The alpha of the UI component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Canvas Group Set Properties",
		"category":"UI",
		"image":"./images/UiCanvasGroupSetProperties.png",
		"description":"Sets properties of a UI CanvasGroup component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI CanvasGroup component."
			},
			{
				"name":"Alpha",
				"description":"Canvas group alpha. Ranges from 0.0 to 1.0."
			},
			{
				"name":"Interactable",
				"description":"Is the group interactable (are the elements beneath the group enabled). Leave as None for no effect"
			},
			{
				"name":"Blocks Raycasts",
				"description":"Does this group block raycasting (allow collision). Leave as None for no effect"
			},
			{
				"name":"Ignore Parent Group",
				"description":"Should the group ignore parent groups? Leave as None for no effect"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state. Leave as None for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Canvas Scaler Get Scale Factor",
		"category":"UI",
		"image":"./images/UiCanvasScalerGetScaleFactor.png",
		"description":"Get the ScaleFactor of a CanvasScaler.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a UI CanvasScaler component."
			},
			{
				"name":"Scale Factor",
				"description":"The scaleFactor of the CanvasScaler component."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Canvas Scaler Set Scale Factor",
		"category":"UI",
		"image":"./images/UiCanvasScalerSetScaleFactor.png",
		"description":"Sets the ScaleFactor of a CanvasScaler.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a UI CanvasScaler component."
			},
			{
				"name":"Scale Factor",
				"description":"The scaleFactor of the UI CanvasScaler."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Event System Current Ray Cast All",
		"category":"UI",
		"image":"./images/UiEventSystemCurrentRayCastAll.png",
		"description":"The eventType will be executed on all components on the GameObject that can handle it.",
		"params": [
			{
				"name":"Screen Position",
				"description":"The ScreenPosition in pixels"
			},
			{
				"name":"Or Screen Position 2d",
				"description":"The ScreenPosition in a Vector2"
			},
			{
				"name":"Game Object List",
				"description":"GameObjects hit by the raycast"
			},
			{
				"name":"Hit Count",
				"description":"Number of hits"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Event System Execute Event",
		"category":"UI",
		"image":"./images/UiEventSystemExecuteEvent.png",
		"description":"The eventType will be executed on all components on the GameObject that can handle it.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with  an IEventSystemHandler component (a UI button for example)."
			},
			{
				"name":"Event Handler",
				"description":"The Type of handler to execute"
			},
			{
				"name":"Success",
				"description":"Event Sent if execution was possible on GameObject"
			},
			{
				"name":"Can Not Handle Event",
				"description":"Event Sent if execution was NOT possible on GameObject because it can not handle the eventHandler selected"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Get Last Pointer Data Info",
		"category":"UI",
		"image":"./images/UiGetLastPointerDataInfo.png",
		"description":"Gets pointer data on the last System Event.\nHINT: Use {{Hide Unused}} in the {{State Inspector}} to hide the unused parameters after selecting the ones you need.",
		"params": [
			{
				"name":"Click Count",
				"description":"Number of clicks in a row."
			},
			{
				"name":"Click Time",
				"description":"The last time a click event was sent."
			},
			{
				"name":"Delta",
				"description":"Pointer delta since last update."
			},
			{
				"name":"Dragging",
				"description":"Is a drag operation currently occuring."
			},
			{
				"name":"Input Button",
				"description":"The InputButton for this event."
			},
			{
				"name":"Eligible For Click",
				"description":"Is the pointer being pressed? (Not documented by Unity)"
			},
			{
				"name":"Enter Event Camera",
				"description":"The camera associated with the last OnPointerEnter event."
			},
			{
				"name":"Press Event Camera",
				"description":"The camera associated with the last OnPointerPress event."
			},
			{
				"name":"Is Pointer Moving",
				"description":"Is the pointer moving."
			},
			{
				"name":"Is Scrolling",
				"description":"Is scroll being used on the input device."
			},
			{
				"name":"Last Press",
				"description":"The GameObject for the last press event."
			},
			{
				"name":"Pointer Drag",
				"description":"The object that is receiving OnDrag."
			},
			{
				"name":"Pointer Enter",
				"description":"The object that received 'OnPointerEnter'."
			},
			{
				"name":"Pointer Id",
				"description":"Id of the pointer (touch id)."
			},
			{
				"name":"Pointer Press",
				"description":"The GameObject that received the OnPointerDown."
			},
			{
				"name":"Position",
				"description":"Current pointer position."
			},
			{
				"name":"Press Position",
				"description":"Position of the press."
			},
			{
				"name":"Raw Pointer Press",
				"description":"The object that the press happened on even if it can not handle the press event."
			},
			{
				"name":"Scroll Delta",
				"description":"The amount of scroll since the last update."
			},
			{
				"name":"Used",
				"description":"Is the event used?"
			},
			{
				"name":"Use Drag Threshold",
				"description":"Should a drag threshold be used?"
			},
			{
				"name":"World Normal",
				"description":"The normal of the last raycast in world coordinates."
			},
			{
				"name":"World Position",
				"description":"The world position of the last raycast."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Get Last Pointer Event Data Input Button",
		"category":"UI",
		"image":"./images/UiGetLastPointerEventDataInputButton.png",
		"description":"Gets pointer data Input Button on the last System event.",
		"params": [
			{
				"name":"Input Button",
				"description":"Store the Input Button pressed (Left, Right, Middle)"
			},
			{
				"name":"Left Click",
				"description":"Event to send if Left Button clicked."
			},
			{
				"name":"Middle Click",
				"description":"Event to send if Middle Button clicked."
			},
			{
				"name":"Right Click",
				"description":"Event to send if Right Button clicked."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Get Selected Game Object",
		"category":"UI",
		"image":"./images/UiGetSelectedGameObject.png",
		"description":"Returns the EventSystem's currently select GameObject.",
		"params": [
			{
				"name":"Store Game Object",
				"description":"The currently selected GameObject"
			},
			{
				"name":"Object Changed Event",
				"description":"Event sent when the selected GameObject changes"
			},
			{
				"name":"Every Frame",
				"description":"If true, each frame will check the currently selected GameObject"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Is Pointer Over UI Object",
		"category":"UI",
		"image":"./images/UiIsPointerOverUiObject.png",
		"description":"Checks if Pointer is over a UI object, optionally takes a pointer ID, otherwise uses the current event.",
		"params": [
			{
				"name":"Pointer Id",
				"description":"Optional PointerId. Leave as None to use the current event"
			},
			{
				"name":"Pointer Over UI",
				"description":"Event to send when the Pointer is over an UI object."
			},
			{
				"name":"Pointer Not Over UI",
				"description":"Event to send when the Pointer is NOT over an UI object."
			},
			{
				"name":"Is Pointer Over UI",
				"description":"Store if the pointer is over a UI object in a Bool variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Begin Drag Event",
		"category":"UI",
		"image":"./images/UiOnBeginDragEvent.png",
		"description":"Sends event when user starts to drag a GameObject.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Begin Drag Event",
				"description":"Event sent when OnBeginDrag is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Cancel Event",
		"category":"UI",
		"image":"./images/UiOnCancelEvent.png",
		"description":"Sends event when OnCancel is called on the GameObject.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Cancel Event",
				"description":"Event sent when OnCancelEvent is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Deselect Event",
		"category":"UI",
		"image":"./images/UiOnDeselectEvent.png",
		"description":"Sends event when OnDeselect is called on the GameObject.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Deselect Event",
				"description":"Event sent when OnDeselectEvent is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Drag Event",
		"category":"UI",
		"image":"./images/UiOnDragEvent.png",
		"description":"Sends event when OnDrag is called on the GameObject. Warning this event is sent every frame while dragging.\n Use GetLastPointerDataInfo action to get info from the event.",
		"params": [
			{
				"name":"On Drag Event",
				"description":"Event sent when OnDrag is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Drop Event",
		"category":"UI",
		"image":"./images/UiOnDropEvent.png",
		"description":"Sends event when OnDrop is called on the GameObject. Warning this event is sent everyframe while dragging.\n Use GetLastPointerDataInfo action to get info from the event.",
		"params": [
			{
				"name":"On Drop Event",
				"description":"Event sent when OnDrop is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On End Drag Event",
		"category":"UI",
		"image":"./images/UiOnEndDragEvent.png",
		"description":"Sends event Called by the EventSystem once dragging ends.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On End Drag Event",
				"description":"Event sent when OnEndDrag is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Initialize Potential Drag Event",
		"category":"UI",
		"image":"./images/UiOnInitializePotentialDragEvent.png",
		"description":"Sends event when Called by the EventSystem when a drag has been found, but before it is valid to begin the drag.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Initialize Potential Drag Event",
				"description":"Event sent when OnInitializePotentialDrag is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Move Event",
		"category":"UI",
		"image":"./images/UiOnMoveEvent.png",
		"description":"Sends event when OnMoveEvent is called on the GameObject.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Move Event",
				"description":"Event sent when OnMoveEvent is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Pointer Click Event",
		"category":"UI",
		"image":"./images/UiOnPointerClickEvent.png",
		"description":"Sends event when OnPointerClick is called on the GameObject.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Pointer Click Event",
				"description":"Event sent when PointerClick is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Pointer Down Event",
		"category":"UI",
		"image":"./images/UiOnPointerDownEvent.png",
		"description":"Sends event when OnPointerDown is called on the GameObject.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Pointer Down Event",
				"description":"Event sent when PointerDown is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Pointer Enter Event",
		"category":"UI",
		"image":"./images/UiOnPointerEnterEvent.png",
		"description":"Sends event when OnPointerEnter is called on the GameObject.\n Use GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Pointer Enter Event",
				"description":"Event sent when PointerEnter is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Pointer Exit Event",
		"category":"UI",
		"image":"./images/UiOnPointerExitEvent.png",
		"description":"Sends event when OnPointerExit is called on the GameObject. \nUse GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Pointer Exit Event",
				"description":"Event sent when PointerExit is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Pointer Up Event",
		"category":"UI",
		"image":"./images/UiOnPointerUpEvent.png",
		"description":"Sends event when OnPointerUp is called on the GameObject. \nUse GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Pointer Up Event",
				"description":"Event sent when PointerUp is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Scroll Event",
		"category":"UI",
		"image":"./images/UiOnScrollEvent.png",
		"description":"Sends event when OnScroll is called on the GameObject. \nUse GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Scroll Event",
				"description":"Event sent when OnScroll is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Select Event",
		"category":"UI",
		"image":"./images/UiOnSelectEvent.png",
		"description":"Sends event when Called by the EventSystem when a Select event occurs. \nUse GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Select Event",
				"description":"Event sent when OnSelect is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Submit Event",
		"category":"UI",
		"image":"./images/UiOnSubmitEvent.png",
		"description":"Sends event when OnSubmit is called on the GameObject. \nUse GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Submit Event",
				"description":"Event sent when OnSubmitEvent is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI On Update Selected Event",
		"category":"UI",
		"image":"./images/UiOnUpdateSelectedEvent.png",
		"description":"Sends event when Called by the EventSystem when the object associated with this EventTrigger is updated.\nUse GetLastPointerDataInfo action to get info from the event",
		"params": [
			{
				"name":"On Update Selected Event",
				"description":"Event sent when OnUpdateSelected is called"
			},
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Set Selected Game Object",
		"category":"UI",
		"image":"./images/UiSetSelectedGameObject.png",
		"description":"Sets the EventSystem's currently select GameObject.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject to select."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Layout Element Get Values",
		"category":"UI",
		"image":"./images/UiLayoutElementGetValues.png",
		"description":"Gets various properties of a UI Layout Element component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI LayoutElement component."
			},
			{
				"name":"Ignore Layout",
				"description":"Is this element use Layout constraints"
			},
			{
				"name":"Min Width Enabled",
				"description":"The minimum width enabled state"
			},
			{
				"name":"Min Width",
				"description":"The minimum width this layout element should have."
			},
			{
				"name":"Min Height Enabled",
				"description":"The minimum height enabled state"
			},
			{
				"name":"Min Height",
				"description":"The minimum height this layout element should have."
			},
			{
				"name":"Preferred Width Enabled",
				"description":"The preferred width enabled state"
			},
			{
				"name":"Preferred Width",
				"description":"The preferred width this layout element should have before additional available width is allocated."
			},
			{
				"name":"Preferred Height Enabled",
				"description":"The preferred height enabled state"
			},
			{
				"name":"Preferred Height",
				"description":"The preferred height this layout element should have before additional available height is allocated."
			},
			{
				"name":"Flexible Width Enabled",
				"description":"The flexible width enabled state"
			},
			{
				"name":"Flexible Width",
				"description":"The relative amount of additional available width this layout element should fill out relative to its siblings."
			},
			{
				"name":"Flexible Height Enabled",
				"description":"The flexible height enabled state"
			},
			{
				"name":"Flexible Height",
				"description":"The relative amount of additional available height this layout element should fill out relative to its siblings."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Layout Element Set Values",
		"category":"UI",
		"image":"./images/UiLayoutElementSetValues.png",
		"description":"Sets various properties of a UI Layout Element component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI LayoutElement component."
			},
			{
				"name":"Min Width",
				"description":"The minimum width this layout element should have."
			},
			{
				"name":"Min Height",
				"description":"The minimum height this layout element should have."
			},
			{
				"name":"Preferred Width",
				"description":"The preferred width this layout element should have before additional available width is allocated."
			},
			{
				"name":"Preferred Height",
				"description":"The preferred height this layout element should have before additional available height is allocated."
			},
			{
				"name":"Flexible Width",
				"description":"The relative amount of additional available width this layout element should fill out relative to its siblings."
			},
			{
				"name":"Flexible Height",
				"description":"The relative amount of additional available height this layout element should fill out relative to its siblings."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Navigation Explicit Get Properties",
		"category":"UI",
		"image":"./images/UiNavigationExplicitGetProperties.png",
		"description":"Gets the explicit navigation properties of a UI Selectable component. ",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Select On Down",
				"description":"The down Selectable."
			},
			{
				"name":"Select On Up",
				"description":"The up Selectable."
			},
			{
				"name":"Select On Left",
				"description":"The left Selectable."
			},
			{
				"name":"Select On Right",
				"description":"The right Selectable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Navigation Explicit Set Properties",
		"category":"UI",
		"image":"./images/UiNavigationExplicitSetProperties.png",
		"description":"Sets the explicit navigation properties of a UI Selectable component. Note that it will have no effect until Navigation mode is set to 'Explicit'.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Select On Down",
				"description":"The down Selectable. Leave as None for no effect"
			},
			{
				"name":"Select On Up",
				"description":"The up Selectable.  Leave as None for no effect"
			},
			{
				"name":"Select On Left",
				"description":"The left Selectable.  Leave as None for no effect"
			},
			{
				"name":"Select On Right",
				"description":"The right Selectable.  Leave as None for no effect"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Get Color Block",
		"category":"UI",
		"image":"./images/UiGetColorBlock.png",
		"description":"Gets the Color Block of a UI Selectable component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Fade Duration",
				"description":"The fade duration value. Leave as None for no effect"
			},
			{
				"name":"Color Multiplier",
				"description":"The color multiplier value. Leave as None for no effect"
			},
			{
				"name":"Normal Color",
				"description":"The normal color value. Leave as None for no effect"
			},
			{
				"name":"Pressed Color",
				"description":"The pressed color value. Leave as None for no effect"
			},
			{
				"name":"Highlighted Color",
				"description":"The highlighted color value. Leave as None for no effect"
			},
			{
				"name":"Disabled Color",
				"description":"The disabled color value. Leave as None for no effect"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Get Is Interactable",
		"category":"UI",
		"image":"./images/UiGetIsInteractable.png",
		"description":"Gets the interactable flag of a UI Selectable component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Is Interactable",
				"description":"The Interactable value"
			},
			{
				"name":"Is Interactable Event",
				"description":"Event sent if Component is Interactable"
			},
			{
				"name":"Is Not Interactable Event",
				"description":"Event sent if Component is not Interactable"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Navigation Get Mode",
		"category":"UI",
		"image":"./images/UiNavigationGetMode.png",
		"description":"Gets the navigation mode of a UI Selectable component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Navigation Mode",
				"description":"The navigation mode value"
			},
			{
				"name":"Automatic Event",
				"description":"Event sent if transition is ColorTint"
			},
			{
				"name":"Horizontal Event",
				"description":"Event sent if transition is ColorTint"
			},
			{
				"name":"Vertical Event",
				"description":"Event sent if transition is SpriteSwap"
			},
			{
				"name":"Explicit Event",
				"description":"Event sent if transition is Animation"
			},
			{
				"name":"No Navigation Event",
				"description":"Event sent if transition is none"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Navigation Set Mode",
		"category":"UI",
		"image":"./images/UiNavigationSetMode.png",
		"description":"Sets the navigation mode of a UI Selectable component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Navigation Mode",
				"description":"The navigation mode value"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Set Animation Triggers",
		"category":"UI",
		"image":"./images/UiSetAnimationTriggers.png",
		"description":"Sets the Animation Triggers of a UI Selectable component. Modifications will not be visible if transition is not Animation",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Normal Trigger",
				"description":"The normal trigger value. Leave as None for no effect"
			},
			{
				"name":"Highlighted Trigger",
				"description":"The highlighted trigger value. Leave as None for no effect"
			},
			{
				"name":"Pressed Trigger",
				"description":"The pressed trigger value. Leave as None for no effect"
			},
			{
				"name":"Disabled Trigger",
				"description":"The disabled trigger value. Leave as None for no effect"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Set Color Block",
		"category":"UI",
		"image":"./images/UiSetColorBlock.png",
		"description":"Sets the Color Block of a UI Selectable component. Modifications will not be visible if transition is not ColorTint",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Fade Duration",
				"description":"The fade duration value. Leave as None for no effect"
			},
			{
				"name":"Color Multiplier",
				"description":"The color multiplier value. Leave as None for no effect"
			},
			{
				"name":"Normal Color",
				"description":"The normal color value. Leave as None for no effect"
			},
			{
				"name":"Pressed Color",
				"description":"The pressed color value. Leave as None for no effect"
			},
			{
				"name":"Highlighted Color",
				"description":"The highlighted color value. Leave as None for no effect"
			},
			{
				"name":"Disabled Color",
				"description":"The disabled color value. Leave as None for no effect"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Set Is Interactable",
		"category":"UI",
		"image":"./images/UiSetIsInteractable.png",
		"description":"Sets the interactable flag of a UI Selectable component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Is Interactable",
				"description":"The Interactable value"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Transition Get Type",
		"category":"UI",
		"image":"./images/UiTransitionGetType.png",
		"description":"Gets the transition type of a UI Selectable component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Transition",
				"description":"The transition value"
			},
			{
				"name":"Color Tint Event",
				"description":"Event sent if transition is ColorTint"
			},
			{
				"name":"Sprite Swap Event",
				"description":"Event sent if transition is SpriteSwap"
			},
			{
				"name":"Animation Event",
				"description":"Event sent if transition is Animation"
			},
			{
				"name":"No Transition Event",
				"description":"Event sent if transition is none"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Transition Set Type",
		"category":"UI",
		"image":"./images/UiTransitionSetType.png",
		"description":"Sets the transition type of a UI Selectable component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Selectable component."
			},
			{
				"name":"Transition",
				"description":"The transition value"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Button Array",
		"category":"UI",
		"image":"./images/UiButtonArray.png",
		"description":"Set up multiple button events in a single action.",
		"params": [
			{
				"name":"Event Target",
				"description":"Where to send the events."
			},
			{
				"name":"Game Objects",
				"description":"The GameObject with the UI Button component."
			},
			{
				"name":"Click Events",
				"description":"Send this event when the button is Clicked."
			},
			{
				"name":"Click Index",
				"description":"The index of the last button clicked. (0 = first button, 1 = second, etc.)"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Button On Click Event",
		"category":"UI",
		"image":"./images/UiButtonOnClickEvent.png",
		"description":"Sends an event when a UI Button is clicked.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Button component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Send this event when Clicked."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Drop Down Add Options",
		"category":"UI",
		"image":"./images/UiDropDownAddOptions.png",
		"description":"Add multiple options to the options of the Dropdown UI Component",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI DropDown component."
			},
			{
				"name":"Option Text",
				"description":"The text to use for this option."
			},
			{
				"name":"Option Image",
				"description":"The image to use for this option."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Drop Down Clear Options",
		"category":"UI",
		"image":"./images/UiDropDownClearOptions.png",
		"description":"Clear the list of options in a UI Dropdown Component",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI DropDown component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Drop Down Get Selected Data",
		"category":"UI",
		"image":"./images/UiDropDownGetSelectedData.png",
		"description":"Get the selected value (zero based index), sprite and text from a UI Dropdown Component",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI DropDown component."
			},
			{
				"name":"Index",
				"description":"The selected index of the dropdown (zero based index)."
			},
			{
				"name":"Get Text",
				"description":"The selected text."
			},
			{
				"name":"Get Image",
				"description":"The selected text."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Drop Down Set Value",
		"category":"UI",
		"image":"./images/UiDropDownSetValue.png",
		"description":"Set the selected value (zero based index) of the UI Dropdown Component",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI DropDown component."
			},
			{
				"name":"Value",
				"description":"The selected index of the dropdown (zero based index)."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Graphic Cross Fade Alpha",
		"category":"UI",
		"image":"./images/UiGraphicCrossFadeAlpha.png",
		"description":"Tweens the alpha of the CanvasRenderer color associated with this Graphic.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with an Unity UI component."
			},
			{
				"name":"Alpha",
				"description":"The alpha target"
			},
			{
				"name":"Duration",
				"description":"The duration of the tween"
			},
			{
				"name":"Ignore Time Scale",
				"description":"Should ignore Time.scale?"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Graphic Cross Fade Color",
		"category":"UI",
		"image":"./images/UiGraphicCrossFadeColor.png",
		"description":"Tweens the color of the CanvasRenderer color associated with this Graphic.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a UI component."
			},
			{
				"name":"Color",
				"description":"The Color target of the UI component. Leave to none and set the individual color values, for example to affect just the alpha channel"
			},
			{
				"name":"Red",
				"description":"The red channel Color target of the UI component. Leave as None for no effect, else it overrides the color property"
			},
			{
				"name":"Green",
				"description":"The green channel Color target of the UI component. Leave as None for no effect, else it overrides the color property"
			},
			{
				"name":"Blue",
				"description":"The blue channel Color target of the UI component. Leave as None for no effect, else it overrides the color property"
			},
			{
				"name":"Alpha",
				"description":"The alpha channel Color target of the UI component. Leave as None for no effect, else it overrides the color property"
			},
			{
				"name":"Duration",
				"description":"The duration of the tween"
			},
			{
				"name":"Ignore Time Scale",
				"description":"Should ignore Time.scale?"
			},
			{
				"name":"Use Alpha",
				"description":"Should also Tween the alpha channel?"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Graphic Get Color",
		"category":"UI",
		"image":"./images/UiGraphicGetColor.png",
		"description":"Gets the color of a UI Graphic component. (E.g. UI Sprite)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI component."
			},
			{
				"name":"Color",
				"description":"The Color of the UI component"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Graphic Set Color",
		"category":"UI",
		"image":"./images/UiGraphicSetColor.png",
		"description":"Set Graphic Color. E.g. to set Sprite Color.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a UI component."
			},
			{
				"name":"Color",
				"description":"The Color of the UI component. Leave to none and set the individual color values, for example to affect just the alpha channel"
			},
			{
				"name":"Red",
				"description":"The red channel Color of the UI component. Leave to none for no effect, else it overrides the color property"
			},
			{
				"name":"Green",
				"description":"The green channel Color of the UI component. Leave to none for no effect, else it overrides the color property"
			},
			{
				"name":"Blue",
				"description":"The blue channel Color of the UI component. Leave to none for no effect, else it overrides the color property"
			},
			{
				"name":"Alpha",
				"description":"The alpha channel Color of the UI component. Leave to none for no effect, else it overrides the color property"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Image Get Fill Amount",
		"category":"UI",
		"image":"./images/UiImageGetFillAmount.png",
		"description":"Set The Fill Amount on a UI Image",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Image component."
			},
			{
				"name":"Image Fill Amount",
				"description":"The fill amount."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Image Get Sprite",
		"category":"UI",
		"image":"./images/UiImageGetSprite.png",
		"description":"Gets the source image sprite of a UI Image component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Image component."
			},
			{
				"name":"Sprite",
				"description":"The source sprite of the UI Image component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Image Set Fill Amount",
		"category":"UI",
		"image":"./images/UiImageSetFillAmount.png",
		"description":"Set The Fill Amount on a UI Image",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Image component."
			},
			{
				"name":"Image Fill Amount",
				"description":"The fill amount."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Image Set Raycast Target",
		"category":"UI",
		"image":"./images/UiImageSetRaycastTarget.png",
		"description":"Sets the raycast target of a UI Image component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Image UI component."
			},
			{
				"name":"Raycast Target",
				"description":"The raycast target value to be set"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Image Set Sprite",
		"category":"UI",
		"image":"./images/UiImageSetSprite.png",
		"description":"Sets the source image sprite of a UI Image component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Image UI component."
			},
			{
				"name":"Sprite",
				"description":"The source sprite of the UI Image component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Activate",
		"category":"UI",
		"image":"./images/UiInputFieldActivate.png",
		"description":"Activate a UI InputField component to begin processing Events. Optionally Deactivate on state exit",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Deactivate On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Deactivate",
		"category":"UI",
		"image":"./images/UiInputFieldDeactivate.png",
		"description":"Deactivate a UI InputField to stop the processing of Events and send OnSubmit if not canceled. Optionally Activate on state exit",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Activate On Exit",
				"description":"Activate when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Caret Blink Rate",
		"category":"UI",
		"image":"./images/UiInputFieldGetCaretBlinkRate.png",
		"description":"Gets the caret's blink rate of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Caret Blink Rate",
				"description":"The caret's blink rate for the UI InputField component."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Character Limit",
		"category":"UI",
		"image":"./images/UiInputFieldGetCharacterLimit.png",
		"description":"Gets the Character Limit value of a UI InputField component. This is the maximum number of characters that the user can type into the field.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Character Limit",
				"description":"The maximum number of characters that the user can type into the UI InputField component."
			},
			{
				"name":"Has No Limit Event",
				"description":"Event sent if limit is infinite (equal to 0)"
			},
			{
				"name":"Is Limited Event",
				"description":"Event sent if limit is more than 0"
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame, useful for animation"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Hide Mobile Input",
		"category":"UI",
		"image":"./images/UiInputFieldGetHideMobileInput.png",
		"description":"Gets the Hide Mobile Input value of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Hide Mobile Input",
				"description":"Store the Hide Mobile flag value of the UI InputField component."
			},
			{
				"name":"Mobile Input Hidden Event",
				"description":"Event sent if hide mobile input property is true"
			},
			{
				"name":"Mobile Input Shown Event",
				"description":"Event sent if hide mobile input property is false"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Is Focused",
		"category":"UI",
		"image":"./images/UiInputFieldGetIsFocused.png",
		"description":"Gets the focused state of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Is Focused",
				"description":"Store the is focused flag value of the UI InputField component."
			},
			{
				"name":"Isfocused Event",
				"description":"Event sent if inputField is focused"
			},
			{
				"name":"Is Not Focused Event",
				"description":"Event sent if nputField is not focused"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Place Holder",
		"category":"UI",
		"image":"./images/UiInputFieldGetPlaceHolder.png",
		"description":"Gets the placeHolder GameObject of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Place Holder",
				"description":"Store the placeholder for the UI InputField component."
			},
			{
				"name":"Place Holder Defined",
				"description":"true if placeholder is found"
			},
			{
				"name":"Found Event",
				"description":"Event sent if no placeholder is defined"
			},
			{
				"name":"Not Found Event",
				"description":"Event sent if a placeholder is defined"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Selection Color",
		"category":"UI",
		"image":"./images/UiInputFieldGetSelectionColor.png",
		"description":"Gets the selection color of a UI InputField component. This is the color of the highlighter to show what characters are selected",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Selection Color",
				"description":"This is the color of the highlighter to show what characters are selected of the UI InputField component."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Text",
		"category":"UI",
		"image":"./images/UiInputFieldGetText.png",
		"description":"Gets the text value of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Text",
				"description":"The text value of the UI InputField component."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Text As Float",
		"category":"UI",
		"image":"./images/UiInputFieldGetTextAsFloat.png",
		"description":"Gets the text value of a UI InputField component as a float.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Value",
				"description":"The text value as a float of the UI InputField component."
			},
			{
				"name":"Is Float",
				"description":"true if text resolves to a float"
			},
			{
				"name":"Is Float Event",
				"description":"true if text resolves to a float"
			},
			{
				"name":"Is Not Float Event",
				"description":"Event sent if text does not resolves to a float"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Text As Int",
		"category":"UI",
		"image":"./images/UiInputFieldGetTextAsInt.png",
		"description":"Gets the text value of a UI InputField component as an Int.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Value",
				"description":"Store the text value as an int."
			},
			{
				"name":"Is Int",
				"description":"True if text resolves to an int"
			},
			{
				"name":"Is Int Event",
				"description":"Event to send if text resolves to an int"
			},
			{
				"name":"Is Not Int Event",
				"description":"Event to send if text does NOT resolve to an int"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Get Was Canceled",
		"category":"UI",
		"image":"./images/UiInputFieldGetWasCanceled.png",
		"description":"Gets the cancel state of a UI InputField component. This relates to the last onEndEdit Event",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Was Canceled",
				"description":"The was canceled flag value of the UI InputField component."
			},
			{
				"name":"Was Canceled Event",
				"description":"Event sent if inputField was canceled"
			},
			{
				"name":"Was Not Canceled Event",
				"description":"Event sent if inputField was not canceled"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Move Caret To Text End",
		"category":"UI",
		"image":"./images/UiInputFieldMoveCaretToTextEnd.png",
		"description":"Move Caret to text end in a UI InputField component. Optionally select from the current caret position",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Shift",
				"description":"Define if we select or not from the current caret position. Default is true = no selection"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Move Caret To Text Start",
		"category":"UI",
		"image":"./images/UiInputFieldMoveCaretToTextStart.png",
		"description":"Move Caret to text start in a UI InputField component. Optionally select from the current caret position",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Shift",
				"description":"Define if we select or not from the current caret position. Default is true = no selection"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field On End Edit Event",
		"category":"UI",
		"image":"./images/UiInputFieldOnEndEditEvent.png",
		"description":"Fires an event when editing ended in a UI InputField component. Event string data will contain the text value, and the boolean will be true is it was a cancel action",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Send this event when editing ended."
			},
			{
				"name":"Text",
				"description":"The content of the InputField when edited ended"
			},
			{
				"name":"Was Canceled",
				"description":"The canceled state of the InputField when edited ended"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field On Submit Event",
		"category":"UI",
		"image":"./images/UiInputFieldOnSubmitEvent.png",
		"description":"Fires an event when user submits from a UI InputField component. \nThis only fires if the user press Enter, not when field looses focus or user escaped the field.\nEvent string data will contain the text value.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Send this event when editing ended."
			},
			{
				"name":"Text",
				"description":"The content of the InputField when submitting"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field On Value Change Event",
		"category":"UI",
		"image":"./images/UiInputFieldOnValueChangeEvent.png",
		"description":"Catches UI InputField onValueChanged event. Store the new value and/or send events. Event string data also contains the new value.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Send this event when value changed."
			},
			{
				"name":"Text",
				"description":"Store new value in string variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Set Asterix Char",
		"category":"UI",
		"image":"./images/UiInputFieldSetAsterixChar.png",
		"description":"Sets the Asterix Character of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Asterix Char",
				"description":"The asterix Character used for password field type of the UI InputField component. Only the first character will be used, the rest of the string will be ignored"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Set Caret Blink Rate",
		"category":"UI",
		"image":"./images/UiInputFieldSetCaretBlinkRate.png",
		"description":"Sets the caret's blink rate of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Caret Blink Rate",
				"description":"The caret's blink rate for the UI InputField component."
			},
			{
				"name":"Reset On Exit",
				"description":"Deactivate when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Set Character Limit",
		"category":"UI",
		"image":"./images/UiInputFieldSetCharacterLimit.png",
		"description":"Sets the maximum number of characters that the user can type into a UI InputField component. Optionally reset on exit",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Character Limit",
				"description":"The maximum number of characters that the user can type into the UI InputField component. 0 = infinite"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Set Hide Mobile Input",
		"category":"UI",
		"image":"./images/UiInputFieldSetHideMobileInput.png",
		"description":"Sets the Hide Mobile Input property of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Hide Mobile Input",
				"description":"The Hide Mobile Input flag value of the UI InputField component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Set Place Holder",
		"category":"UI",
		"image":"./images/UiInputFieldSetPlaceHolder.png",
		"description":"Sets the placeholder of a UI InputField component. Optionally reset on exit",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Placeholder",
				"description":"The placeholder (any graphic UI Component) for the UI InputField component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Set Selection Color",
		"category":"UI",
		"image":"./images/UiInputFieldSetSelectionColor.png",
		"description":"Sets the selection color of a UI InputField component. This is the color of the highlighter to show what characters are selected.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Selection Color",
				"description":"The color of the highlighter to show what characters are selected for the UI InputField component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Input Field Set Text",
		"category":"UI",
		"image":"./images/UiInputFieldSetText.png",
		"description":"Sets the text value of a UI InputField component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI InputField component."
			},
			{
				"name":"Text",
				"description":"The text of the UI InputField component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Raw Image Set Raycast Target",
		"category":"UI",
		"image":"./images/UiRawImageSetRaycastTarget.png",
		"description":"Sets the raycast target of a UI Raw Image component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the Raw Image UI component."
			},
			{
				"name":"Raycast Target",
				"description":"The raycast target value to be set"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Raw Image Set Texture",
		"category":"UI",
		"image":"./images/UiRawImageSetTexture.png",
		"description":"Sets the texture of a UI RawImage component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI RawImage component."
			},
			{
				"name":"Texture",
				"description":"The texture of the UI RawImage component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Rebuild",
		"category":"UI",
		"image":"./images/UiRebuild.png",
		"description":"Rebuild a UI Graphic component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Graphic component."
			},
			{
				"name":"Canvas Update",
				"description":"When to Update."
			},
			{
				"name":"Rebuild On Exit",
				"description":"Only Rebuild when state exits."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scrollbar Get Direction",
		"category":"UI",
		"image":"./images/UiScrollbarGetDirection.png",
		"description":"Gets the direction of a UI Scrollbar component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Scrollbar component."
			},
			{
				"name":"Direction",
				"description":"Store the direction of the UI Scrollbar."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scrollbar Get Value",
		"category":"UI",
		"image":"./images/UiScrollbarGetValue.png",
		"description":"Gets the value of a UI Scrollbar component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Scrollbar component."
			},
			{
				"name":"Value",
				"description":"The position value of the UI Scrollbar."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scrollbar On Value Changed",
		"category":"UI",
		"image":"./images/UiScrollbarOnValueChanged.png",
		"description":"Catches UI Scrollbar onValueChanged event. Store the new value and/or send events. Event float data will contain the new Scrollbar value",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Scrollbar component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Send this event when the UI Scrollbar value changes."
			},
			{
				"name":"Value",
				"description":"Store new value in float variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scrollbar Set Direction",
		"category":"UI",
		"image":"./images/UiScrollbarSetDirection.png",
		"description":"Sets the direction of a UI Scrollbar component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Scrollbar component."
			},
			{
				"name":"Direction",
				"description":"The direction of the UI Scrollbar."
			},
			{
				"name":"Include Rect Layouts",
				"description":"Include the  RectLayouts. Leave to none for no effect"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scrollbar Set Number Of Steps",
		"category":"UI",
		"image":"./images/UiScrollbarSetNumberOfSteps.png",
		"description":"Sets the number of distinct scroll positions allowed for a UI Scrollbar component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Scrollbar component."
			},
			{
				"name":"Value",
				"description":"The number of distinct scroll positions allowed for the UI Scrollbar."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scrollbar Set Size",
		"category":"UI",
		"image":"./images/UiScrollbarSetSize.png",
		"description":"Sets the fractional size of the handle of a UI Scrollbar component. Ranges from 0.0 to 1.0.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Scrollbar component."
			},
			{
				"name":"Value",
				"description":"The fractional size of the handle for the UI Scrollbar. Ranges from 0.0 to 1.0."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scrollbar Set Value",
		"category":"UI",
		"image":"./images/UiScrollbarSetValue.png",
		"description":"Sets the position value of a UI Scrollbar component. Ranges from 0.0 to 1.0.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Scrollbar component."
			},
			{
				"name":"Value",
				"description":"The position's value of the UI Scrollbar component. Ranges from 0.0 to 1.0."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scroll Rect Set Horizontal",
		"category":"UI",
		"image":"./images/UiScrollRectSetHorizontal.png",
		"description":"Sets the UI ScrollRect horizontal flag",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI ScrollRect component."
			},
			{
				"name":"Horizontal",
				"description":"The horizontal flag"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scroll Rect Set Normalized Position",
		"category":"UI",
		"image":"./images/UiScrollRectSetNormalizedPosition.png",
		"description":"The normalized scroll position as a Vector2 between (0,0) and (1,1) with (0,0) being the lower left corner.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI ScrollRect component."
			},
			{
				"name":"Normalized Position",
				"description":"The position's value of the UI ScrollRect component. Ranges from 0.0 to 1.0."
			},
			{
				"name":"Horizontal Position",
				"description":"The horizontal position's value of the UI ScrollRect component. Ranges from 0.0 to 1.0."
			},
			{
				"name":"Vertical Position",
				"description":"The vertical position's value of the UI ScrollRect component. Ranges from 0.0 to 1.0."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Scroll Rect Set Vertical",
		"category":"UI",
		"image":"./images/UiScrollRectSetVertical.png",
		"description":"Sets the UI ScrollRect vertical flag",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI ScrollRect component."
			},
			{
				"name":"Vertical",
				"description":"The vertical flag"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Get Direction",
		"category":"UI",
		"image":"./images/UiSliderGetDirection.png",
		"description":"Gets the direction of a UI Slider component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Direction",
				"description":"The direction of the UI Slider."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Get Min Max",
		"category":"UI",
		"image":"./images/UiSliderGetMinMax.png",
		"description":"Gets the minimum and maximum limits for the value of a UI Slider component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Min Value",
				"description":"Store the minimum value of the UI Slider."
			},
			{
				"name":"Max Value",
				"description":"Store the maximum value of the UI Slider."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Get Normalized Value",
		"category":"UI",
		"image":"./images/UiSliderGetNormalizedValue.png",
		"description":"Gets the normalized value (between 0 and 1) of a UI Slider component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Value",
				"description":"The normalized value (between 0 and 1) of the UI Slider."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Get Value",
		"category":"UI",
		"image":"./images/UiSliderGetValue.png",
		"description":"Gets the value of a UI Slider component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Value",
				"description":"The value of the UI Slider component."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Get Whole Numbers",
		"category":"UI",
		"image":"./images/UiSliderGetWholeNumbers.png",
		"description":"Gets the wholeNumbers property of a UI Slider component. If true, the Slider is constrained to integer values",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Whole Numbers",
				"description":"Is the Slider constrained to integer values?"
			},
			{
				"name":"Is Showing Whole Numbers Event",
				"description":"Event sent if slider is showing integers"
			},
			{
				"name":"Is Not Showing Whole Numbers Event",
				"description":"Event sent if slider is showing floats"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider On Value Changed Event",
		"category":"UI",
		"image":"./images/UiSliderOnValueChangedEvent.png",
		"description":"Catches onValueChanged event for a UI Slider component. Store the new value and/or send events. Event float data will contain the new slider value",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Send this event when Clicked."
			},
			{
				"name":"Value",
				"description":"Store the new value in float variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Set Direction",
		"category":"UI",
		"image":"./images/UiSliderSetDirection.png",
		"description":"Sets the direction of a UI Slider component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Direction",
				"description":"The direction of the UI Slider component."
			},
			{
				"name":"Include Rect Layouts",
				"description":"Include the  RectLayouts. Leave to none for no effect"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Set Min Max",
		"category":"UI",
		"image":"./images/UiSliderSetMinMax.png",
		"description":"Sets the minimum and maximum limits for the value of a UI Slider component. Optionally resets on exit",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Min Value",
				"description":"The minimum value of the UI Slider component. Leave as None for no effect"
			},
			{
				"name":"Max Value",
				"description":"The maximum value of the UI Slider component. Leave as None for no effect"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Set Normalized Value",
		"category":"UI",
		"image":"./images/UiSliderSetNormalizedValue.png",
		"description":"Sets the normalized value ( between 0 and 1) of a UI Slider component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Value",
				"description":"The normalized value ( between 0 and 1) of the UI Slider component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Set Value",
		"category":"UI",
		"image":"./images/UiSliderSetValue.png",
		"description":"Sets the value of a UI Slider component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Value",
				"description":"The value of the UI Slider component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Slider Set Whole Numbers",
		"category":"UI",
		"image":"./images/UiSliderSetWholeNumbers.png",
		"description":"Sets the wholeNumbers property of a UI Slider component. This defines if the slider will be constrained to integer values.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Slider component."
			},
			{
				"name":"Whole Numbers",
				"description":"Should the slider be constrained to integer values?"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Text Get Text",
		"category":"UI",
		"image":"./images/UiTextGetText.png",
		"description":"Gets the text value of a UI Text component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Text component."
			},
			{
				"name":"Text",
				"description":"The text value of the UI Text component."
			},
			{
				"name":"Every Frame",
				"description":"Runs every frame. Useful to animate values over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Text Set Text",
		"category":"UI",
		"image":"./images/UiTextSetText.png",
		"description":"Sets the text value of a UI Text component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Text component."
			},
			{
				"name":"Text",
				"description":"The text of the UI Text component."
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Toggle Get Is On",
		"category":"UI",
		"image":"./images/UiToggleGetIsOn.png",
		"description":"Gets the isOn value of a UI Toggle component. Optionally send events",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Toggle component."
			},
			{
				"name":"Value",
				"description":"The isOn Value of the UI Toggle component."
			},
			{
				"name":"Is On Event",
				"description":"Event sent when isOn Value is true."
			},
			{
				"name":"Is Off Event",
				"description":"Event sent when isOn Value is false."
			},
			{
				"name":"Every Frame",
				"description":"Repeats every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Toggle On Value Changed Event",
		"category":"UI",
		"image":"./images/UiToggleOnValueChangedEvent.png",
		"description":"Catches onValueChanged event in a UI Toggle component. Store the new value and/or send events. Event bool data will contain the new Toggle value",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Toggle component."
			},
			{
				"name":"Event Target",
				"description":"Where to send the event."
			},
			{
				"name":"Send Event",
				"description":"Send this event when the value changes."
			},
			{
				"name":"Value",
				"description":"Store the new value in bool variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"UI Toggle Set Is On",
		"category":"UI",
		"image":"./images/UiToggleSetIsOn.png",
		"description":"Sets the isOn property of a UI Toggle component.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with the UI Toggle component."
			},
			{
				"name":"Is On",
				"description":"Should the toggle be on?"
			},
			{
				"name":"Reset On Exit",
				"description":"Reset when exiting this state."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Component",
		"category":"UnityObject",
		"image":"./images/GetComponent.png",
		"description":"Gets a Component attached to a GameObject and stores it in an Object variable. NOTE: Set the Object variable's Object Type to get a component of that type. E.g., set Object Type to UnityEngine.AudioListener to get the AudioListener component on the camera.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject that owns the component."
			},
			{
				"name":"Store Component",
				"description":"Store the component in an Object variable.\nNOTE: Set theObject variable's Object Type to get a component of that type. E.g., set Object Type to UnityEngine.AudioListener to get the AudioListener component on the camera."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Property",
		"category":"UnityObject",
		"image":"./images/GetProperty.png",
		"description":"Gets the value of any public property or field on the targeted Unity Object and stores it in a variable. E.g., Drag and drop any component attached to a Game Object to access its properties.",
		"params": [
			{
				"name":"Target Property",
				"description":"TargetObject:\nAny object derived from UnityEngine.Object. For example, you can drag a Component from the Unity Inspector into this field. HINT: Use {{Lock}} to lock the current FSM selection if you need to drag a component from another GameObject.\nProperty:\nUse the property selection menu to select the property to get. Note: You can drill into the property, e.g., transform.localPosition.x.\nStore Result:\nStore the result in a variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if the property is changing over time."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Object Value",
		"category":"UnityObject",
		"image":"./images/SetObjectValue.png",
		"description":"Sets the value of an Object Variable.",
		"params": [
			{
				"name":"Object Variable",
				"description":"The Object Variable to set."
			},
			{
				"name":"Object Value",
				"description":"The value."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Property",
		"category":"UnityObject",
		"image":"./images/SetProperty.png",
		"description":"Sets the value of any public property or field on the targeted Unity Object. E.g., Drag and drop any component attached to a Game Object to access its properties.",
		"params": [
			{
				"name":"Target Property",
				"description":"Target Property. See below for more details."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Debug Vector2",
		"category":"Debug",
		"image":"./images/DebugVector2.png",
		"description":"Logs the value of a Vector2 Variable in the PlayMaker Log Window.",
		"params": [
			{
				"name":"Log Level",
				"description":"Info, Warning, or Error."
			},
			{
				"name":"Vector 2 Variable",
				"description":"Prints the value of a Vector2 variable in the PlayMaker log window."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Vector2 Length",
		"category":"Vector2",
		"image":"./images/GetVector2Length.png",
		"description":"Get Vector2 Length.",
		"params": [
			{
				"name":"Vector 2",
				"description":"The Vector2 to get the length from"
			},
			{
				"name":"Store Length",
				"description":"The Vector2 the length"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Vector2 XY",
		"category":"Vector2",
		"image":"./images/GetVector2XY.png",
		"description":"Get the XY channels of a Vector2 Variable and store them in Float Variables.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector2 source"
			},
			{
				"name":"Store X",
				"description":"The x component"
			},
			{
				"name":"Store Y",
				"description":"The y component"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random Vector2",
		"category":"Vector2",
		"image":"./images/SelectRandomVector2.png",
		"description":"Select a Random Vector2 from a Vector2 array.",
		"params": [
			{
				"name":"Vector 2 Array",
				"description":"A possible Vector2 choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this Vector2 being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Store Vector 2",
				"description":"Store the selected Vector2 in a Vector2 Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Vector2 Value",
		"category":"Vector2",
		"image":"./images/SetVector2Value.png",
		"description":"Sets the value of a Vector2 Variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector2 target"
			},
			{
				"name":"Vector 2 Value",
				"description":"The vector2 source"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Vector2 XY",
		"category":"Vector2",
		"image":"./images/SetVector2XY.png",
		"description":"Sets the XY channels of a Vector2 Variable. To leave any channel unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector2 target"
			},
			{
				"name":"Vector 2 Value",
				"description":"The vector2 source"
			},
			{
				"name":"X",
				"description":"The x component. Override vector2Value if set"
			},
			{
				"name":"Y",
				"description":"The y component.Override vector2Value if set"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Add",
		"category":"Vector2",
		"image":"./images/Vector2Add.png",
		"description":"Adds a value to Vector2 Variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector2 target"
			},
			{
				"name":"Add Vector",
				"description":"The vector2 to add"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Per Second",
				"description":"Add the value on a per second bases."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Add XY",
		"category":"Vector2",
		"image":"./images/Vector2AddXY.png",
		"description":"Adds a XY values to Vector2 Variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector2 target"
			},
			{
				"name":"Add X",
				"description":"The x component to add"
			},
			{
				"name":"Add Y",
				"description":"The y component to add"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			},
			{
				"name":"Per Second",
				"description":"Add the value on a per second bases."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Clamp Magnitude",
		"category":"Vector2",
		"image":"./images/Vector2ClampMagnitude.png",
		"description":"Clamps the Magnitude of Vector2 Variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The Vector2"
			},
			{
				"name":"Max Length",
				"description":"The maximum Magnitude"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 High Pass Filter",
		"category":"Vector2",
		"image":"./images/Vector2HighPassFilter.png",
		"description":"Use a high pass filter to isolate sudden changes in a Vector2 Variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"Vector2 Variable to filter. Should generally come from some constantly updated input."
			},
			{
				"name":"Filtering Factor",
				"description":"Determines how much influence new changes have."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Interpolate",
		"category":"Vector2",
		"image":"./images/Vector2Interpolate.png",
		"description":"Interpolates between 2 Vector2 values over a specified Time.",
		"params": [
			{
				"name":"Mode",
				"description":"The interpolation type"
			},
			{
				"name":"From Vector",
				"description":"The vector to interpolate from"
			},
			{
				"name":"To Vector",
				"description":"The vector to interpolate to"
			},
			{
				"name":"Time",
				"description":"the interpolate time"
			},
			{
				"name":"Store Result",
				"description":"the interpolated result"
			},
			{
				"name":"Finish Event",
				"description":"This event is fired when the interpolation is done."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Invert",
		"category":"Vector2",
		"image":"./images/Vector2Invert.png",
		"description":"Reverses the direction of a Vector2 Variable. Same as multiplying by -1.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector to invert"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Lerp",
		"category":"Vector2",
		"image":"./images/Vector2Lerp.png",
		"description":"Linearly interpolates between 2 vectors.",
		"params": [
			{
				"name":"From Vector",
				"description":"First Vector."
			},
			{
				"name":"To Vector",
				"description":"Second Vector."
			},
			{
				"name":"Amount",
				"description":"Interpolate between From Vector and ToVector by this amount. Value is clamped to 0-1 range. 0 = From Vector; 1 = To Vector; 0.5 = half way between."
			},
			{
				"name":"Store Result",
				"description":"Store the result in this vector variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Low Pass Filter",
		"category":"Vector2",
		"image":"./images/Vector2LowPassFilter.png",
		"description":"Use a low pass filter to reduce the influence of sudden changes in a Vector2 Variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"Vector2 Variable to filter. Should generally come from some constantly updated input"
			},
			{
				"name":"Filtering Factor",
				"description":"Determines how much influence new changes have. E.g., 0.1 keeps 10 percent of the unfiltered vector and 90 percent of the previously filtered value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Move Towards",
		"category":"Vector2",
		"image":"./images/Vector2MoveTowards.png",
		"description":"Moves a Vector2 towards a Target. Optionally sends an event when successful.",
		"params": [
			{
				"name":"Source",
				"description":"The Vector2 to Move"
			},
			{
				"name":"Target",
				"description":"A target Vector2 to move towards."
			},
			{
				"name":"Max Speed",
				"description":"The maximum movement speed. HINT: You can make this a variable to change it over time."
			},
			{
				"name":"Finish Distance",
				"description":"Distance at which the move is considered finished, and the Finish Event is sent."
			},
			{
				"name":"Finish Event",
				"description":"Event to send when the Finish Distance is reached."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Multiply",
		"category":"Vector2",
		"image":"./images/Vector2Multiply.png",
		"description":"Multiplies a Vector2 variable by a Float.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector to Multiply"
			},
			{
				"name":"Multiply By",
				"description":"The multiplication factor"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Normalize",
		"category":"Vector2",
		"image":"./images/Vector2Normalize.png",
		"description":"Normalizes a Vector2 Variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector to normalize"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Operator",
		"category":"Vector2",
		"image":"./images/Vector2Operator.png",
		"description":"Performs most possible operations on 2 Vector2: Dot product, Distance, Angle, Add, Subtract, Multiply, Divide, Min, Max",
		"params": [
			{
				"name":"Vector 1",
				"description":"The first vector"
			},
			{
				"name":"Vector 2",
				"description":"The second vector"
			},
			{
				"name":"Operation",
				"description":"The operation"
			},
			{
				"name":"Store Vector 2 Result",
				"description":"The Vector2 result when it applies."
			},
			{
				"name":"Store Float Result",
				"description":"The float result when it applies"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Per Second",
		"category":"Vector2",
		"image":"./images/Vector2PerSecond.png",
		"description":"Multiplies a Vector2 variable by Time.deltaTime. Useful for frame rate independent motion.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The Vector2"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Rotate Towards",
		"category":"Vector2",
		"image":"./images/Vector2RotateTowards.png",
		"description":"Rotates a Vector2 direction from Current towards Target.",
		"params": [
			{
				"name":"Current Direction",
				"description":"The current direction. This will be the result of the rotation as well."
			},
			{
				"name":"Target Direction",
				"description":"The direction to reach"
			},
			{
				"name":"Rotate Speed",
				"description":"Rotation speed in degrees per second"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Snap To Angle",
		"category":"Vector2",
		"image":"./images/Vector2SnapToAngle.png",
		"description":"Snap a Vector2 to an angle increment while maintaining length.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The vector to snap to an angle."
			},
			{
				"name":"Snap Angle",
				"description":"Angle increment to snap to."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Snap To Grid",
		"category":"Vector2",
		"image":"./images/Vector2SnapToGrid.png",
		"description":"Snap Vector2 coordinates to grid points.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"Vector2 Variable to snap."
			},
			{
				"name":"Grid Size",
				"description":"Grid Size."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector2 Subtract",
		"category":"Vector2",
		"image":"./images/Vector2Subtract.png",
		"description":"Subtracts a Vector2 value from a Vector2 variable.",
		"params": [
			{
				"name":"Vector 2 Variable",
				"description":"The Vector2 operand"
			},
			{
				"name":"Subtract Vector",
				"description":"The vector2 to subtract with"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Vector3 XYZ",
		"category":"Vector3",
		"image":"./images/GetVector3XYZ.png",
		"description":"Get the XYZ channels of a Vector3 Variable and store them in Float Variables.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The Vector3 variable to examine."
			},
			{
				"name":"Store X",
				"description":"Store X value in a float variable."
			},
			{
				"name":"Store Y",
				"description":"Store Y value in a float variable."
			},
			{
				"name":"Store Z",
				"description":"Store Z value in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Get Vector Length",
		"category":"Vector3",
		"image":"./images/GetVectorLength.png",
		"description":"Get Vector3 Length.",
		"params": [
			{
				"name":"Vector 3",
				"description":"The Vector3"
			},
			{
				"name":"Store Length",
				"description":"Store the length (magnitude) of the Vector3 value in a float variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Select Random Vector3",
		"category":"Vector3",
		"image":"./images/SelectRandomVector3.png",
		"description":"Select a Random Vector3 from a Vector3 array.",
		"params": [
			{
				"name":"Vector 3 Array",
				"description":"A possible Vector3 choice."
			},
			{
				"name":"Weights",
				"description":"The relative probability of this Vector3 being picked. E.g. a weight of 0.5 is half as likely to be picked as a weight of 1."
			},
			{
				"name":"Store Vector 3",
				"description":"Store the selected Vector3 in a Vector3 Variable."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Hands Position",
		"category":"Vector3",
		"image":"./images/SetHandsPosition.png",
		"description":"Get Vector3 Length.",
		"params": [
			{
				"name":"Game Object",
				"description":"TODO"
			},
			{
				"name":"Hands Dist",
				"description":"TODO"
			},
			{
				"name":"Hands Angle",
				"description":"TODO"
			},
			{
				"name":"Selected Point",
				"description":"TODO"
			},
			{
				"name":"Hand 01 Obj",
				"description":"TODO"
			},
			{
				"name":"Hand 02 Obj",
				"description":"TODO"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Vector3 Value",
		"category":"Vector3",
		"image":"./images/SetVector3Value.png",
		"description":"Sets the value of a Vector3 Variable.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"Vector3 variable to set."
			},
			{
				"name":"Vector 3 Value",
				"description":"Value to set variable to."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Set Vector3 XYZ",
		"category":"Vector3",
		"image":"./images/SetVector3XYZ.png",
		"description":"Sets the XYZ channels of a Vector3 Variable. To leave any channel unchanged, set variable to 'None'.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"Vector3 variable to set."
			},
			{
				"name":"Vector 3 Value",
				"description":"Set using another Vector3 variable and/or individual channels below."
			},
			{
				"name":"X",
				"description":"Set X channel."
			},
			{
				"name":"Y",
				"description":"Set Y channel."
			},
			{
				"name":"Z",
				"description":"Set Z channel."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Add",
		"category":"Vector3",
		"image":"./images/Vector3Add.png",
		"description":"Adds a value to Vector3 Variable.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"Vector3 variable to add to."
			},
			{
				"name":"Add Vector",
				"description":"Vector3 to add."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Per Second",
				"description":"Add over one second (multiplies values by Time.deltaTime). Note: Needs Every Frame checked."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Add XYZ",
		"category":"Vector3",
		"image":"./images/Vector3AddXYZ.png",
		"description":"Adds a XYZ values to Vector3 Variable.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The Vector3 Variable to add to."
			},
			{
				"name":"Add X",
				"description":"Add to the X axis."
			},
			{
				"name":"Add Y",
				"description":"Add to the Y axis."
			},
			{
				"name":"Add Z",
				"description":"Add to the Z axis."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			},
			{
				"name":"Per Second",
				"description":"Add over one second (multiplies values by Time.deltaTime). Note: Needs Every Frame checked."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Clamp Magnitude",
		"category":"Vector3",
		"image":"./images/Vector3ClampMagnitude.png",
		"description":"Clamps the Magnitude of Vector3 Variable.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The Vector3 variable to clamp."
			},
			{
				"name":"Max Length",
				"description":"Clamp to this max length."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Clamp Magnitude XZ",
		"category":"Vector3",
		"image":"./images/Vector3ClampMagnitudeXZ.png",
		"description":"Clamps the magnitude of Vector3 variable on the XZ Plane.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The Vector3 variable to clamp."
			},
			{
				"name":"Max Length",
				"description":"Clamp to this max length."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 High Pass Filter",
		"category":"Vector3",
		"image":"./images/Vector3HighPassFilter.png",
		"description":"Use a high pass filter to isolate sudden changes in a Vector3 Variable. Useful when working with Get Device Acceleration to remove the constant effect of gravity.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"Vector3 Variable to filter. Should generally come from some constantly updated input, e.g., acceleration."
			},
			{
				"name":"Filtering Factor",
				"description":"Determines how much influence new changes have."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Interpolate",
		"category":"Vector3",
		"image":"./images/Vector3Interpolate.png",
		"description":"Interpolates between 2 Vector3 values over a specified Time.",
		"params": [
			{
				"name":"Mode",
				"description":"The type of interpolation to use."
			},
			{
				"name":"From Vector",
				"description":"The start vector."
			},
			{
				"name":"To Vector",
				"description":"The end vector."
			},
			{
				"name":"Time",
				"description":"How long it should take to interpolate from start to end."
			},
			{
				"name":"Store Result",
				"description":"Store the interpolated vector in a Vector3 Variable."
			},
			{
				"name":"Finish Event",
				"description":"Optionally send this event when finished."
			},
			{
				"name":"Real Time",
				"description":"Ignore TimeScale e.g., if the game is paused."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Invert",
		"category":"Vector3",
		"image":"./images/Vector3Invert.png",
		"description":"Reverses the direction of a Vector3 Variable. Same as multiplying by -1.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The vector3 variable to invert."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Lerp",
		"category":"Vector3",
		"image":"./images/Vector3Lerp.png",
		"description":"Linearly interpolates between 2 vectors.",
		"params": [
			{
				"name":"From Vector",
				"description":"First Vector."
			},
			{
				"name":"To Vector",
				"description":"Second Vector."
			},
			{
				"name":"Amount",
				"description":"Interpolate between From Vector and ToVector by this amount. Value is clamped to 0-1 range. 0 = From Vector; 1 = To Vector; 0.5 = half way between."
			},
			{
				"name":"Store Result",
				"description":"Store the result in this vector variable."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame. Useful if any of the values are changing."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Low Pass Filter",
		"category":"Vector3",
		"image":"./images/Vector3LowPassFilter.png",
		"description":"Use a low pass filter to reduce the influence of sudden changes in a Vector3 Variable. Useful when working with Get Device Acceleration to isolate gravity.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"Vector3 Variable to filter. Should generally come from some constantly updated input, e.g., acceleration."
			},
			{
				"name":"Filtering Factor",
				"description":"Determines how much influence new changes have. E.g., 0.1 keeps 10 percent of the unfiltered vector and 90 percent of the previously filtered value."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Multiply",
		"category":"Vector3",
		"image":"./images/Vector3Multiply.png",
		"description":"Multiplies a Vector3 variable by a Float.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The vector3 variable to multiply."
			},
			{
				"name":"Multiply By",
				"description":"The float to multiply each axis of the Vector3 variable by."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Normalize",
		"category":"Vector3",
		"image":"./images/Vector3Normalize.png",
		"description":"Normalizes a Vector3 Variable. A normalized vector has a length of 1.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The Vector3 Variable to normalize."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Operator",
		"category":"Vector3",
		"image":"./images/Vector3Operator.png",
		"description":"Performs most possible operations on 2 Vector3: Dot product, Cross product, Distance, Angle, Project, Reflect, Add, Subtract, Multiply, Divide, Min, Max",
		"params": [
			{
				"name":"Vector 1",
				"description":"The first vector in the operation."
			},
			{
				"name":"Vector 2",
				"description":"The second vector in the operation."
			},
			{
				"name":"Operation",
				"description":"The operation to perform."
			},
			{
				"name":"Store Vector 3 Result",
				"description":"Store the result in a Vector3 Variable."
			},
			{
				"name":"Store Float Result",
				"description":"Store a float result in a Float Variable (E.g., Dot, Distance, Angle)"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Per Second",
		"category":"Vector3",
		"image":"./images/Vector3PerSecond.png",
		"description":"Multiplies a Vector3 variable by Time.deltaTime. Useful for frame rate independent motion.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The Vector3 variable to multiply by Time.deltaTime."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Rotate Towards",
		"category":"Vector3",
		"image":"./images/Vector3RotateTowards.png",
		"description":"Rotates a Vector3 direction from Current towards Target.",
		"params": [
			{
				"name":"Current Direction",
				"description":"The current direction vector."
			},
			{
				"name":"Target Direction",
				"description":"The target direction vector."
			},
			{
				"name":"Rotate Speed",
				"description":"Rotation speed in degrees per second."
			},
			{
				"name":"Max Magnitude",
				"description":"Max Magnitude per second"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Snap To Grid",
		"category":"Vector3",
		"image":"./images/Vector3SnapToGrid.png",
		"description":"Snap Vector3 coordinates to grid points.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"Vector3 Variable to snap."
			},
			{
				"name":"Grid Size",
				"description":"Grid Size."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Vector3 Subtract",
		"category":"Vector3",
		"image":"./images/Vector3Subtract.png",
		"description":"Subtracts a Vector3 value from a Vector3 variable.",
		"params": [
			{
				"name":"Vector 3 Variable",
				"description":"The Vector3 variable to subtract from."
			},
			{
				"name":"Subtract Vector",
				"description":"The Vector3 to subtract."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Error Event",
		"category":"Video",
		"image":"./images/VideoPlayerErrorEvent.png",
		"description":"Send error event from a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"On Error Event",
				"description":"event sent when VideoPlayer throws an error"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Frame Dropped Event",
		"category":"Video",
		"image":"./images/VideoPlayerFrameDroppedEvent.png",
		"description":"Send the framedropped event from a VideoPlayer when playback detects it does not keep up with the time source..",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"On Frame Dropped Event",
				"description":"event sent when playback detects it does not keep up with the time source."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Frame Ready Event",
		"category":"Video",
		"image":"./images/VideoPlayerFrameReadyEvent.png",
		"description":"Send the frameReady event from a VideoPlayer when a new frame is ready.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"On Frame Ready Event",
				"description":"event sent when a new frame is ready."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Aspect Ratio",
		"category":"Video",
		"image":"./images/VideoPlayerGetAspectRatio.png",
		"description":"Get how the video content will be stretched to fill the target area.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Aspect Ratio",
				"description":"The AspectRatio type"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Audio Output Mode",
		"category":"Video",
		"image":"./images/VideoPlayerGetAudioOutputMode.png",
		"description":"Get the Destination for the audio embedded in the video.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Audio Output Mode",
				"description":"The AudioOutputMode type"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Audio Track Count",
		"category":"Video",
		"image":"./images/VideoPlayerGetAudioTrackCount.png",
		"description":"Number of audio tracks found in the data source currently configured on a videoPlayer. For URL sources, this will only be set once the source preparation is completed. See VideoPlayer.Prepare.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Audio Track Count",
				"description":"Number of audio tracks found in the data source currently configured"
			},
			{
				"name":"Is Not Prepared",
				"description":"Event sent if source is not prepared"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Can Set Direct Audio Volume",
		"category":"Video",
		"image":"./images/VideoPlayerGetCanSetDirectAudioVolume.png",
		"description":"Check whether direct-output volume controls are supported for the current platform and video format on a VideoPlayer. (Read Only)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Can Set Direct Audio Volume",
				"description":"The Value"
			},
			{
				"name":"Can Set Direct Audio Volume Event",
				"description":"Event sent if DirectAudioVolume can be set"
			},
			{
				"name":"Can Not Set Direct Audio Volume Event",
				"description":"Event sent if DirectAudioVolume can not be set"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Can Set Playback Speed",
		"category":"Video",
		"image":"./images/VideoPlayerGetCanSetPlaybackSpeed.png",
		"description":"Check Whether the playback speed can be changed on a VideoPlayer. (Read Only)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Can Set Playback Speed",
				"description":"The Value"
			},
			{
				"name":"Can Set Time Playback Speed",
				"description":"Event sent if PlaybackSpeed can be set"
			},
			{
				"name":"Can Not Set Time Playback Speed",
				"description":"Event sent if PlaybackSpeed can not be set"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Can Skip On Drop",
		"category":"Video",
		"image":"./images/VideoPlayerGetCanSkipOnDrop.png",
		"description":"Check whether it's possible to set if the player can skips frames to catch up with current time. (Read Only)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Can Set Skip On Drop",
				"description":"The Value"
			},
			{
				"name":"Can Set Skip On Drop Event",
				"description":"Event sent if SkipOnDrop can be set"
			},
			{
				"name":"Can Not Set Skip On Drop Event",
				"description":"Event sent if SkipOnDrop can not be set"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Can Set Time",
		"category":"Video",
		"image":"./images/VideoPlayerGetCanSetTime.png",
		"description":"Check whether current time can be changed using the time or timeFrames property on a VideoPlayer. (Read Only)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Can Set Time",
				"description":"The Value"
			},
			{
				"name":"Can Set Time Event",
				"description":"Event sent if time can be set"
			},
			{
				"name":"Can Not Set Time Event",
				"description":"Event sent if time can not be set"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Can Set Time Source",
		"category":"Video",
		"image":"./images/VideoPlayerGetCanSetTimeSource.png",
		"description":"Check whether the time source followed by the video player can be changed. (Read Only)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Can Set Time Source",
				"description":"The Value"
			},
			{
				"name":"Can Set Time Source Event",
				"description":"Event sent if timeSource can be set"
			},
			{
				"name":"Can Not Set Time Source Event",
				"description":"Event sent if timeSource can not be set"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Can Step",
		"category":"Video",
		"image":"./images/VideoPlayerGetCanStep.png",
		"description":"Check if the VideoPlayer can step forwards into the video content. (Read Only)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Can Step",
				"description":"The Value"
			},
			{
				"name":"Can Step Event",
				"description":"Event sent if time can be set"
			},
			{
				"name":"Can Not Step Event",
				"description":"Event sent if time can not be set"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Controlled Audio Track Max Count",
		"category":"Video",
		"image":"./images/VideoPlayerGetControlledAudioTrackMaxCount.png",
		"description":"Static property. Maximum number of audio tracks that can be controlled. When playing audio from a URL, the number of audio tracks is not known in advance. It is up to the user to specify the number of controlled audio tracks through VideoPlayer.controlledAudioTrackCount. Other tracks will be ignored and silenced. In this scenario, VideoPlayer.audioTrackCount will be set to the actual number of tracks during playback, after prepration is complete. See VideoPlayer.Prepare.",
		"params": [
			{
				"name":"Controlled Audio Track Max Count",
				"description":"The maximum number of audio tracks that can be controlled"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Current Frame Index",
		"category":"Video",
		"image":"./images/VideoPlayerGetCurrentFrameIndex.png",
		"description":"Get the frame index currently being displayed by the player.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Frame Index",
				"description":"the frame index currently being displayed by the player."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Frame Count",
		"category":"Video",
		"image":"./images/VideoPlayerGetFrameCount.png",
		"description":"Number of frames in the current video content of a VideoPlayer. Note that this value may be adjusted as the frameCount changes during playback.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Frame Count",
				"description":"The Number of frames in the current video content of a VideoPlayer. Note that this value may be adjusted as the frameCount changes during playback."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Frame Rate",
		"category":"Video",
		"image":"./images/VideoPlayerGetFrameRate.png",
		"description":"Get the frame rate of the clip or URL in frames/second.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Frame Rate",
				"description":"The frame rate of the clip or URL in frames/second."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Is Looping",
		"category":"Video",
		"image":"./images/VideoPlayerGetIsLooping.png",
		"description":"Check Whether the player restarts from the beginning without when it reaches the end of the clip.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Is Looping",
				"description":"The Value"
			},
			{
				"name":"Is Looping Event",
				"description":"Event sent if content is looping"
			},
			{
				"name":"Is Not Looping Event",
				"description":"Event sent if content is not looping"
			},
			{
				"name":"Everyframe",
				"description":"Execute action everyframe. Events are however sent discretly, only when changes occurs"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Is Playing",
		"category":"Video",
		"image":"./images/VideoPlayerGetIsPlaying.png",
		"description":"Check Whether content is being played. (Read Only)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Is Playing",
				"description":"The Value"
			},
			{
				"name":"Is Playing Event",
				"description":"Event sent if content is playing"
			},
			{
				"name":"Is Not Playing Event",
				"description":"Event sent if content is not playing"
			},
			{
				"name":"Everyframe",
				"description":"Execute action everyframe. Events are however sent discretly, only when changes occurs"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Is Prepared",
		"category":"Video",
		"image":"./images/VideoPlayerGetIsPrepared.png",
		"description":"Check Whether the player has successfully prepared the content to be played. (Read Only)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Is Prepared",
				"description":"The Value"
			},
			{
				"name":"Is Prepared Event",
				"description":"Event sent if content is prepared"
			},
			{
				"name":"Is Not Prepared Event",
				"description":"Event sent if content is not yet prepared"
			},
			{
				"name":"Everyframe",
				"description":"Execute action everyframe. Events are however sent discretly, only when changes occurs"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Playback Speed",
		"category":"Video",
		"image":"./images/VideoPlayerGetPlaybackSpeed.png",
		"description":"Get the factor by which the basic playback rate will be multiplied.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Playback Speed",
				"description":"The factor by which the basic playback rate will be multiplied."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Play On Awake",
		"category":"Video",
		"image":"./images/VideoPlayerGetPlayOnAwake.png",
		"description":"Check Whether the content will start playing back as soon as the component awakes.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Is Playing On Awake",
				"description":"The Value"
			},
			{
				"name":"Is Playing On Awake Event",
				"description":"Event sent if content content will start playing back as soon as the component awakes"
			},
			{
				"name":"Is Not Playing On Awake Event",
				"description":"Event sent if content will not start playing back as soon as the component awakes"
			},
			{
				"name":"Everyframe",
				"description":"Execute action everyframe. Events are however sent discretly, only when changes occurs"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Render Mode",
		"category":"Video",
		"image":"./images/VideoPlayerGetRenderMode.png",
		"description":"Get where the video content will be drawn",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Render Mode",
				"description":"where the video content will be drawn"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Send Frame Ready Events",
		"category":"Video",
		"image":"./images/VideoPlayerGetSendFrameReadyEvents.png",
		"description":"Check Whether frameReady events are enabled",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Is Sending Frame Ready Events",
				"description":"The Value"
			},
			{
				"name":"Is Sending Frame Ready Events Event",
				"description":"Event sent if frameReady events are sent"
			},
			{
				"name":"Is Not Sending Frame Ready Events Event",
				"description":"Event sent if frameReady events are not sent"
			},
			{
				"name":"Everyframe",
				"description":"Execute action everyframe. Events are however sent discretly, only when changes occurs"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Skip On Drop",
		"category":"Video",
		"image":"./images/VideoPlayerGetSkipOnDrop.png",
		"description":"Check whether the player is allowed to skips frames to catch up with current time.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Skip On Drop",
				"description":"The Value"
			},
			{
				"name":"Does Skip On Drop Event",
				"description":"Event sent if SkipOnDrop is true"
			},
			{
				"name":"Do Not Skip On Drop Event",
				"description":"Event sent if SkipOnDrop is false"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Source",
		"category":"Video",
		"image":"./images/VideoPlayerGetSource.png",
		"description":"Get the video source type. It is valid to set both a VideoClip and a URL in the player. This property controls which one will get used for playback. When setting a new clip or URL, the source will automatically change to make the associated type current.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Source",
				"description":"The source type"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Target Camera",
		"category":"Video",
		"image":"./images/VideoPlayerGetTargetCamera.png",
		"description":"Get the Camera GameObject to draw to when VideoPlayer.renderMode is set to either Video.VideoTarget.CameraBackPlane or Video.VideoTarget.CameraFrontPlane.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Target Camera",
				"description":"The Camera GameObject"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Target Camera Alpha",
		"category":"Video",
		"image":"./images/VideoPlayerGetTargetCameraAlpha.png",
		"description":"Get the Overall transparency level of the target camera plane video.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Alpha",
				"description":"The Overall transparency level"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Target Material Property",
		"category":"Video",
		"image":"./images/VideoPlayerGetTargetMaterialProperty.png",
		"description":"Get the Material texture property which is targeted when VideoPlayer.renderMode is set to Video.VideoTarget.MaterialOverride.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Property",
				"description":"The Material texture property"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Target Texture",
		"category":"Video",
		"image":"./images/VideoPlayerGetTargetTexture.png",
		"description":"Get the RenderTexture to draw to when VideoPlayer.renderMode is set to Video.VideoTarget.RenderTexture.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Target Texture",
				"description":"The RenderTexture"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Texture",
		"category":"Video",
		"image":"./images/VideoPlayerGetTexture.png",
		"description":"Get Internal texture in which video content is placed. (ReadOnly)",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Texture",
				"description":"The Internal texture in which video content is placed"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Time",
		"category":"Video",
		"image":"./images/VideoPlayerGetTime.png",
		"description":"Get The player current time in seconds.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Time",
				"description":"The player current time in seconds"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Time Source",
		"category":"Video",
		"image":"./images/VideoPlayerGetTimeSource.png",
		"description":"Get The clock that the player follows to derive its current time",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Time Source",
				"description":"The time source type"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Url",
		"category":"Video",
		"image":"./images/VideoPlayerGetUrl.png",
		"description":"Get the file or HTTP URL that the player will read content from.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Url",
				"description":"The file or HTTP URL that the player will read content from."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Video Clip",
		"category":"Video",
		"image":"./images/VideoPlayerGetVideoClip.png",
		"description":"the videoClip of a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Video Clip",
				"description":"The video clip of the VideoPlayer"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Get Wait For First Frame",
		"category":"Video",
		"image":"./images/VideoPlayerGetWaitForFirstFrame.png",
		"description":"Check whether the player will wait for the first frame to be loaded into the texture before starting playback when VideoPlayer.playOnAwake is on",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Is Waiting For First Frame",
				"description":"The Value"
			},
			{
				"name":"Is Waiting For First Frame Event",
				"description":"Event sent if content will wait for first frame"
			},
			{
				"name":"Is Not Waiting For First Frame Event",
				"description":"Event sent if content will not wait for first frame"
			},
			{
				"name":"Everyframe",
				"description":"Execute action everyframe. Events are however sent discretly, only when changes occurs"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Loop Point Reached Event",
		"category":"Video",
		"image":"./images/VideoPlayerLoopPointReachedEvent.png",
		"description":"Send the loopPointReached event from a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"On Loop Point Reached Event",
				"description":"event invoked when the player reaches the end of the content to play."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Pause",
		"category":"Video",
		"image":"./images/VideoPlayerPause.png",
		"description":"Pauses the playback of a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Play",
		"category":"Video",
		"image":"./images/VideoPlayerPlay.png",
		"description":"Starts playback of a VideoPlayer. Initiates the preparation if not already done, in which case the playback will not start instantly.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Prepare",
		"category":"Video",
		"image":"./images/VideoPlayerPrepare.png",
		"description":"Initiates playback engine preparation of a VideoPlayer. The preparation consists of reserving the resources needed for playback, and preloading some or all of the content to be played. After this is done, frames can be received immediately.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Prepared Completed Event",
		"category":"Video",
		"image":"./images/VideoPlayerPreparedCompletedEvent.png",
		"description":"Send event from a VideoPlayer when the player preparation is complete.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"On Prepared Completed Event",
				"description":"event invoked when the player preparation is complete."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Seek Completed Event",
		"category":"Video",
		"image":"./images/VideoPlayerSeekCompletedEvent.png",
		"description":"Send event from a VideoPlayer after a seek operation completes..",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"On Seek Completed Event",
				"description":"event invoked when the player preparation is complete."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Aspect Ratio",
		"category":"Video",
		"image":"./images/VideoPlayerSetAspectRatio.png",
		"description":"Defines how the video content will be stretched to fill the target area.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Aspect Ratio",
				"description":"The AspectRatio type"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Audio Output Mode",
		"category":"Video",
		"image":"./images/VideoPlayerSetAudioOutputMode.png",
		"description":"Defines Destination for the audio embedded in the video.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Audio Output Mode",
				"description":"The AudioOutputMode type"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Playback Speed",
		"category":"Video",
		"image":"./images/VideoPlayerSetPlaybackSpeed.png",
		"description":"Set the factor by which the basic playback rate will be multiplied.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Playback Speed",
				"description":"The factor by which the basic playback rate will be multiplied."
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Play On Awake",
		"category":"Video",
		"image":"./images/VideoPlayerSetPlayOnAwake.png",
		"description":"Set Whether the content will start playing back as soon as the component awakes.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Play On Awake",
				"description":"The Value"
			},
			{
				"name":"Everyframe",
				"description":"Execute action everyframe. Events are however sent discretly, only when changes occurs"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Render Mode",
		"category":"Video",
		"image":"./images/VideoPlayerSetRenderMode.png",
		"description":"Set where the video content will be drawn",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Render Mode",
				"description":"where the video content will be drawn"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Send Frame Ready Events",
		"category":"Video",
		"image":"./images/VideoPlayerSetSendFrameReadyEvents.png",
		"description":"Set Whether frameReady events are enabled",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Send Frame Ready Events",
				"description":"The Value"
			},
			{
				"name":"Everyframe",
				"description":"Execute action everyframe. Events are however sent discretly, only when changes occurs"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Skip On Drop",
		"category":"Video",
		"image":"./images/VideoPlayerSetSkipOnDrop.png",
		"description":"Set whether the player is allowed to skips frames to catch up with current time.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Skip On Drop",
				"description":"The Value"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Source",
		"category":"Video",
		"image":"./images/VideoPlayerSetSource.png",
		"description":"Set the video source type. It is valid to set both a VideoClip and a URL in the player. This property controls which one will get used for playback. When setting a new clip or URL, the source will automatically change to make the associated type current.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Source",
				"description":"The source type"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Target Camera",
		"category":"Video",
		"image":"./images/VideoPlayerSetTargetCamera.png",
		"description":"Set The Camera GameObject to draw to when VideoPlayer.renderMode is set to either Video.VideoTarget.CameraBackPlane or Video.VideoTarget.CameraFrontPlane.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Target Camera",
				"description":"The Camera GameObject"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Target Camera Alpha",
		"category":"Video",
		"image":"./images/VideoPlayerSetTargetCameraAlpha.png",
		"description":"Set the Overall transparency level of the target camera plane video.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Alpha",
				"description":"The Overall transparency level"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Target Material Property",
		"category":"Video",
		"image":"./images/VideoPlayerSetTargetMaterialProperty.png",
		"description":"Set the Material texture property which is targeted when VideoPlayer.renderMode is set to Video.VideoTarget.MaterialOverride.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Property",
				"description":"The Material texture property"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Target Texture",
		"category":"Video",
		"image":"./images/VideoPlayerSetTargetTexture.png",
		"description":"Set the RenderTexture to draw to when VideoPlayer.renderMode is set to Video.VideoTarget.RenderTexture.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Target Texture",
				"description":"The RenderTexture"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Time",
		"category":"Video",
		"image":"./images/VideoPlayerSetTime.png",
		"description":"Sets the time value of a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Time",
				"description":"The time Value"
			},
			{
				"name":"Can Not Set Time",
				"description":"Event sent if time can not be set"
			},
			{
				"name":"Every Frame",
				"description":"Repeat every frame."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Time Source",
		"category":"Video",
		"image":"./images/VideoPlayerSetTimeSource.png",
		"description":"Sets Time source followed by the VideoPlayer when reading content.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Time Source",
				"description":"The timeSource Value"
			},
			{
				"name":"Can Not Set Time",
				"description":"Event sent if time can not be set"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Url",
		"category":"Video",
		"image":"./images/VideoPlayerSetUrl.png",
		"description":"Sets the url value of a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Url",
				"description":"The url Value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Video Clip",
		"category":"Video",
		"image":"./images/VideoPlayerSetVideoClip.png",
		"description":"Sets the VideoClip of a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with a VideoPlayer component."
			},
			{
				"name":"Video Clip",
				"description":"The VideoClip."
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Set Wait For First Frame",
		"category":"Video",
		"image":"./images/VideoPlayerSetWaitForFirstFrame.png",
		"description":"Set whether the player will wait for the first frame to be loaded into the texture before starting playback when VideoPlayer.playOnAwake is on",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"Wait For First Frame",
				"description":"The Value"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Started Event",
		"category":"Video",
		"image":"./images/VideoPlayerStartedEvent.png",
		"description":"Send the started event from a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			},
			{
				"name":"On Started Event",
				"description":"event sent when VideoPlayer started"
			}
		]
		,"seeAlso": [
		]
	},
	{
		"name":"Video Player Step Forward",
		"category":"Video",
		"image":"./images/VideoPlayerStepForward.png",
		"description":"Advances the current time by one frame immediately of a VideoPlayer.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			}
		]
		,"seeAlso": [
		]},
	{
		"name":"Video Player Stop",
		"category":"Video",
		"image":"./images/VideoPlayerStop.png",
		"description":"Stops playback of a VideoPlayer. Pauses the playback and sets the current time to 0.",
		"params": [
			{
				"name":"Game Object",
				"description":"The GameObject with as VideoPlayer component."
			}
		]
		,"seeAlso": [
		]},
  {
		"name":"WWW Object",
		"category":"WWW",
		"image":"./images/WWWObject.png",
		"description":"Gets data from a url and store it in variables. See Unity WWW docs for more details.",
		"params": [
			{
				"name":"Url",
				"description":"Url to download data from."
			},
			{
				"name":"Store Text",
				"description":"Gets text from the url."
			},
			{
				"name":"Store Texture",
				"description":"Gets a Texture from the url."
			},
			{
				"name":"Error String",
				"description":"Error message if there was an error during the download."
			},
			{
				"name":"Progress",
				"description":"How far the download progressed (0-1)."
			},
			{
				"name":"Is Done",
				"description":"Event to send when the data has finished loading (progress = 1)."
			},
			{
				"name":"Is Error",
				"description":"Event to send if there was an error."
			}
		]
		,"seeAlso": [
		]
	}
]
